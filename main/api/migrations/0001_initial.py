# Generated by Django 5.2.4 on 2025-07-31 12:50

import api.models
import django.contrib.gis.db.models.fields
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Plan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(choices=[('A', 'Plan A'), ('B', 'Plan B')], max_length=1, unique=True, verbose_name='플랜 코드')),
                ('name', models.CharField(max_length=50, verbose_name='플랜 이름')),
                ('description', models.TextField(blank=True, verbose_name='설명')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='태그명')),
            ],
        ),
        migrations.CreateModel(
            name='Visitor',
            fields=[
                ('uuid', models.CharField(default=api.models.generate_uuid, editable=False, max_length=32, primary_key=True, serialize=False, verbose_name='방문자 UUID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성 시각')),
            ],
        ),
        migrations.CreateModel(
            name='BusinessType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='업종명')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='children', to='api.businesstype')),
            ],
        ),
        migrations.CreateModel(
            name='AnalysisRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('point', django.contrib.gis.db.models.fields.PointField(blank=True, geography=True, null=True, srid=4326, verbose_name='입력 좌표(lon/lat)')),
                ('address', models.CharField(blank=True, max_length=255, verbose_name='입력 주소')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='요청 시각')),
                ('business_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='analysis_requests', to='api.businesstype')),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analysis_requests', to='api.plan')),
                ('visitor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analysis_requests', to='api.visitor')),
            ],
            options={
                'verbose_name': '분석 요청',
                'verbose_name_plural': '분석 요청 내역',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CandidateSpot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('point', django.contrib.gis.db.models.fields.PointField(geography=True, srid=4326, verbose_name='좌표(lon/lat)')),
                ('address', models.CharField(max_length=255, verbose_name='주소')),
                ('region', models.CharField(blank=True, max_length=100, verbose_name='지역명')),
                ('monthly_rent', models.PositiveIntegerField(verbose_name='월세(만원)')),
                ('deposit', models.PositiveIntegerField(default=0, verbose_name='보증금(만원)')),
                ('daily_footfall_avg', models.PositiveIntegerField(default=0, verbose_name='일평균 유동인구')),
                ('allow_business_types', models.ManyToManyField(blank=True, related_name='candidate_spots', to='api.businesstype')),
                ('tags', models.ManyToManyField(blank=True, related_name='candidate_spots', to='api.tag')),
            ],
            options={
                'verbose_name': '후보 입지',
                'verbose_name_plural': '후보 입지 목록',
            },
        ),
        migrations.CreateModel(
            name='Photo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='analysis_photos/%Y/%m/%d', verbose_name='이미지')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('analysis_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='api.analysisrequest')),
            ],
        ),
        migrations.CreateModel(
            name='Recommendation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.FloatField(verbose_name='추천 점수')),
                ('description', models.TextField(blank=True, verbose_name='추천 사유')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('analysis_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recommendations', to='api.analysisrequest')),
                ('business_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recommendations', to='api.businesstype')),
                ('candidate_spot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recommendations', to='api.candidatespot')),
            ],
            options={
                'verbose_name': '추천 결과',
                'verbose_name_plural': '추천 결과 목록',
                'ordering': ['-score'],
            },
        ),
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('recommendation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorites', to='api.recommendation')),
                ('visitor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorites', to='api.visitor')),
            ],
            options={
                'verbose_name': '즐겨찾기',
                'verbose_name_plural': '즐겨찾기 목록',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='RecommendationTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recommendation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.recommendation')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.tag')),
            ],
            options={
                'verbose_name': '추천-태그 연결',
                'verbose_name_plural': '추천-태그 연결 목록',
                'unique_together': {('recommendation', 'tag')},
            },
        ),
        migrations.AddIndex(
            model_name='candidatespot',
            index=models.Index(fields=['point'], name='api_candida_point_0fb0e0_idx'),
        ),
        migrations.AddIndex(
            model_name='candidatespot',
            index=models.Index(fields=['monthly_rent'], name='api_candida_monthly_976c65_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='favorite',
            unique_together={('visitor', 'recommendation')},
        ),
    ]
