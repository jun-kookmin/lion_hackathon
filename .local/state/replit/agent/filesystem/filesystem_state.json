{"file_contents":{"drizzle.config.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"replit.md":{"content":"# Overview\n\nThis is a full-stack web application built with React on the frontend and Express.js on the backend. The application appears to be a location-based service or recommendation platform, featuring a mobile-first design with Korean language support. The frontend uses modern React patterns with TypeScript, while the backend provides REST API endpoints with PostgreSQL database integration through Drizzle ORM.\n\n# User Preferences\n\nPreferred communication style: Simple, everyday language.\n\n# System Architecture\n\n## Frontend Architecture\n- **Framework**: React 18 with TypeScript and Vite for build tooling\n- **Styling**: Tailwind CSS with shadcn/ui component library for consistent design system\n- **Routing**: Wouter for lightweight client-side routing\n- **State Management**: TanStack Query (React Query) for server state management\n- **Form Handling**: React Hook Form with Zod validation schemas\n- **UI Components**: Extensive use of Radix UI primitives wrapped in custom shadcn/ui components\n\n## Backend Architecture\n- **Runtime**: Node.js with Express.js framework\n- **Language**: TypeScript with ES modules\n- **API Design**: RESTful API structure with `/api` prefix for all endpoints\n- **Development**: tsx for TypeScript execution and hot reloading\n- **Build Process**: esbuild for production bundling with external package handling\n\n## Data Storage\n- **Database**: PostgreSQL with Neon serverless database driver\n- **ORM**: Drizzle ORM for type-safe database operations\n- **Schema Management**: Drizzle Kit for migrations and schema management\n- **Current Schema**: Basic user table with id, username, and password fields\n- **Development Storage**: In-memory storage implementation for development/testing\n\n## Authentication & Session Management\n- **Session Storage**: PostgreSQL-based sessions using connect-pg-simple\n- **Session Configuration**: Prepared for cookie-based session management\n\n## Development Tools & Configuration\n- **Build System**: Vite with React plugin and custom path aliases\n- **Code Quality**: TypeScript strict mode with comprehensive type checking\n- **Styling**: PostCSS with Tailwind CSS and autoprefixer\n- **Asset Handling**: Support for attached assets and Figma exports\n- **Development Enhancements**: Replit-specific plugins for error overlay and cartographer\n\n# External Dependencies\n\n## Core Framework Dependencies\n- **@neondatabase/serverless**: Serverless PostgreSQL driver for Neon database\n- **drizzle-orm**: Type-safe ORM for database operations\n- **express**: Web application framework for Node.js\n- **react**: UI library for building user interfaces\n- **vite**: Fast build tool and development server\n\n## UI Component Libraries\n- **@radix-ui/react-***: Comprehensive set of headless UI primitives (accordion, dialog, dropdown, forms, etc.)\n- **@tanstack/react-query**: Server state management and caching\n- **tailwindcss**: Utility-first CSS framework\n- **class-variance-authority**: Utility for creating type-safe component variants\n- **lucide-react**: Icon library for React components\n\n## Development & Build Tools\n- **typescript**: Static type checking\n- **tsx**: TypeScript execution engine\n- **esbuild**: Fast JavaScript bundler\n- **drizzle-kit**: Database schema management and migration tool\n- **@replit/vite-plugin-***: Replit-specific development enhancements\n\n## Form & Validation\n- **react-hook-form**: Forms with easy validation\n- **@hookform/resolvers**: Validation resolvers for react-hook-form\n- **zod**: Schema validation library\n- **drizzle-zod**: Integration between Drizzle ORM and Zod\n\n## Utility Libraries\n- **date-fns**: Date manipulation library\n- **clsx** & **tailwind-merge**: Utility functions for conditional CSS classes\n- **wouter**: Minimalist routing for React\n- **cmdk**: Command palette component","size_bytes":3788},"tailwind.config.ts":{"content":"module.exports = {\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\",\n    \"./src/**/*.{html,js,ts,jsx,tsx}\",\n    \"app/**/*.{ts,tsx}\",\n    \"components/**/*.{ts,tsx}\",\n  ],\n  theme: {\n    extend: {\n      colors: {\n        \"gray-color6-f6f7f9\": \"var(--gray-color6-f6f7f9)\",\n        border: \"hsl(var(--border))\",\n        input: \"hsl(var(--input))\",\n        ring: \"hsl(var(--ring))\",\n        background: \"hsl(var(--background))\",\n        foreground: \"hsl(var(--foreground))\",\n        primary: {\n          DEFAULT: \"hsl(var(--primary))\",\n          foreground: \"hsl(var(--primary-foreground))\",\n        },\n        secondary: {\n          DEFAULT: \"hsl(var(--secondary))\",\n          foreground: \"hsl(var(--secondary-foreground))\",\n        },\n        destructive: {\n          DEFAULT: \"hsl(var(--destructive))\",\n          foreground: \"hsl(var(--destructive-foreground))\",\n        },\n        muted: {\n          DEFAULT: \"hsl(var(--muted))\",\n          foreground: \"hsl(var(--muted-foreground))\",\n        },\n        accent: {\n          DEFAULT: \"hsl(var(--accent))\",\n          foreground: \"hsl(var(--accent-foreground))\",\n        },\n        popover: {\n          DEFAULT: \"hsl(var(--popover))\",\n          foreground: \"hsl(var(--popover-foreground))\",\n        },\n        card: {\n          DEFAULT: \"hsl(var(--card))\",\n          foreground: \"hsl(var(--card-foreground))\",\n        },\n      },\n      fontFamily: {\n        \"button-2\": \"var(--button-2-font-family)\",\n        sans: [\n          \"ui-sans-serif\",\n          \"system-ui\",\n          \"sans-serif\",\n          '\"Apple Color Emoji\"',\n          '\"Segoe UI Emoji\"',\n          '\"Segoe UI Symbol\"',\n          '\"Noto Color Emoji\"',\n        ],\n      },\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: { height: \"0\" },\n          to: { height: \"var(--radix-accordion-content-height)\" },\n        },\n        \"accordion-up\": {\n          from: { height: \"var(--radix-accordion-content-height)\" },\n          to: { height: \"0\" },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n    },\n    container: { center: true, padding: \"2rem\", screens: { \"2xl\": \"1400px\" } },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n  darkMode: [\"class\"],\n};\n","size_bytes":2489},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n  server: {\n    fs: {\n      strict: true,\n      deny: [\"**/.*\"],\n    },\n  },\n});\n","size_bytes":971},"server/index.ts":{"content":"import express, { type Request, Response, NextFunction } from \"express\";\nimport { registerRoutes } from \"./routes\";\nimport { setupVite, serveStatic, log } from \"./vite\";\n\nconst app = express();\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"…\";\n      }\n\n      log(logLine);\n    }\n  });\n\n  next();\n});\n\n(async () => {\n  const server = await registerRoutes(app);\n\n  app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n    const status = err.status || err.statusCode || 500;\n    const message = err.message || \"Internal Server Error\";\n\n    res.status(status).json({ message });\n    throw err;\n  });\n\n  // Serve static files from public directory\n  app.use(express.static('public'));\n\n  // importantly only setup vite in development and after\n  // setting up all the other routes so the catch-all route\n  // doesn't interfere with the other routes\n  if (app.get(\"env\") === \"development\") {\n    await setupVite(app, server);\n  } else {\n    serveStatic(app);\n  }\n\n  // ALWAYS serve the app on port 5000\n  // this serves both the API and the client.\n  // It is the only port that is not firewalled.\n  const port = 5000;\n  server.listen({\n    port,\n    host: \"0.0.0.0\",\n    reusePort: true,\n  }, () => {\n    log(`serving on port ${port}`);\n  });\n})();\n","size_bytes":2005},"server/routes.ts":{"content":"import type { Express } from \"express\";\nimport { createServer, type Server } from \"http\";\nimport { storage } from \"./storage\";\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  // put application routes here\n  // prefix all routes with /api\n\n  // use storage to perform CRUD operations on the storage interface\n  // e.g. storage.insertUser(user) or storage.getUserByUsername(username)\n\n  const httpServer = createServer(app);\n\n  return httpServer;\n}\n","size_bytes":473},"server/storage.ts":{"content":"import { users, type User, type InsertUser } from \"@shared/schema\";\n\n// modify the interface with any CRUD methods\n// you might need\n\nexport interface IStorage {\n  getUser(id: number): Promise<User | undefined>;\n  getUserByUsername(username: string): Promise<User | undefined>;\n  createUser(user: InsertUser): Promise<User>;\n}\n\nexport class MemStorage implements IStorage {\n  private users: Map<number, User>;\n  currentId: number;\n\n  constructor() {\n    this.users = new Map();\n    this.currentId = 1;\n  }\n\n  async getUser(id: number): Promise<User | undefined> {\n    return this.users.get(id);\n  }\n\n  async getUserByUsername(username: string): Promise<User | undefined> {\n    return Array.from(this.users.values()).find(\n      (user) => user.username === username,\n    );\n  }\n\n  async createUser(insertUser: InsertUser): Promise<User> {\n    const id = this.currentId++;\n    const user: User = { ...insertUser, id };\n    this.users.set(id, user);\n    return user;\n  }\n}\n\nexport const storage = new MemStorage();\n","size_bytes":1012},"server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2254},"shared/schema.ts":{"content":"import { pgTable, text, serial, integer, boolean } from \"drizzle-orm/pg-core\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\nexport const users = pgTable(\"users\", {\n  id: serial(\"id\").primaryKey(),\n  username: text(\"username\").notNull().unique(),\n  password: text(\"password\").notNull(),\n});\n\nexport const insertUserSchema = createInsertSchema(users).pick({\n  username: true,\n  password: true,\n});\n\nexport type InsertUser = z.infer<typeof insertUserSchema>;\nexport type User = typeof users.$inferSelect;\n","size_bytes":533},"client/src/App.tsx":{"content":"import { useState } from \"react\";\nimport { Switch, Route } from \"wouter\";\nimport { queryClient } from \"./lib/queryClient\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport NotFound from \"@/pages/not-found\";\nimport { SplashScreen } from \"@/pages/SplashScreen\";\n\nimport { Element } from \"@/pages/Element\";\nimport { CardDetail } from \"@/pages/CardDetail\";\nimport { Detail } from \"@/pages/Detail\";\nimport { MyPage } from \"@/pages/MyPage\";\nimport { StorePage } from \"@/pages/StorePage\";\nimport { BuildingPage } from \"@/pages/BuildingPage\";\nimport { ConsultationPage } from \"@/pages/ConsultationPage\";\nimport { HomePage } from \"@/pages/HomePage\";\nimport { LocationRecommendationPage } from \"@/pages/LocationRecommendationPage\";\nimport { WhereIsGoodPage } from \"@/pages/WhereIsGoodPage\";\nimport StarPage from \"@/pages/StarPage\";\nimport { BusinessAnalysis } from \"@/pages/BusinessAnalysis\";\n\nfunction Router() {\n  return (\n    <Switch>\n      {/* Add pages below */}\n      <Route path=\"/\" component={WhereIsGoodPage} />\n      <Route path=\"/element\" component={Element} />\n      <Route path=\"/store\" component={Element} />\n      <Route path=\"/where-is-good\" component={WhereIsGoodPage} />\n      <Route path=\"/card/:cardId\" component={CardDetail} />\n      <Route path=\"/detail/:cardId\" component={Detail} />\n      <Route path=\"/building\" component={LocationRecommendationPage} />\n      <Route path=\"/consultation\" component={ConsultationPage} />\n      <Route path=\"/mypage\" component={MyPage} />\n      <Route path=\"/location-recommendation\" component={LocationRecommendationPage} />\n      <Route path=\"/star\" component={StarPage} />\n      <Route path=\"/business-analysis\" component={BusinessAnalysis} />\n      {/* Fallback to 404 */}\n      <Route component={NotFound} />\n    </Switch>\n  );\n}\n\nfunction App() {\n  const [showSplash, setShowSplash] = useState(true);\n\n  const handleSplashComplete = () => {\n    setShowSplash(false);\n  };\n\n  return (\n    <QueryClientProvider client={queryClient}>\n      <TooltipProvider>\n        <Toaster />\n        {showSplash ? (\n          <SplashScreen onComplete={handleSplashComplete} />\n        ) : (\n          <Router />\n        )}\n      </TooltipProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","size_bytes":2367},"client/src/index.css":{"content":"@tailwind components;\n@tailwind utilities;\n\n@font-face {\n  font-family: 'SUITE-Medium';\n  src: url('/SUITE-Medium_1755302675386.ttf') format('truetype');\n  font-weight: 500;\n  font-style: normal;\n  font-display: swap;\n}\n\n@font-face {\n  font-family: 'SUITE-ExtraBold';\n  src: url('/SUITE-ExtraBold_1755302806443.ttf') format('truetype');\n  font-weight: 800;\n  font-style: normal;\n  font-display: swap;\n}\n\n@layer components {\n  .all-\\[unset\\] {\n    all: unset;\n  }\n  \n  /* Input wrapper for clean appearance */\n  .input-wrap {\n    border-radius: 14px;\n    background: #fff;\n    overflow: hidden; /* hairline prevention */\n  }\n  \n  /* Remove search input decorations */\n  input[type=\"search\"]::-webkit-search-decoration,\n  input[type=\"search\"]::-webkit-search-cancel-button {\n    display: none;\n  }\n  \n  /* Autofill styles to prevent background bleeding */\n  input:-webkit-autofill {\n    -webkit-text-fill-color: #666666;\n    -webkit-box-shadow: 0 0 0 1000px #fff inset !important;\n    box-shadow: 0 0 0 1000px #fff inset !important;\n  }\n  \n  /* Dark mode autofill support */\n  .dark input:-webkit-autofill {\n    -webkit-text-fill-color: #666666;\n    -webkit-box-shadow: 0 0 0 1000px #1f2937 inset !important;\n    box-shadow: 0 0 0 1000px #1f2937 inset !important;\n  }\n\n  /* Range Slider Styles */\n  .range-slider {\n    position: relative;\n    height: 44px;\n    touch-action: none;\n  }\n\n  /* 공통 포지셔닝: 시각 핸들/트랙 위에 겹치도록 */\n  .wh-range {\n    position: absolute;\n    top: calc(50% + 4px);\n    transform: translateY(-50%);\n    height: 32px;           /* 드래그 히트 에어리어 */\n    background: transparent;\n    border: none;\n    outline: none;\n    z-index: 20;            /* fill/track 위, 이미지 핸들과는 상호작용하지 않음 */\n    cursor: pointer;\n    -webkit-appearance: none;\n    appearance: none;\n    /* width와 left/right는 각각 인라인으로 설정 */\n  }\n\n  /* WebKit(Chrome/Safari) — 기본 트랙/썸 완전 제거 */\n  .wh-range::-webkit-slider-runnable-track {\n    background: transparent;\n    height: 0;\n  }\n  .wh-range::-webkit-slider-thumb {\n    -webkit-appearance: none;\n    appearance: none;\n    width: 0;\n    height: 0;\n    background: transparent;\n    border: none;\n    box-shadow: none;\n  }\n\n  /* Firefox — 기본 트랙/썸 완전 제거 */\n  .wh-range::-moz-range-track {\n    background: transparent;\n    height: 0;\n    border: none;\n  }\n  .wh-range::-moz-range-thumb {\n    width: 0;\n    height: 0;\n    background: transparent;\n    border: none;\n    box-shadow: none;\n  }\n\n  /* Edge/IE */\n  .wh-range::-ms-track {\n    background: transparent;\n    border-color: transparent;\n    color: transparent;\n    height: 0;\n  }\n  .wh-range::-ms-thumb {\n    width: 0;\n    height: 0;\n    background: transparent;\n    border: none;\n  }\n\n  /* 채워진 구간/트랙은 클릭 막지 않게 */\n  .range-slider .track,\n  .range-slider .fill {\n    pointer-events: none;\n  }\n\n  /* 겹침 우선순위: 포커스된/호버된 손잡이가 위로 오게 */\n  .range-slider #range-min {\n    z-index: 3;\n  }\n\n  .range-slider #range-max {\n    z-index: 2;\n  }\n\n  .range-slider input[type=range]:focus,\n  .range-slider input[type=range]:hover {\n    z-index: 4;\n  }\n\n  /* Hide scrollbar while keeping scroll functionality */\n  .hide-scrollbar {\n    -ms-overflow-style: none;  /* Internet Explorer 10+ */\n    scrollbar-width: none;  /* Firefox */\n  }\n  \n  .hide-scrollbar::-webkit-scrollbar { \n    display: none;  /* Safari and Chrome */\n  }\n}\n\n:root {\n  --button-2-font-family: \"Pretendard\", Helvetica;\n  --button-2-font-size: 16px;\n  --button-2-font-style: normal;\n  --button-2-font-weight: 700;\n  --button-2-letter-spacing: 0px;\n  --button-2-line-height: 20px;\n  --gray-color6-f6f7f9: rgba(246, 247, 249, 1);\n}\n\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n@layer base {\n  :root {\n    --background: 0 0% 100%;\n    --foreground: 222.2 47.4% 11.2%;\n\n    --muted: 210 40% 96.1%;\n    --muted-foreground: 215.4 16.3% 46.9%;\n\n    --popover: 0 0% 100%;\n    --popover-foreground: 222.2 47.4% 11.2%;\n\n    --border: 214.3 31.8% 91.4%;\n    --input: 214.3 31.8% 91.4%;\n\n    --card: transparent;\n    --card-foreground: 222.2 47.4% 11.2%;\n\n    --primary: 222.2 47.4% 11.2%;\n    --primary-foreground: 210 40% 98%;\n\n    --secondary: 210 40% 96.1%;\n    --secondary-foreground: 222.2 47.4% 11.2%;\n\n    --accent: 210 40% 96.1%;\n    --accent-foreground: 222.2 47.4% 11.2%;\n\n    --destructive: 0 100% 50%;\n    --destructive-foreground: 210 40% 98%;\n\n    --ring: 215 20.2% 65.1%;\n\n    --radius: 0.5rem;\n  }\n\n  .dark {\n    --background: 224 71% 4%;\n    --foreground: 213 31% 91%;\n\n    --muted: 223 47% 11%;\n    --muted-foreground: 215.4 16.3% 56.9%;\n\n    --accent: 216 34% 17%;\n    --accent-foreground: 210 40% 98%;\n\n    --popover: 224 71% 4%;\n    --popover-foreground: 215 20.2% 65.1%;\n\n    --border: 216 34% 17%;\n    --input: 216 34% 17%;\n\n    --card: transparent;\n    --card-foreground: 213 31% 91%;\n\n    --primary: 210 40% 98%;\n    --primary-foreground: 222.2 47.4% 1.2%;\n\n    --secondary: 222.2 47.4% 11.2%;\n    --secondary-foreground: 210 40% 98%;\n\n    --destructive: 0 63% 31%;\n    --destructive-foreground: 210 40% 98%;\n\n    --ring: 216 34% 17%;\n\n    --radius: 0.5rem;\n  }\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n\n  body {\n    @apply bg-background text-foreground;\n    font-feature-settings: \"rlig\" 1, \"calt\" 1;\n  }\n}\n","size_bytes":5390},"client/src/main.tsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n","size_bytes":157},"client/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"client/src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"client/src/lib/queryClient.ts":{"content":"import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest(\n  method: string,\n  url: string,\n  data?: unknown | undefined,\n): Promise<Response> {\n  const res = await fetch(url, {\n    method,\n    headers: data ? { \"Content-Type\": \"application/json\" } : {},\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: \"include\",\n  });\n\n  await throwIfResNotOk(res);\n  return res;\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    const res = await fetch(queryKey[0] as string, {\n      credentials: \"include\",\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","size_bytes":1376},"client/src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"client/src/pages/BuildingPage.tsx":{"content":"import React from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { useLocation } from \"wouter\";\n\nexport const BuildingPage = (): JSX.Element => {\n  const [, setLocation] = useLocation();\n\n  const bottomNavIcons = [\n    { id: \"h\", src1: \"/figmaAssets/wh-icon-footer-h-1.png\", src2: \"/figmaAssets/wh-icon-footer-h-2.png\", alt: \"홈\", route: \"/\" },\n    { id: \"s\", src1: \"/figmaAssets/wh-icon-footer-s-1.png\", src2: \"/figmaAssets/wh-icon-footer-s-2.png\", alt: \"상점\", route: \"/store\" },\n    { id: \"b\", src1: \"/figmaAssets/wh-icon-footer-b-1.png\", src2: \"/figmaAssets/wh-icon-footer-b-2.png\", alt: \"건물\", route: \"/building\", active: true },\n    { id: \"c\", src1: \"/figmaAssets/wh-icon-footer-c-1.png\", src2: \"/figmaAssets/wh-icon-footer-c-2.png\", alt: \"상담\", route: \"/consultation\" },\n    { id: \"m\", src1: \"/figmaAssets/wh-icon-footer-m-1.png\", src2: \"/figmaAssets/wh-icon-footer-m-2.png\", alt: \"마이페이지\", route: \"/mypage\" },\n  ];\n\n  return (\n    <div className=\"bg-white grid justify-items-center [align-items:start] w-screen\">\n      <div className=\"bg-white overflow-hidden w-[360px] h-[800px] relative\">\n        {/* Content */}\n        <main className=\"absolute w-[360px] top-0 left-0 bottom-[55px] flex items-center justify-center\">\n          <div className=\"text-center px-8\">\n            <h2 className=\"[font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-[#333] text-xl mb-4\">\n              스와이프! 분양 단지 매칭 서비스\n            </h2>\n            <p className=\"[font-family:'SUITE-Medium',Helvetica] font-medium text-[#666] text-base mb-6\">\n              준비중입니다.\n            </p>\n            <Button\n              onClick={() => setLocation('/location-recommendation')}\n              className=\"bg-[#00D6F8] hover:bg-[#00B8E6] text-white font-semibold px-6 py-3 rounded-lg\"\n              data-testid=\"button-location-recommendation\"\n            >\n              위치 추천 보기\n            </Button>\n          </div>\n        </main>\n\n        {/* Bottom Navigation */}\n        <nav className=\"absolute w-[360px] h-[55px] bottom-0 left-0 bg-gray-color6-f6f7f9 border-t-[1.2px] border-solid border-[#dadada]\">\n          <div className=\"inline-flex items-center gap-[38px] relative top-3 left-[34px]\">\n            {bottomNavIcons.map((icon) => (\n              <Button\n                key={icon.id}\n                variant=\"ghost\"\n                size=\"icon\"\n                className=\"relative w-7 h-7 p-0 hover:bg-transparent\"\n                onClick={() => setLocation(icon.route)}\n              >\n                <img\n                  className=\"w-7 h-7 object-cover\"\n                  alt={icon.alt}\n                  src={icon.active ? icon.src2 : icon.src1}\n                />\n              </Button>\n            ))}\n          </div>\n        </nav>\n      </div>\n    </div>\n  );\n};","size_bytes":2862},"client/src/pages/CardDetail.tsx":{"content":"import React, { useState, useEffect } from \"react\";\nimport { useLocation, useRoute, Link } from \"wouter\";\nimport { Button } from \"@/components/ui/button\";\n\ninterface CardData {\n  id: string;\n  title: string;\n  category: string;\n  categoryColor: string;\n  description: string;\n  image: string;\n  detailImage: string;\n  stats: {\n    success: string;\n    enthusiasm: string;\n  };\n  details: {\n    cost: string;\n    target: string;\n    competition: string;\n  };\n}\n\nconst TAGLINES = {\n  default: [\n    \"유동인구 많은 골목에 딱 맞는 감성 공간!\",\n    \"사진 맛집 각—네온 무드 확실!\",\n    \"이 동네 취향을 꽉 채울 포인트 스팟!\",\n    \"퇴근길 힐링이 필요할 때, 여기!\",\n  ],\n  cafe: [\n    \"바이닐 사운드 + 라떼향, 데이트 코스로 제격!\",\n    \"주말 회전 좋은 무드 카페 바\",\n    \"플레이리스트가 공간을 완성합니다\",\n  ],\n  beauty: [\n    \"짧고 굵게! 체험 → 정규 전환이 핵심\",\n    \"SNS 각 보장, 衛생·동선 설계가 관건\",\n    \"퇴근 후 1시간, 바로 예뻐지는 곳\",\n  ],\n  hobby: [\n    \"비 오는 날에도 꾸준한 실내 액티비티\",\n    \"초보 친화 코치 운영이 핵심!\",\n    \"게임 몰입 최상—이벤트 운영 추천\",\n  ],\n  pet: [\n    \"야간 산책러·집사 가족이 모이는 구역\",\n    \"셀프 케어 수요 탄탄, 예약 회전이 포인트\",\n    \"반려 동반 가능 상권에 딱!\",\n  ],\n};\n\nconst CAT_KEY: Record<string, keyof typeof TAGLINES> = { \n  \"카페/음식\": \"cafe\", \n  \"뷰티/웰스\": \"beauty\", \n  \"취미/문화\": \"hobby\", \n  \"키즈/반려\": \"pet\" \n};\n\nlet prevTagline = \"\";\nfunction pickTagline(catKey: keyof typeof TAGLINES): string {\n  const pool = [...TAGLINES.default, ...(TAGLINES[catKey] || [])];\n  \n  let pick = pool[0]; // 기본값 설정\n  for (let i = 0; i < 3; i++) {\n    pick = pool[Math.floor(Math.random() * pool.length)];\n    if (pick !== prevTagline) break;\n  }\n  prevTagline = pick;\n  return pick;\n}\n\nconst cardDatabase: Record<string, CardData> = {\n  \"wh-card-b-1\": {\n    id: \"wh-card-b-1\",\n    title: \"헤나체험\",\n    category: \"뷰티/웰스\",\n    categoryColor: \"#FF00AE\",\n    description: \"헤나, 타투스티커 체험\",\n    image: \"/figmaAssets/wh-card-b-1_1755308360319.png\",\n    detailImage: \"/figmaAssets/wh-card-b-1-s_1755308360319.png\",\n    stats: { success: \"42%\", enthusiasm: \"23%\" },\n    details: {\n      cost: \"약 2500만원\",\n      target: \"2030세대 커플\",\n      competition: \"주변 500m 내 2개 매장\"\n    }\n  },\n  \"wh-card-b-2\": {\n    id: \"wh-card-b-2\", \n    title: \"복싱클럽\",\n    category: \"뷰티/웰스\",\n    categoryColor: \"#FF00AE\",\n    description: \"원데이 복싱클럽\",\n    image: \"/figmaAssets/wh-card-b-2_1755308360319.png\",\n    detailImage: \"/figmaAssets/wh-card-b-2-s_1755308360319.png\",\n    stats: { success: \"37%\", enthusiasm: \"24%\" },\n    details: {\n      cost: \"약 2200만원\",\n      target: \"직장인, 다이어트 수요\",\n      competition: \"주변 500m 내 3개 매장\"\n    }\n  },\n  \"wh-card-c-1\": {\n    id: \"wh-card-c-1\",\n    title: \"레코드카페\",\n    category: \"카페/음식\",\n    categoryColor: \"#FA5705\",\n    description: \"영화 틀어주는 감성 카페\",\n    image: \"/figmaAssets/wh-card-c-1_1755308360319.png\",\n    detailImage: \"/figmaAssets/wh-card-c-1-s_1755308360319.png\",\n    stats: { success: \"40%\", enthusiasm: \"20%\" },\n    details: {\n      cost: \"약 2000만원\",\n      target: \"2030세대 커플\",\n      competition: \"주변 500m 내 1개 매장\"\n    }\n  },\n  \"wh-card-c-2\": {\n    id: \"wh-card-c-2\",\n    title: \"캠핑 바\",\n    category: \"카페/음식\",\n    categoryColor: \"#FA5705\",\n    description: \"캠핑 컨셉트 바 및 주류매장\",\n    image: \"/figmaAssets/wh-card-c-2_1755308360319.png\",\n    detailImage: \"/figmaAssets/wh-card-c-2-s_1755308360319.png\",\n    stats: { success: \"41%\", enthusiasm: \"21%\" },\n    details: {\n      cost: \"약 3500만원\",\n      target: \"2030세대\",\n      competition: \"주변 500m 내 0개 매장\"\n    }\n  },\n  \"wh-card-h-1\": {\n    id: \"wh-card-h-1\",\n    title: \"실내보드\",\n    category: \"취미/문화\",\n    categoryColor: \"#9D00FF\",\n    description: \"실내 스케이트보드장\",\n    image: \"/figmaAssets/wh-card-h-1_1755308360320.png\",\n    detailImage: \"/figmaAssets/wh-card-h-1-s_1755308360319.png\",\n    stats: { success: \"36%\", enthusiasm: \"22%\" },\n    details: {\n      cost: \"약 5000만원\",\n      target: \"1020 액티비티 지향\",\n      competition: \"주변 500m 내 0개 매장\"\n    }\n  },\n  \"wh-card-h-2\": {\n    id: \"wh-card-h-2\",\n    title: \"VR FPS\",\n    category: \"취미/문화\", \n    categoryColor: \"#9D00FF\",\n    description: \"VR FPS 아레나\",\n    image: \"/figmaAssets/wh-card-h-2_1755308360320.png\",\n    detailImage: \"/figmaAssets/wh-card-h-2-s_1755308360320.png\",\n    stats: { success: \"40%\", enthusiasm: \"20%\" },\n    details: {\n      cost: \"약 6000만원\",\n      target: \"102030\",\n      competition: \"주변 500m 내 0개 매장\"\n    }\n  },\n  \"wh-card-p-1\": {\n    id: \"wh-card-p-1\",\n    title: \"24시 펫용품\",\n    category: \"키즈/반려\",\n    categoryColor: \"#CCFF00\",\n    description: \"24시간 펫 용품 가게\",\n    image: \"/figmaAssets/wh-card-p-1_1755308360320.png\",\n    detailImage: \"/figmaAssets/wh-card-p-1-s_1755308360320.png\",\n    stats: { success: \"44%\", enthusiasm: \"20%\" },\n    details: {\n      cost: \"약 1800만원\",\n      target: \"반려가구, 야근 직장인\",\n      competition: \"주변 500m 내 1개 매장\"\n    }\n  },\n  \"wh-card-p-2\": {\n    id: \"wh-card-p-2\",\n    title: \"펫 셀프 목욕\",\n    category: \"키즈/반려\",\n    categoryColor: \"#CCFF00\",\n    description: \"펫 셀프 목욕\",\n    image: \"/figmaAssets/wh-card-p-2_1755308360320.png\",\n    detailImage: \"/figmaAssets/wh-card-p-2-s_1755308360320.png\",\n    stats: { success: \"43%\", enthusiasm: \"19%\" },\n    details: {\n      cost: \"약 2000만원\",\n      target: \"건주, 집사\",\n      competition: \"주변 500m 내 2개 매장\"\n    }\n  },\n  \"wh-card-b-3\": {\n    id: \"wh-card-b-3\",\n    title: \"소소한 네일아트샵\",\n    category: \"뷰티/웰스\",\n    categoryColor: \"#FF00AE\",\n    description: \"셀링/정가 전략 핵심\",\n    image: \"/figmaAssets/wh-card-b-3_1756096644463.png\",\n    detailImage: \"@assets/wh-card-b-3-s_1756099974107.png\",\n    stats: { success: \"37%\", enthusiasm: \"24%\" },\n    details: {\n      cost: \"약 2200만원\",\n      target: \"102030\",\n      competition: \"주변 500m 내 3개 매장\"\n    }\n  },\n  \"wh-card-c-3\": {\n    id: \"wh-card-c-3\",\n    title: \"24시간 에너지음료 자판기\",\n    category: \"카페/음식\",\n    categoryColor: \"#FA5705\",\n    description: \"소울 관리 체크\",\n    image: \"/figmaAssets/wh-card-c-3_1756096644463.png\",\n    detailImage: \"@assets/wh-card-c-3-s_1756099916924.png\",\n    stats: { success: \"41%\", enthusiasm: \"21%\" },\n    details: {\n      cost: \"약 1000만원\",\n      target: \"2030세대\",\n      competition: \"주변 500m 내 0개 매장\"\n    }\n  },\n  \"wh-card-h-3\": {\n    id: \"wh-card-h-3\",\n    title: \"수제 캔들 공방\",\n    category: \"취미/문화\",\n    categoryColor: \"#9D00FF\",\n    description: \"안전·향 인증 관리 중요\",\n    image: \"/figmaAssets/wh-card-h-3_1756096644463.png\",\n    detailImage: \"@assets/wh-card-h-3-s_1756099938034.png\",\n    stats: { success: \"40%\", enthusiasm: \"20%\" },\n    details: {\n      cost: \"약 1000만원\",\n      target: \"102030\",\n      competition: \"주변 500m 내 0개 매장\"\n    }\n  },\n  \"wh-card-p-3\": {\n    id: \"wh-card-p-3\",\n    title: \"레고 키즈 카페\",\n    category: \"키즈/반려\",\n    categoryColor: \"#CCFF00\",\n    description: \"예약·회전율이 관건\",\n    image: \"/figmaAssets/wh-card-p-3_1756096644464.png\",\n    detailImage: \"@assets/wh-card-p-3-s_1756099991013.png\",\n    stats: { success: \"43%\", enthusiasm: \"19%\" },\n    details: {\n      cost: \"약 2500만원\",\n      target: \"영유아·초등·보호자 동반\",\n      competition: \"주변 500m 내 2개 매장\"\n    }\n  }\n};\n\nexport const CardDetail = (): JSX.Element => {\n  const [, params] = useRoute(\"/card/:cardId\");\n  const [, setLocation] = useLocation();\n  const cardId = params?.cardId;\n  const [tagline, setTagline] = useState(\"\");\n  const [dynamicCardData, setDynamicCardData] = useState<CardData | null>(null);\n  \n  // URL 쿼리 파라미터에서 검색어 추출\n  const urlParams = new URLSearchParams(window.location.search);\n  const searchTerm = urlParams.get('search');\n  \n  // 동적 카드 데이터 또는 기존 카드 데이터\n  const cardData = dynamicCardData || (cardId ? cardDatabase[cardId] : null);\n\n  // 검색어에 따른 카테고리 분류 함수\n  const categorizeSearch = (search: string): { category: string; categoryColor: string; catKey: keyof typeof TAGLINES } => {\n    const lower = search.toLowerCase();\n    \n    if (lower.includes(\"카페\") || lower.includes(\"커피\") || lower.includes(\"음식\") || lower.includes(\"국밥\") || lower.includes(\"식당\") || lower.includes(\"레스토랑\") || lower.includes(\"치킨\") || lower.includes(\"피자\") || lower.includes(\"바\") || lower.includes(\"술집\")) {\n      return { category: \"카페/음식\", categoryColor: \"#FA5705\", catKey: \"cafe\" };\n    } else if (lower.includes(\"뷰티\") || lower.includes(\"미용\") || lower.includes(\"헬스\") || lower.includes(\"피트니스\") || lower.includes(\"복싱\") || lower.includes(\"마사지\") || lower.includes(\"요가\")) {\n      return { category: \"뷰티/웰스\", categoryColor: \"#FF00AE\", catKey: \"beauty\" };\n    } else if (lower.includes(\"게임\") || lower.includes(\"pc방\") || lower.includes(\"노래방\") || lower.includes(\"볼링\") || lower.includes(\"문화\") || lower.includes(\"체험\") || lower.includes(\"vr\")) {\n      return { category: \"취미/문화\", categoryColor: \"#9D00FF\", catKey: \"hobby\" };\n    } else if (lower.includes(\"펫\") || lower.includes(\"반려\") || lower.includes(\"키즈\") || lower.includes(\"애견\") || lower.includes(\"아이\") || lower.includes(\"놀이방\")) {\n      return { category: \"키즈/반려\", categoryColor: \"#CCFF00\", catKey: \"pet\" };\n    }\n    \n    // 기본값\n    return { category: \"카페/음식\", categoryColor: \"#FA5705\", catKey: \"cafe\" };\n  };\n\n  useEffect(() => {\n    if (cardId === \"custom\" && searchTerm) {\n      const { category, categoryColor, catKey } = categorizeSearch(searchTerm);\n      \n      // 동적 카드 데이터 생성\n      const customCard: CardData = {\n        id: \"custom\",\n        title: searchTerm,\n        category: category,\n        categoryColor: categoryColor,\n        description: `${searchTerm} 사업`,\n        image: \"/figmaAssets/wh-card-c-1_1755308360319.png\", // 기본 이미지\n        detailImage: \"/figmaAssets/wh-card-c-1-s_1755308360319.png\", // 기본 상세 이미지\n        stats: { success: \"38%\", enthusiasm: \"22%\" },\n        details: {\n          cost: \"약 2500만원\",\n          target: \"지역 주민, 직장인\",\n          competition: \"주변 500m 내 분석 필요\"\n        }\n      };\n      \n      setDynamicCardData(customCard);\n      \n      // 태그라인 설정\n      const randomTagline = pickTagline(catKey);\n      setTagline(randomTagline || \"\");\n    } else if (cardId && cardDatabase[cardId]) {\n      const existingCard = cardDatabase[cardId];\n      const catKey = CAT_KEY[existingCard.category] || \"default\";\n      const randomTagline = pickTagline(catKey as keyof typeof TAGLINES);\n      setTagline(randomTagline || \"\");\n    }\n  }, [cardId, searchTerm]);\n\n  // 페이지 로드 시 현재 카드 ID를 localStorage에 저장\n  useEffect(() => {\n    if (cardId) {\n      localStorage.setItem('lastViewedCardId', cardId);\n    }\n  }, [cardId]);\n\n  if (!cardData) {\n    return <div>카드 정보를 찾을 수 없습니다.</div>;\n  }\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 backdrop-blur-sm flex items-center justify-center p-4 z-50\">\n      <div className=\"bg-white rounded-xl w-[360px] h-[640px] overflow-hidden relative flex flex-col\">\n        {/* 랜덤 문구 */}\n        <div className=\"px-4 py-4 bg-white\" style={{ paddingTop: '68px' }}>\n          <div \n            className=\"text-center\"\n            style={{\n              color: '#505050',\n              fontFamily: 'SUITE',\n              fontSize: '16px',\n              fontWeight: 800,\n              lineHeight: '20px',\n              fontFeatureSettings: '\"liga\" off, \"clig\" off'\n            }}\n          >\n            {tagline}\n          </div>\n        </div>\n\n        {/* 상세 카드 이미지 */}\n        <div className=\"absolute inset-0 flex justify-center items-center\" style={{ top: '120px', bottom: '120px' }}>\n          <img\n            className=\"w-4/5 h-auto object-contain\"\n            alt={cardData.title}\n            src={cardData.detailImage}\n            style={{ maxHeight: '100%', maxWidth: '100%' }}\n          />\n        </div>\n        \n        {/* 닫기 버튼 */}\n        <Link href=\"/where-is-good\">\n          <Button\n            className=\"absolute top-4 right-4 w-8 h-8 rounded-full bg-black/20 hover:bg-black/30 text-white border-0 p-0 flex items-center justify-center\"\n            size=\"sm\"\n          >\n            ×\n          </Button>\n        </Link>\n\n        {/* 하단 버튼들 */}\n        <div className=\"absolute bottom-0 left-0 right-0 flex gap-3 p-4 bg-white justify-center\" style={{ paddingBottom: '50px' }}>\n          <Link href={`/detail/${cardData.id}`}>\n            <Button \n              className=\"text-white rounded-lg [font-family:'SUITE-ExtraBold',Helvetica] font-extrabold flex items-center justify-center gap-2 hover:brightness-90 transition-all\"\n              style={{\n                backgroundColor: '#00D6F8',\n                width: '105.6px',\n                height: '33.6px',\n                flexShrink: 0\n              }}\n            >\n              <svg \n                width=\"24\" \n                height=\"24\" \n                viewBox=\"0 0 191 191\" \n                fill=\"none\" \n                xmlns=\"http://www.w3.org/2000/svg\"\n                style={{ \n                  flex: 'none',\n                  order: 0,\n                  flexGrow: 0\n                }}\n              >\n                <path d=\"M155.186 59.6869H131.311V41.7808C131.311 32.2829 127.538 23.1739 120.822 16.4578C114.106 9.74174 104.997 5.96869 95.499 5.96869C86.0011 5.96869 76.8921 9.74174 70.176 16.4578C63.4599 23.1739 59.6869 32.2829 59.6869 41.7808V59.6869H35.8121C32.6461 59.6869 29.6098 60.9446 27.3711 63.1833C25.1324 65.422 23.8748 68.4583 23.8748 71.6243V155.186C23.8748 158.352 25.1324 161.388 27.3711 163.627C29.6098 165.866 32.6461 167.123 35.8121 167.123H155.186C158.352 167.123 161.388 165.866 163.627 163.627C165.866 161.388 167.123 158.352 167.123 155.186V71.6243C167.123 68.4583 165.866 65.422 163.627 63.1833C161.388 60.9446 158.352 59.6869 155.186 59.6869ZM71.6243 41.7808C71.6243 35.4488 74.1396 29.3762 78.617 24.8988C83.0944 20.4214 89.167 17.9061 95.499 17.9061C101.831 17.9061 107.904 20.4214 112.381 24.8988C116.858 29.3762 119.374 35.4488 119.374 41.7808V59.6869H71.6243V41.7808Z\" fill=\"white\"/>\n              </svg>\n              열람하기\n            </Button>\n          </Link>\n          <Button \n            className=\"bg-[#CCFF00] hover:bg-[#B8E600] text-black rounded-lg [font-family:'SUITE-ExtraBold',Helvetica] font-extrabold flex items-center justify-center gap-2\"\n            style={{\n              width: '105.6px',\n              height: '33.6px',\n              flexShrink: 0\n            }}\n            onClick={() => {\n              // 현재 카드 ID를 localStorage에 저장\n              if (cardId) {\n                localStorage.setItem('lastViewedCardId', cardId);\n              }\n              const currentPath = window.location.pathname;\n              setLocation(`/location-recommendation?cardId=${cardId}&from=${encodeURIComponent(currentPath)}`);\n            }}\n          >\n            <svg \n              width=\"24\" \n              height=\"24\" \n              viewBox=\"0 0 192 191\" \n              fill=\"none\" \n              xmlns=\"http://www.w3.org/2000/svg\"\n              style={{ \n                flex: 'none',\n                order: 0,\n                flexGrow: 0\n              }}\n            >\n              <path d=\"M96.0046 11.9376C78.5976 11.9573 61.9091 18.881 49.6005 31.1896C37.2918 43.4983 30.3681 60.1868 30.3484 77.5938C30.3484 133.775 90.0359 176.205 92.5801 177.981C93.5837 178.684 94.7793 179.061 96.0046 179.061C97.23 179.061 98.4256 178.684 99.4292 177.981C101.973 176.205 161.661 133.775 161.661 77.5938C161.641 60.1868 154.717 43.4983 142.409 31.1896C130.1 18.881 113.412 11.9573 96.0046 11.9376ZM96.0046 53.7188C100.727 53.7188 105.343 55.1191 109.269 57.7425C113.195 60.3659 116.255 64.0947 118.062 68.4572C119.869 72.8198 120.342 77.6203 119.421 82.2516C118.5 86.8829 116.226 91.137 112.887 94.476C109.548 97.815 105.294 100.089 100.662 101.01C96.0311 101.931 91.2307 101.458 86.8681 99.6514C82.5055 97.8444 78.7767 94.7843 76.1533 90.8581C73.5299 86.9318 72.1296 82.3158 72.1296 77.5938C72.1296 71.2618 74.645 65.1891 79.1225 60.7116C83.5999 56.2342 89.6726 53.7188 96.0046 53.7188Z\" fill=\"#17191A\"/>\n            </svg>\n            입지추천\n            </Button>\n        </div>\n      </div>\n    </div>\n  );\n};","size_bytes":17162},"client/src/pages/ConsultationPage.tsx":{"content":"import React from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { useLocation } from \"wouter\";\n\nexport const ConsultationPage = (): JSX.Element => {\n  const [, setLocation] = useLocation();\n\n  const bottomNavIcons = [\n    { id: \"h\", src1: \"/figmaAssets/wh-icon-footer-h-1.png\", src2: \"/figmaAssets/wh-icon-footer-h-2.png\", alt: \"홈\", route: \"/\" },\n    { id: \"s\", src1: \"/figmaAssets/wh-icon-footer-s-1.png\", src2: \"/figmaAssets/wh-icon-footer-s-2.png\", alt: \"상점\", route: \"/store\" },\n    { id: \"b\", src1: \"/figmaAssets/wh-icon-footer-b-1.png\", src2: \"/figmaAssets/wh-icon-footer-b-2.png\", alt: \"건물\", route: \"/building\" },\n    { id: \"c\", src1: \"/figmaAssets/wh-icon-footer-c-1.png\", src2: \"/figmaAssets/wh-icon-footer-c-2.png\", alt: \"상담\", route: \"/consultation\", active: true },\n    { id: \"m\", src1: \"/figmaAssets/wh-icon-footer-m-1.png\", src2: \"/figmaAssets/wh-icon-footer-m-2.png\", alt: \"마이페이지\", route: \"/mypage\" },\n  ];\n\n  return (\n    <div className=\"bg-white grid justify-items-center [align-items:start] w-screen\">\n      <div className=\"bg-white overflow-hidden w-[360px] h-[800px] relative\">\n        {/* Content */}\n        <main className=\"absolute w-[360px] top-0 left-0 bottom-[55px]\">\n          {/* Empty content as requested */}\n        </main>\n\n        {/* Bottom Navigation */}\n        <nav className=\"absolute w-[360px] h-[55px] bottom-0 left-0 bg-gray-color6-f6f7f9 border-t-[1.2px] border-solid border-[#dadada]\">\n          <div className=\"inline-flex items-center gap-[38px] relative top-3 left-[34px]\">\n            {bottomNavIcons.map((icon) => (\n              <Button\n                key={icon.id}\n                variant=\"ghost\"\n                size=\"icon\"\n                className=\"relative w-7 h-7 p-0 hover:bg-transparent\"\n                onClick={() => setLocation(icon.route)}\n              >\n                <img\n                  className=\"w-7 h-7 object-cover\"\n                  alt={icon.alt}\n                  src={icon.active ? icon.src2 : icon.src1}\n                />\n              </Button>\n            ))}\n          </div>\n        </nav>\n      </div>\n    </div>\n  );\n};","size_bytes":2147},"client/src/pages/Detail.tsx":{"content":"import React, { useState, useEffect } from \"react\";\nimport { useRoute, Link } from \"wouter\";\nimport { Button } from \"@/components/ui/button\";\n\ninterface ItemData {\n  id: string;\n  title: string;\n  category: string;\n  categoryColor: string;\n  image: string;\n  description: string;\n  stats: {\n    success: string;\n    enthusiasm: string;\n  };\n  details: {\n    cost: string;\n    target: string;\n    competition: string;\n  };\n  sections: Array<{\n    title: string;\n    content: string[];\n  }>;\n}\n\nexport const Detail = (): JSX.Element => {\n  const [, params] = useRoute(\"/detail/:cardId\");\n  const cardId = params?.cardId;\n  const [itemData, setItemData] = useState<ItemData | null>(null);\n  const [activeSection, setActiveSection] = useState<number | null>(null);\n  const [showMessage, setShowMessage] = useState(false);\n  const [showToggle, setShowToggle] = useState(false);\n  const [isCardSaved, setIsCardSaved] = useState(false);\n\n  // URL 쿼리 파라미터에서 검색어 추출\n  const urlParams = new URLSearchParams(window.location.search);\n  const searchTerm = urlParams.get('search');\n\n  // 검색어에 따른 카테고리 분류 함수\n  const categorizeSearch = (search: string): { category: string; categoryColor: string } => {\n    const lower = search.toLowerCase();\n    \n    if (lower.includes(\"카페\") || lower.includes(\"커피\") || lower.includes(\"음식\") || lower.includes(\"국밥\") || lower.includes(\"식당\") || lower.includes(\"레스토랑\") || lower.includes(\"치킨\") || lower.includes(\"피자\") || lower.includes(\"바\") || lower.includes(\"술집\")) {\n      return { category: \"카페/음식\", categoryColor: \"#FA5705\" };\n    } else if (lower.includes(\"뷰티\") || lower.includes(\"미용\") || lower.includes(\"헬스\") || lower.includes(\"피트니스\") || lower.includes(\"복싱\") || lower.includes(\"마사지\") || lower.includes(\"요가\")) {\n      return { category: \"뷰티/웰스\", categoryColor: \"#FF00AE\" };\n    } else if (lower.includes(\"게임\") || lower.includes(\"pc방\") || lower.includes(\"노래방\") || lower.includes(\"볼링\") || lower.includes(\"문화\") || lower.includes(\"체험\") || lower.includes(\"vr\")) {\n      return { category: \"취미/문화\", categoryColor: \"#9D00FF\" };\n    } else if (lower.includes(\"펫\") || lower.includes(\"반려\") || lower.includes(\"키즈\") || lower.includes(\"애견\") || lower.includes(\"아이\") || lower.includes(\"놀이방\")) {\n      return { category: \"키즈/반려\", categoryColor: \"#CCFF00\" };\n    }\n    \n    // 기본값\n    return { category: \"카페/음식\", categoryColor: \"#FA5705\" };\n  };\n\n  useEffect(() => {\n    if (cardId === \"custom\" && searchTerm) {\n      const { category, categoryColor } = categorizeSearch(searchTerm);\n      \n      // 동적 아이템 데이터 생성\n      const customItem: ItemData = {\n        id: \"custom\",\n        title: searchTerm,\n        category: category,\n        categoryColor: categoryColor,\n        image: \"/figmaAssets/wh-card-c-1_1755308360319.png\",\n        description: `${searchTerm} 사업 기회 분석`,\n        stats: {\n          success: \"38%\",\n          enthusiasm: \"22%\"\n        },\n        details: {\n          cost: \"약 2500만원\",\n          target: \"지역 주민, 직장인\",\n          competition: \"주변 500m 내 분석 필요\"\n        },\n        sections: [\n          {\n            title: \"사업 개요\",\n            content: [\n              `${searchTerm} 사업의 핵심 포인트와 성공 요인을 분석했습니다.`,\n              \"지역 특성과 고객 수요를 고려한 맞춤형 사업 전략이 필요합니다.\",\n              \"초기 투자비용과 운영비용을 철저히 검토해야 합니다.\"\n            ]\n          },\n          {\n            title: \"시장 분석\",\n            content: [\n              \"해당 지역의 유동인구와 타겟 고객층을 분석했습니다.\",\n              \"경쟁업체 현황과 차별화 포인트를 파악해야 합니다.\",\n              \"계절별, 시간대별 수요 변화를 고려한 운영 전략이 중요합니다.\"\n            ]\n          },\n          {\n            title: \"수익성 분석\",\n            content: [\n              \"월 예상 매출과 순이익을 계산해보세요.\",\n              \"고정비와 변동비를 정확히 산출하여 손익분기점을 파악하세요.\",\n              \"투자 회수 기간과 장기적인 수익성을 검토하세요.\"\n            ]\n          }\n        ]\n      };\n      \n      setItemData(customItem);\n    } else if (cardId) {\n      fetch('/items.json')\n        .then(response => response.json())\n        .then((data: Record<string, ItemData>) => {\n          if (data[cardId]) {\n            setItemData(data[cardId]);\n          }\n        })\n        .catch(error => {\n          console.error('Error loading item data:', error);\n        });\n    }\n  }, [cardId, searchTerm]);\n\n  const toggleSection = (index: number) => {\n    setActiveSection(activeSection === index ? null : index);\n  };\n\n  const handleConsultation = () => {\n    setShowMessage(true);\n    setTimeout(() => {\n      setShowMessage(false);\n    }, 800);\n  };\n\n  const handleCardSave = () => {\n    setIsCardSaved(!isCardSaved);\n    setShowToggle(true);\n    setTimeout(() => {\n      setShowToggle(false);\n    }, 3000);\n  };\n\n  const getStarRating = (cardId: string) => {\n    const starCounts = {\n      'wh-card-b-1': 4,\n      'wh-card-b-2': 5,\n      'wh-card-c-1': 4,\n      'wh-card-c-2': 4,\n      'wh-card-h-1': 3,\n      'wh-card-h-2': 4,\n      'wh-card-p-1': 5,\n      'wh-card-p-2': 4,\n    };\n\n    const filledStars = starCounts[cardId as keyof typeof starCounts] || 0;\n    const isPCard = cardId.startsWith('wh-card-p');\n\n    return (\n      <div className=\"flex gap-1 items-center\">\n        {[...Array(5)].map((_, i) => {\n          if (isPCard) {\n            return (\n              <svg \n                key={i}\n                width=\"18\" \n                height=\"18\" \n                viewBox=\"0 0 15 15\" \n                fill=\"none\" \n                xmlns=\"http://www.w3.org/2000/svg\"\n                style={{ opacity: i < filledStars ? 1 : 0.3 }}\n              >\n                <path d=\"M9.0585 5.29554L13.5647 3.87253L14.5134 6.88796L10.0749 8.27709L12.9887 12.2412L10.4815 14.2063L7.49996 10.1744L4.51841 14.2063L2.07896 12.2073L4.95887 8.27709L0.486542 6.88796L1.4691 3.87253L5.90754 5.29554L5.87366 0.518285H9.09238L9.0585 5.29554Z\" fill=\"#00D6F8\"/>\n              </svg>\n            );\n          } else {\n            return (\n              <img \n                key={i}\n                src={i < filledStars ? \"/assets/wh-spot-icon-star-1_1755349260767.png\" : \"/assets/wh-icon-star-2_1755349262727.png\"}\n                alt=\"star\"\n                className=\"w-[18px] h-[18px]\"\n              />\n            );\n          }\n        })}\n      </div>\n    );\n  };\n\n  if (!itemData) {\n    return (\n      <div className=\"min-h-screen bg-white flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"text-lg [font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-[#666666]\">\n            로딩중...\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"w-[360px] h-[640px] mx-auto bg-white overflow-hidden\">\n      {/* Header */}\n      <header \n        className=\"w-[360px] h-[169px] px-4 flex items-center justify-between relative overflow-hidden\"\n        style={{ backgroundColor: itemData.categoryColor }}\n      >\n        <Link href=\"/\">\n          <Button\n            variant=\"ghost\"\n            size=\"sm\"\n            className=\"p-2 hover:bg-black/10 text-white absolute top-4 left-4 z-10\"\n          >\n            <svg width=\"46\" height=\"46\" viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path d=\"M21.0613 24.9387C21.3431 25.2205 21.5014 25.6027 21.5014 26.0012C21.5014 26.3998 21.3431 26.782 21.0613 27.0637C20.7795 27.3455 20.3973 27.5038 19.9988 27.5038C19.6003 27.5038 19.2181 27.3455 18.9363 27.0637L8.9363 17.0637C8.79646 16.9244 8.6855 16.7588 8.6098 16.5765C8.53409 16.3941 8.49512 16.1987 8.49512 16.0012C8.49512 15.8038 8.53409 15.6083 8.6098 15.426C8.6855 15.2437 8.79646 15.0781 8.9363 14.9387L18.9363 4.93874C19.2181 4.65695 19.6003 4.49864 19.9988 4.49864C20.3973 4.49864 20.7795 4.65695 21.0613 4.93874C21.3431 5.22054 21.5014 5.60273 21.5014 6.00124C21.5014 6.39976 21.3431 6.78195 21.0613 7.06374L12.125 16L21.0613 24.9387Z\" fill={cardId?.startsWith('wh-card-p') ? '#17191A' : 'white'}/>\n            </svg>\n          </Button>\n        </Link>\n        <div className=\"w-full flex flex-col items-center justify-center text-white\">\n          <div className=\"absolute\" style={{ top: '60px', left: '50%', transform: 'translateX(-50%)' }}>\n            {getStarRating(cardId || '')}\n          </div>\n          <div \n            className=\"[font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-lg text-center\" \n            style={{ \n              marginTop: '79.2px',\n              color: cardId?.startsWith('wh-card-p') ? '#17191A' : 'white'\n            }}\n          >\n            {itemData.title}\n          </div>\n          <div \n            className=\"[font-family:'SUITE-Medium',Helvetica] font-medium text-xs mt-1\"\n            style={{ \n              color: cardId?.startsWith('wh-card-p') ? '#17191A' : 'white'\n            }}\n          >\n            트렌디하지만 편안한 곳 찾았어요!\n          </div>\n        </div>\n      </header>\n\n      {/* Content */}\n      <div className=\"w-[360px] bg-white\" style={{ height: 'calc(640px - 169px)', overflowY: 'auto', marginTop: '20px' }}>\n\n\n        {/* Accordion Sections */}\n        <div className=\"px-4 pb-20\">\n          <div className=\"space-y-2\">\n            {itemData.sections.map((section, index) => (\n              <div key={index} className=\"border border-gray-200 overflow-hidden\" style={{ borderRadius: '11px' }}>\n                <button\n                  onClick={() => toggleSection(index)}\n                  className={`w-full p-4 text-left transition-colors duration-200 flex items-center justify-between ${\n                    activeSection === index ? 'text-white' : 'bg-white hover:bg-gray-50'\n                  }`}\n                  style={{\n                    backgroundColor: activeSection === index ? itemData.categoryColor : undefined,\n                    border: activeSection === index ? `1px solid ${itemData.categoryColor}` : '1px solid #e5e7eb',\n                    borderRadius: '11px'\n                  }}\n                >\n                  <span className={`font-extrabold text-lg ${\n                    activeSection === index \n                      ? (itemData.categoryColor === '#CCFF00' \n                          ? '[font-family:\\'SUITE-ExtraBold\\',Helvetica] text-[#17191A]' \n                          : '[font-family:\\'SUITE-ExtraBold\\',Helvetica] text-white') \n                      : '[font-family:\\'SUITE-ExtraBold\\',Helvetica] text-[#333]'\n                  }`}>\n                    {section.title}\n                  </span>\n                  <svg \n                    width=\"20\" \n                    height=\"20\" \n                    viewBox=\"0 0 24 24\" \n                    fill=\"none\" \n                    stroke=\"currentColor\" \n                    strokeWidth=\"2\" \n                    strokeLinecap=\"round\" \n                    strokeLinejoin=\"round\"\n                    className={`transition-transform duration-200 ${activeSection === index ? 'rotate-180' : ''}`}\n                  >\n                    <polyline points=\"6,9 12,15 18,9\"></polyline>\n                  </svg>\n                </button>\n                {activeSection === index && (\n                  <div className=\"p-4 bg-gray-50 border-t border-gray-200\">\n                    <div className=\"space-y-2\">\n                      {section.content.map((item, itemIndex) => (\n                        <div key={itemIndex} className=\"[font-family:'SUITE-Medium',Helvetica] font-medium text-xs text-[#555] leading-relaxed\">\n                          {item}\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                )}\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Bottom Action Buttons */}\n        <div className=\"absolute left-1/2 transform -translate-x-1/2\" style={{ bottom: '56px' }}>\n          <div className=\"flex gap-6\">\n            <button\n              onClick={handleCardSave}\n              className=\"relative overflow-hidden rounded-lg transition-transform hover:scale-105\"\n              style={{ filter: 'drop-shadow(0px 2px 2px rgba(0, 0, 0, 0.25))' }}\n            >\n              <svg width=\"106\" height=\"35\" viewBox=\"0 0 106 35\" fill=\"none\">\n                <rect x=\"1\" y=\"1\" width=\"103.6\" height=\"31.6\" rx=\"5.41339\" fill=\"#00D6F8\" stroke=\"#00D6F8\" strokeWidth=\"2\"/>\n              </svg>\n              <div className=\"absolute inset-0 flex items-center justify-center gap-2\">\n                <svg width=\"25\" height=\"24\" viewBox=\"0 0 25 24\" fill=\"none\">\n                  <path d=\"M16.7876 3.375C14.9042 3.375 13.2326 4.11844 12.1001 5.39625C10.9676 4.11844 9.29604 3.375 7.4126 3.375C5.77218 3.37698 4.19952 4.02952 3.03957 5.18947C1.87962 6.34942 1.22708 7.92208 1.2251 9.5625C1.2251 16.3444 11.1448 21.7631 11.5667 21.9909C11.7306 22.0792 11.9139 22.1254 12.1001 22.1254C12.2863 22.1254 12.4696 22.0792 12.6335 21.9909C13.0554 21.7631 22.9751 16.3444 22.9751 9.5625C22.9731 7.92208 22.3206 6.34942 21.1606 5.18947C20.0007 4.02952 18.428 3.37698 16.7876 3.375ZM16.2729 16.7213C14.9672 17.8292 13.5715 18.8264 12.1001 19.7025C10.6287 18.8264 9.23297 17.8292 7.92728 16.7213C5.89572 14.9784 3.4751 12.3206 3.4751 9.5625C3.4751 8.51821 3.88994 7.51669 4.62836 6.77827C5.36679 6.03984 6.36831 5.625 7.4126 5.625C9.08135 5.625 10.4782 6.50625 11.0585 7.92563C11.143 8.13254 11.2872 8.30961 11.4727 8.43425C11.6582 8.55889 11.8766 8.62545 12.1001 8.62545C12.3236 8.62545 12.542 8.55889 12.7275 8.43425C12.913 8.30961 13.0572 8.13254 13.1417 7.92563C13.722 6.50625 15.1188 5.625 16.7876 5.625C17.8319 5.625 18.8334 6.03984 19.5718 6.77827C20.3103 7.51669 20.7251 8.51821 20.7251 9.5625C20.7251 12.3206 18.3045 14.9784 16.2729 16.7213Z\" fill=\"white\"/>\n                </svg>\n                <span className=\"[font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-white text-base\">\n                  카드저장\n                </span>\n              </div>\n            </button>\n            <button\n              onClick={handleConsultation}\n              className=\"relative overflow-hidden rounded-lg transition-transform hover:scale-105\"\n              style={{ filter: 'drop-shadow(0px 2px 2px rgba(0, 0, 0, 0.25))' }}\n            >\n              <svg width=\"115\" height=\"43\" viewBox=\"0 0 115 43\" fill=\"none\">\n                <rect x=\"4.8\" y=\"4\" width=\"103.6\" height=\"31.6\" rx=\"5.41339\" fill=\"#CCFF00\" stroke=\"#CCFF00\" strokeWidth=\"2\"/>\n              </svg>\n              <div className=\"absolute inset-0 flex items-center justify-center gap-1\">\n                <svg width=\"22\" height=\"22\" viewBox=\"0 0 32 32\" fill=\"none\" className=\"flex-shrink-0\">\n                  <path d=\"M28.985 21.8852C28.7621 23.579 27.9303 25.1338 26.6449 26.2591C25.3595 27.3844 23.7084 28.0033 22 28.0002C12.075 28.0002 4.00001 19.9252 4.00001 10.0002C3.99695 8.29185 4.61587 6.64076 5.74118 5.35535C6.86649 4.06995 8.42122 3.23812 10.115 3.01524C10.5433 2.96294 10.9771 3.05056 11.3515 3.26503C11.7259 3.4795 12.0209 3.80932 12.1925 4.20524L14.8325 10.099V10.114C14.9639 10.4171 15.0181 10.7479 14.9904 11.0771C14.9627 11.4062 14.8539 11.7234 14.6738 12.0002C14.6513 12.034 14.6275 12.0652 14.6025 12.0965L12 15.1815C12.9363 17.084 14.9263 19.0565 16.8538 19.9952L19.8963 17.4065C19.9261 17.3814 19.9574 17.358 19.99 17.3365C20.2666 17.152 20.5849 17.0394 20.916 17.0088C21.2471 16.9783 21.5806 17.0307 21.8863 17.1615L21.9025 17.169L27.7913 19.8077C28.1879 19.9787 28.5185 20.2735 28.7337 20.6479C28.9489 21.0224 29.037 21.4565 28.985 21.8852Z\" fill=\"#17191A\"/>\n                </svg>\n                <span className=\"[font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-[#17191A] text-base\">\n                  상담신청\n                </span>\n              </div>\n            </button>\n          </div>\n        </div>\n\n        {/* Service Message */}\n        {showMessage && (\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n            <div className=\"bg-white rounded-lg p-6 shadow-lg\">\n              <div className=\"[font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-lg text-center text-[#333]\">\n                서비스 준비중입니다\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Toggle Modal */}\n        {showToggle && (\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n            <div className=\"bg-white rounded-2xl p-4\" style={{ width: '242px', height: '147px' }}>\n              <div className=\"text-center space-y-3 h-full flex flex-col justify-between\">\n                <div className=\"space-y-2\">\n                  <div className=\"[font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-[15px] text-[#333] leading-tight\">\n                    마이페이지에서 카드 저장 목록을<br />확인하실 수 있습니다.\n                  </div>\n                  <div className=\"[font-family:'SUITE-Medium',Helvetica] font-medium text-xs text-[#333]\">\n                    마이페이지로 이동할까요?\n                  </div>\n                </div>\n                <div className=\"flex gap-2\">\n                  <button\n                    onClick={() => setShowToggle(false)}\n                    className=\"flex-1 py-2 px-4 bg-gray-100 text-[#333] rounded-lg hover:bg-gray-200 transition-colors [font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-sm\"\n                  >\n                    아니오\n                  </button>\n                  <button\n                    onClick={() => setShowToggle(false)}\n                    className=\"flex-1 py-2 px-4 bg-white text-[#00D6F8] rounded-lg hover:bg-gray-50 transition-colors [font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-sm border border-[#00D6F8]\"\n                  >\n                    예\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n      </div>\n    </div>\n  );\n};","size_bytes":18467},"client/src/pages/Element.tsx":{"content":"import React, { useState, useEffect, useRef } from \"react\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Link, useLocation } from \"wouter\";\nimport starshopIcon from \"@assets/wh-icon-header-starshop_1755922566531.png\";\n\ndeclare global {\n  interface Window {\n    naver: any;\n    navermap_authFailure?: () => void;\n  }\n}\n\nexport const Element = (): JSX.Element => {\n  const filterButtons = [\n    { label: \"면적\", icon: \">\" },\n    { label: \"예산\", icon: \">\" },\n    { label: \"옵션\", icon: \">\" },\n  ];\n\n  const allBusinessCards = [\n    { id: \"wh-card-b-1\", src: \"/figmaAssets/wh-card-b-1_1755308360319.png\", title: \"헤나체험\", alt: \"헤나체험\" },\n    { id: \"wh-card-b-2\", src: \"/figmaAssets/wh-card-b-2_1755308360319.png\", title: \"복싱클럽\", alt: \"복싱클럽\", hasIcon: true, iconSrc: \"/figmaAssets/wh-icon-2-1.png\" },\n    { id: \"wh-card-c-1\", src: \"/figmaAssets/wh-card-c-1_1755308360319.png\", title: \"레코드카페\", alt: \"레코드카페\", hasIcon: true, iconSrc: \"/figmaAssets/wh-icon-2-1.png\" },\n    { id: \"wh-card-c-2\", src: \"/figmaAssets/wh-card-c-2_1755308360319.png\", title: \"캠핑 바\", alt: \"캠핑 바\", hasIcon: true, iconSrc: \"/figmaAssets/wh-icon-2-1.png\" },\n    { id: \"wh-card-h-1\", src: \"/figmaAssets/wh-card-h-1_1755308360320.png\", title: \"실내보드\", alt: \"실내보드\" },\n    { id: \"wh-card-h-2\", src: \"/figmaAssets/wh-card-h-2_1755308360320.png\", title: \"VR FPS\", alt: \"VR FPS\" },\n    { id: \"wh-card-p-1\", src: \"/figmaAssets/wh-card-p-1_1755308360320.png\", title: \"24시 펫용품\", alt: \"24시 펫용품\" },\n    { id: \"wh-card-p-2\", src: \"/figmaAssets/wh-card-p-2_1755308360320.png\", title: \"펫 셀프 목욕\", alt: \"펫 셀프 목욕\" },\n  ];\n\n  const mapRef = useRef<HTMLDivElement>(null);\n  const [businessCards, setBusinessCards] = useState(allBusinessCards.slice(0, 3));\n  const [selectedCard, setSelectedCard] = useState<string | null>(null);\n  const [showAreaSection, setShowAreaSection] = useState(false);\n  const [showBudgetSection, setShowBudgetSection] = useState(false);\n  const [showOptionSection, setShowOptionSection] = useState(false);\n  const [areaUnit, setAreaUnit] = useState<'sqm' | 'pyeong'>('sqm');\n  const [areaMin, setAreaMin] = useState(66);\n  const [areaMax, setAreaMax] = useState(165);\n  const [isDragging, setIsDragging] = useState<'min' | 'max' | null>(null);\n  \n  // 옵션 필터링 상태\n  const [selectedCategory, setSelectedCategory] = useState<string>('전체');\n  const [selectedSubCategory, setSelectedSubCategory] = useState<string>('전체');\n  \n  // 예산 필터링 상태\n  const [budgetMin, setBudgetMin] = useState(0);\n  const [budgetMax, setBudgetMax] = useState(25000);\n  const [depositMin, setDepositMin] = useState(35);\n  const [depositMax, setDepositMax] = useState(150);\n  const [includeManagementFee, setIncludeManagementFee] = useState(true);\n  const [budgetDragging, setBudgetDragging] = useState<'min' | 'max' | null>(null);\n  const [depositDragging, setDepositDragging] = useState<'min' | 'max' | null>(null);\n\n  const shuffleCards = () => {\n    // 랜덤으로 3개 선택\n    const shuffled = [...allBusinessCards].sort(() => 0.5 - Math.random());\n    setBusinessCards(shuffled.slice(0, 3));\n    setSelectedCard(null); // 선택된 카드 초기화\n  };\n\n  useEffect(() => {\n    shuffleCards();\n  }, []);\n\n  // 네이버 지도 초기화\n  useEffect(() => {\n    // 네이버 지도 API가 로드되었는지 확인\n    if (window.naver && window.naver.maps && mapRef.current) {\n      const mapOptions = {\n        center: new window.naver.maps.LatLng(37.3595704, 127.105399),\n        zoom: 15\n      };\n\n      const map = new window.naver.maps.Map(mapRef.current, mapOptions);\n    }\n\n    // 인증 실패 핸들러\n    window.navermap_authFailure = () => {\n      console.error('네이버 지도 API 인증 실패');\n    };\n  }, []);\n\n  const [, setLocation] = useLocation();\n\n  const bottomNavIcons = [\n    { id: \"h\", src1: \"/figmaAssets/wh-icon-footer-h-1.png\", src2: \"/figmaAssets/wh-icon-footer-h-2.png\", alt: \"홈\", route: \"/\" },\n    { id: \"s\", src1: \"/figmaAssets/wh-icon-footer-s-1.png\", src2: \"/figmaAssets/wh-icon-footer-s-2.png\", alt: \"상점\", route: \"/store\", active: true },\n    { id: \"b\", src1: \"/figmaAssets/wh-icon-footer-b-1.png\", src2: \"/figmaAssets/wh-icon-footer-b-2.png\", alt: \"건물\", route: \"/building\" },\n    { id: \"c\", src1: \"/figmaAssets/wh-icon-footer-c-1.png\", src2: \"/figmaAssets/wh-icon-footer-c-2.png\", alt: \"상담\", route: \"/consultation\" },\n    { id: \"m\", src1: \"/figmaAssets/wh-icon-footer-m-1.png\", src2: \"/figmaAssets/wh-icon-footer-m-2.png\", alt: \"마이페이지\", route: \"/mypage\" },\n  ];\n\n  return (\n    <div className=\"bg-white grid justify-items-center [align-items:start] w-screen\">\n      <div className=\"bg-white overflow-hidden w-[360px] h-[1142px] relative\">\n        <header className=\"absolute w-[362px] h-[63px] -top-px -left-px\">\n          <div className=\"absolute w-[362px] h-[62px] top-0 left-0 border border-solid border-[#dadada]\">\n            <nav className=\"inline-flex items-center gap-3 absolute top-[25px] left-[18px]\">\n              <Button\n                variant=\"ghost\"\n                className=\"relative w-fit mt-[-1.00px] [font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-[#b0b0b0] text-xl tracking-[0] leading-[normal] p-0 h-auto hover:bg-transparent\"\n                onClick={() => setLocation('/where-is-good')}\n                data-testid=\"button-where-is-good\"\n              >\n                어디가 좋을까?\n              </Button>\n\n              <Button\n                variant=\"ghost\"\n                className=\"relative w-fit mt-[-1.00px] [font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-[#666666] text-xl tracking-[0] leading-[normal] p-0 h-auto hover:bg-transparent\"\n                data-testid=\"button-what-to-do\"\n              >\n                여기에 뭐할까?\n              </Button>\n            </nav>\n\n            <Button\n              variant=\"ghost\"\n              size=\"icon\"\n              className=\"absolute p-0 flex items-center justify-center\"\n              style={{ top: '12px', right: '12px' }}\n              onClick={() => setLocation('/star')}\n              data-testid=\"button-star\"\n            >\n              <img\n                src={starshopIcon}\n                alt=\"스타샵\"\n                style={{ height: '38px', width: 'auto' }}\n              />\n            </Button>\n          </div>\n\n          <div className=\"absolute w-[122px] h-[3px] top-[60px] left-[151px] bg-[#666666]\" />\n        </header>\n\n        <main className=\"absolute w-[424px] h-[640px] top-[140px] left-[-33px]\">\n          <div className=\"absolute w-[424px] h-[169px] top-[27px] left-0\" />\n\n          <div className=\"absolute w-[367px] h-[640px] top-0 left-8\">\n            <section className=\"absolute w-[360px] h-[422px] top-5 left-px\">\n              <div className=\"absolute w-[360px] h-[74px] top-0 left-0\">\n                <div className=\"relative w-[328px] h-[53px] top-[7px] left-4\">\n                  <div className=\"input-wrap w-[328px] h-[53px] rounded-[8.94px] overflow-hidden border-[1.77px] border-solid border-[#00d6f8] backdrop-blur-[11.82px] backdrop-brightness-[100%] [-webkit-backdrop-filter:blur(11.82px)_brightness(100%)] bg-white\">\n                    <Input\n                      type=\"search\"\n                      className=\"w-full h-full px-[22px] py-[15px] bg-transparent border-0 outline-none ring-0 focus:ring-0 shadow-none [appearance:none] [-webkit-appearance:none] [background-clip:padding-box] [font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-[#666666] text-[16px] tracking-[0] leading-[20px] focus-visible:ring-0\"\n                      placeholder=\"어디에 자리 잡고 싶으신가요?\"\n                      style={{\n                        WebkitTextSizeAdjust: '100%',\n                        textSizeAdjust: '100%',\n                        fontSize: '16px'\n                      }}\n                    />\n\n                    <img\n                      className=\"absolute w-[38px] h-[38px] top-2 left-[282px] object-cover\"\n                      alt=\"Wh icon\"\n                      src=\"/figmaAssets/wh-icon-6-1.png\"\n                    />\n                  </div>\n\n                  <img\n                    className=\"absolute w-0.5 h-[18px] top-[18px] left-[15px]\"\n                    alt=\"Group\"\n                    src=\"/figmaAssets/group-1000005521.png\"\n                  />\n                </div>\n              </div>\n\n              <div \n                ref={mapRef}\n                className=\"absolute w-[328px] h-[348px] top-[74px] left-4 rounded-lg border-2 border-[#00D6F8]\"\n              ></div>\n            </section>\n\n            <Button\n              variant=\"link\"\n              className=\"absolute h-[22px] top-[618px] left-[274px] [font-family:'SUITE-SemiBold',Helvetica] font-semibold text-[#8d8d8d] text-xs tracking-[0] leading-[21.8px] underline whitespace-nowrap p-0 h-auto\"\n              onClick={shuffleCards}\n            >\n              다시 추천받기\n            </Button>\n\n            <h2 className=\"absolute h-[21px] top-[618px] left-4 [font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-[#666666] text-[16.8px] tracking-[0] leading-[normal]\">\n              추천 업종 3가지\n            </h2>\n\n            <div className=\"absolute w-[360px] h-[17px] top-0 left-0 [font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-[#666666] text-[14.4px] text-center tracking-[0] leading-[16.8px]\">\n              위치를 찍으면 업종을 추천해드려요!\n            </div>\n\n            <section className=\"absolute w-[285px] h-[108px] top-[465px] left-[18px]\">\n              <div className=\"absolute w-[283px] top-6 left-0 [font-family:'SUITE-Regular',Helvetica] font-normal text-[#666666] text-xs tracking-[0] leading-[21.2px]\">\n                도로명 주소: 강남구 테헤란로 152\n                <br />\n                지번주소: 강남구 역삼동 737\n                <br />\n                건물명/장소명: 삼성역, 크리에이티브크루\n                <br />\n                지도에서 직접 클릭하여 선택 가능\n              </div>\n\n              <div className=\"absolute w-[73px] h-5 top-0 left-0\">\n                <div className=\"absolute h-5 top-0 left-[22px] [font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-black text-[13px] tracking-[0] leading-5 whitespace-nowrap\">\n                  입력 방법\n                </div>\n\n                <img\n                  className=\"absolute w-5 h-5 top-0 left-0 object-cover\"\n                  alt=\"Wh icon\"\n                  src=\"/figmaAssets/wh-icon-7-1.png\"\n                />\n              </div>\n            </section>\n          </div>\n\n          <img\n            className=\"absolute w-[53px] h-[53px] top-[217px] left-[188px] object-cover\"\n            alt=\"Mappin\"\n            src=\"/figmaAssets/mappin-1.png\"\n          />\n        </main>\n\n        <nav className=\"absolute w-[362px] h-[55px] top-[1088px] -left-px bg-gray-color6-f6f7f9 border-[1.2px] border-solid border-[#dadada]\">\n          <div className=\"inline-flex items-center gap-[38px] relative top-3 left-[34px]\">\n            {bottomNavIcons.map((icon) => (\n              <Button\n                key={icon.id}\n                variant=\"ghost\"\n                size=\"icon\"\n                className=\"relative w-7 h-7 p-0 hover:bg-transparent\"\n                onClick={() => setLocation(icon.route)}\n              >\n                <img\n                  className=\"w-7 h-7 object-cover\"\n                  alt={icon.alt}\n                  src={icon.active ? icon.src2 : icon.src1}\n                />\n              </Button>\n            ))}\n          </div>\n        </nav>\n\n        <div className=\"inline-flex items-center gap-3 absolute top-[86px] left-[18px] z-10\">\n          {filterButtons.map((button, index) => (\n            <button\n              key={index}\n              onClick={() => {\n                if (button.label === \"면적\") {\n                  setShowAreaSection(!showAreaSection);\n                  setShowBudgetSection(false);\n                  setShowOptionSection(false);\n                } else if (button.label === \"예산\") {\n                  setShowBudgetSection(!showBudgetSection);\n                  setShowAreaSection(false);\n                  setShowOptionSection(false);\n                } else if (button.label === \"옵션\") {\n                  setShowOptionSection(!showOptionSection);\n                  setShowAreaSection(false);\n                  setShowBudgetSection(false);\n                }\n              }}\n              className={`relative w-[65px] h-7 hover:bg-[#00c6e8] text-white rounded-[40px] flex items-center justify-center transition-colors cursor-pointer ${\n                (button.label === \"면적\" && showAreaSection) || \n                (button.label === \"예산\" && showBudgetSection) || \n                (button.label === \"옵션\" && showOptionSection) \n                  ? 'bg-[#CCFF00] text-[#666666]' \n                  : 'bg-[#00d6f8]'\n              }`}\n            >\n              <div className=\"flex items-center gap-[3px]\">\n                <div className={`text-[15px] tracking-[-0.23px] leading-5 ${\n                  button.label === \"면적\" || button.label === \"예산\" || button.label === \"옵션\" \n                    ? \"[font-family:'SUITE-Medium',Helvetica] font-medium\" \n                    : \"[font-family:'SUITE-ExtraBold',Helvetica] font-extrabold\"\n                } ${\n                  (button.label === \"면적\" && showAreaSection) || \n                  (button.label === \"예산\" && showBudgetSection) || \n                  (button.label === \"옵션\" && showOptionSection) \n                    ? 'text-[#666666]' : ''\n                }`}>\n                  {button.label}\n                </div>\n                <div className={`w-2.5 rotate-90 text-[15px] tracking-[-0.23px] leading-5 ${\n                  button.label === \"면적\" || button.label === \"예산\" || button.label === \"옵션\" \n                    ? \"[font-family:'SUITE-Medium',Helvetica] font-medium\" \n                    : \"[font-family:'SUITE-ExtraBold',Helvetica] font-extrabold\"\n                } ${\n                  (button.label === \"면적\" && showAreaSection) || \n                  (button.label === \"예산\" && showBudgetSection) || \n                  (button.label === \"옵션\" && showOptionSection) \n                    ? 'rotate-[-90deg]' : 'rotate-90'\n                } ${\n                  (button.label === \"면적\" && showAreaSection) || \n                  (button.label === \"예산\" && showBudgetSection) || \n                  (button.label === \"옵션\" && showOptionSection) \n                    ? 'text-[#666666]' : ''\n                } transition-transform`}>\n                  {button.icon}\n                </div>\n              </div>\n            </button>\n          ))}\n        </div>\n\n        <div className=\"absolute h-[18px] top-[1009px] left-[83px] [font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-[#666666] text-[14.4px] tracking-[0] leading-[normal]\">\n          마음에 드는 카드를 톡! 눌러보세요\n        </div>\n\n        <section className=\"absolute w-[330px] h-[166px] top-[795px] left-[15px]\">\n          <div className=\"absolute w-[330px] h-5 top-[146px] left-0\">\n            {businessCards.map((card, index) => (\n              <div\n                key={card.id}\n                className=\"absolute h-5 top-0 [font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-black text-base tracking-[0] leading-5 whitespace-nowrap flex items-center justify-center\"\n                style={{\n                  left: `${index * (105.24 + 7.26) + 52.62}px`,\n                  transform: 'translateX(-50%)'\n                }}\n              >\n                {card.hasIcon && (\n                  <img\n                    className=\"relative w-5 h-5 object-cover mr-1\"\n                    alt=\"Wh icon\"\n                    src={card.iconSrc}\n                  />\n                )}\n                {card.title}\n              </div>\n            ))}\n          </div>\n\n          <div className=\"inline-flex items-center gap-[7.26px] absolute top-0 left-0\">\n            {businessCards.map((card, index) => (\n              <Link key={card.id} href={`/card/${card.id}`}>\n                <Button\n                  variant=\"ghost\"\n                  className={`relative w-[105.24px] h-[131.74px] p-0 hover:bg-transparent transition-all duration-200 ${\n                    selectedCard === card.id ? 'border-2 border-[#00D6F8]' : ''\n                  }`}\n                  onClick={() => {\n                    setSelectedCard(card.id);\n                    // 마지막으로 클릭한 카드 ID를 localStorage에 저장\n                    localStorage.setItem('lastViewedCardId', card.id);\n                  }}\n                  style={{\n                    borderStyle: selectedCard === card.id ? 'solid' : 'none',\n                    borderWidth: selectedCard === card.id ? '2px' : '0px',\n                    borderColor: selectedCard === card.id ? '#00D6F8' : 'transparent'\n                  }}\n                >\n                  <img\n                    className=\"w-[105.24px] h-[131.74px] object-cover rounded-lg\"\n                    alt={card.alt}\n                    src={card.src}\n                  />\n                </Button>\n              </Link>\n            ))}\n          </div>\n        </section>\n\n        {/* Area Range Section */}\n        {showAreaSection && (\n          <div className=\"absolute w-[360px] bg-white border-b border-gray-200 shadow-lg\" style={{ top: '122px', left: '0px', zIndex: 15 }}>\n            <div className=\"p-4\">\n              {/* Header */}\n              <div className=\"flex justify-between items-center mb-3\">\n                <div className=\"flex items-center\">\n                  <h3 className=\"[font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-base text-[#111]\">면적(적용면적)</h3>\n                  <button \n                    onClick={() => {\n                      setAreaUnit(areaUnit === 'sqm' ? 'pyeong' : 'sqm');\n                    }}\n                    className=\"ml-1 hover:opacity-80 transition-opacity flex items-center gap-1\"\n                    style={{ marginLeft: '6px' }}\n                  >\n                    <img \n                      src=\"/assets/wh-icon-13_1755370522921.png\" \n                      alt=\"conversion icon\" \n                      width=\"18\" \n                      height=\"18\" \n                    />\n                    <span className=\"[font-family:'SUITE-Medium',Helvetica] font-medium text-sm underline\" style={{ color: '#8E8E8E' }}>\n                      평 변환\n                    </span>\n                  </button>\n                </div>\n                <span className=\"text-sm text-[#00E6FF] [font-family:'SUITE-ExtraBold',Helvetica] font-extrabold cursor-pointer\" onClick={() => {\n                  setAreaMin(33);\n                  setAreaMax(330);\n                }}>\n                  {(() => {\n                    // 전체 범위인지 확인\n                    if (areaMin === 33 && areaMax === 330) {\n                      return \"전체\";\n                    }\n                    \n                    // 단위에 따른 변환\n                    if (areaUnit === 'sqm') {\n                      return `${areaMin}㎡ ~ ${areaMax}㎡`;\n                    } else {\n                      const minPyeong = Math.round((areaMin / 3.305785) * 10) / 10;\n                      const maxPyeong = Math.round((areaMax / 3.305785) * 10) / 10;\n                      return `${minPyeong}평 ~ ${maxPyeong}평`;\n                    }\n                  })()}\n                </span>\n              </div>\n\n              {/* Range Slider */}\n              <div className=\"range-slider mb-4\" style={{ marginTop: '24px', position: 'relative' }}>\n                {/* Track */}\n                <div className=\"track absolute h-1.5 bg-[#DDE3E9] rounded-full\" style={{ top: 'calc(50% + 4px)', transform: 'translateY(-50%)', left: '50%', marginLeft: '-154px', width: '308px' }}></div>\n                \n                {/* Fill */}\n                <div \n                  className=\"fill absolute h-1.5 bg-[#CCFF00] rounded-full\"\n                  style={{\n                    top: 'calc(50% + 4px)',\n                    transform: 'translateY(-50%)',\n                    left: `calc(50% - 154px + ${((areaMin - 33) / (330 - 33)) * 308}px)`,\n                    width: `${((areaMax - areaMin) / (330 - 33)) * 308}px`\n                  }}\n                ></div>\n\n                {/* Min Handle */}\n                <input\n                  id=\"range-min\"\n                  type=\"range\"\n                  className=\"wh-range\"\n                  min=\"33\"\n                  max=\"330\"\n                  value={areaMin}\n                  style={{ position: 'absolute', left: 'calc(50% - 154px)', width: '308px' }}\n                  onChange={(e) => {\n                    const newMin = Math.min(Number(e.target.value), areaMax - 36);\n                    setAreaMin(newMin);\n                    setIsDragging('min');\n                  }}\n                  onMouseUp={() => setIsDragging(null)}\n                  onTouchEnd={() => setIsDragging(null)}\n                />\n                \n                {/* Max Handle */}\n                <input\n                  id=\"range-max\"\n                  type=\"range\"\n                  className=\"wh-range\"\n                  min=\"33\"\n                  max=\"330\"\n                  value={areaMax}\n                  style={{ position: 'absolute', left: 'calc(50% - 154px)', width: '308px' }}\n                  onChange={(e) => {\n                    const newMax = Math.max(Number(e.target.value), areaMin + 36);\n                    setAreaMax(newMax);\n                    setIsDragging('max');\n                  }}\n                  onMouseUp={() => setIsDragging(null)}\n                  onTouchEnd={() => setIsDragging(null)}\n                />\n\n                {/* Visual Handles */}\n                <div \n                  className=\"absolute w-8 h-8 transform -translate-x-1/2 -translate-y-1/2 z-10\"\n                  style={{ \n                    top: 'calc(50% + 4px)',\n                    left: `calc(50% - 154px + ${((areaMin - 33) / (330 - 33)) * 308}px)` \n                  }}\n                >\n                  <img src=\"/assets/wh-icon-12_1755367755885.png\" alt=\"slider handle\" className=\"w-full h-full\" />\n                </div>\n                <div \n                  className=\"absolute w-8 h-8 transform -translate-x-1/2 -translate-y-1/2 z-10\"\n                  style={{ \n                    top: 'calc(50% + 4px)',\n                    left: `calc(50% - 154px + ${((areaMax - 33) / (330 - 33)) * 308}px)` \n                  }}\n                >\n                  <img src=\"/assets/wh-icon-12_1755367755885.png\" alt=\"slider handle\" className=\"w-full h-full\" />\n                </div>\n\n                {/* Drag Bubbles */}\n                {isDragging === 'min' && (\n                  <div \n                    className=\"absolute bg-[#111] text-white text-xs px-2 py-1 rounded transform -translate-x-1/2 -translate-y-10 [font-family:'SUITE-ExtraBold',Helvetica] font-extrabold pointer-events-none z-30\"\n                    style={{ left: `calc(50% - 154px + ${((areaMin - 33) / (330 - 33)) * 308}px)` }}\n                  >\n                    {areaUnit === 'sqm' ? `${areaMin}㎡부터` : `${Math.round((areaMin/3.305785)*10)/10}평부터`}\n                  </div>\n                )}\n                {isDragging === 'max' && (\n                  <div \n                    className=\"absolute bg-[#111] text-white text-xs px-2 py-1 rounded transform -translate-x-1/2 -translate-y-10 [font-family:'SUITE-ExtraBold',Helvetica] font-extrabold pointer-events-none z-30\"\n                    style={{ left: `calc(50% - 154px + ${((areaMax - 33) / (330 - 33)) * 308}px)` }}\n                  >\n                    {areaUnit === 'sqm' ? `${areaMax}㎡까지` : `${Math.round((areaMax/3.305785)*10)/10}평까지`}\n                  </div>\n                )}\n              </div>\n\n              {/* Tick Labels */}\n              <div className=\"flex justify-between text-xs text-[#777] [font-family:'SUITE-Medium',Helvetica] font-medium px-1\" style={{ marginTop: '-4px' }}>\n                <span>최소</span>\n                <span>{areaUnit === 'sqm' ? '66㎡' : '20평'}</span>\n                <span>{areaUnit === 'sqm' ? '165㎡' : '50평'}</span>\n                <span>최대</span>\n              </div>\n\n              {/* Bottom Buttons */}\n              <div className=\"flex gap-3\" style={{ marginTop: '36px' }}>\n                <button\n                  onClick={() => {\n                    setAreaMin(66);\n                    setAreaMax(165);\n                    setAreaUnit('sqm');\n                  }}\n                  className=\"bg-transparent text-[#444] [font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-sm hover:bg-gray-50 rounded-lg transition-colors\" style={{ flex: '0.9', paddingLeft: '19px', paddingRight: '19px', paddingTop: '11px', paddingBottom: '11px' }}\n                >\n                  초기화\n                </button>\n                <button\n                  onClick={() => {\n                    // Apply area filter logic here\n                    setShowAreaSection(false);\n                  }}\n                  className=\"bg-[#00E6FF] text-white [font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-sm hover:bg-[#00D6F8] rounded-lg transition-colors\" style={{ flex: '1.1', paddingLeft: '19px', paddingRight: '19px', paddingTop: '11px', paddingBottom: '11px' }}\n                >\n                  적용하기\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* 예산 섹션 */}\n        {showBudgetSection && (\n          <div className=\"absolute w-[360px] bg-white border-b border-gray-200 shadow-lg\" style={{ top: '122px', left: '0px', zIndex: 15 }}>\n            <div className=\"p-4\">\n              {/* 보증금 섹션 */}\n              <div className=\"mb-8\">\n                <div className=\"flex justify-between items-center mb-4\">\n                  <h3 className=\"[font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-base text-[#111]\">보증금</h3>\n                  <span className=\"text-sm text-[#00E6FF] [font-family:'SUITE-ExtraBold',Helvetica] font-extrabold cursor-pointer\" onClick={() => {\n                    setBudgetMin(0);\n                    setBudgetMax(25000);\n                  }}>\n                    {(() => {\n                      // 전체 범위인지 확인\n                      if (budgetMin === 0 && budgetMax === 25000) {\n                        return \"전체\";\n                      }\n                      \n                      // 범위 표시\n                      const formatAmount = (amount: number) => {\n                        if (amount < 10000) {\n                          return `${Math.round(amount / 1000)}천만`;\n                        } else {\n                          return `${(amount / 10000).toFixed(2)}억`;\n                        }\n                      };\n                      return `${formatAmount(budgetMin)} ~ ${formatAmount(budgetMax)}`;\n                    })()}\n                  </span>\n                </div>\n\n                {/* 보증금 Range Slider */}\n                <div className=\"range-slider mb-4\" style={{ marginTop: '24px', position: 'relative' }}>\n                  {/* Track */}\n                  <div className=\"track absolute h-1.5 bg-[#DDE3E9] rounded-full\" style={{ top: 'calc(50% + 4px)', transform: 'translateY(-50%)', left: '50%', marginLeft: '-154px', width: '308px' }}></div>\n                  \n                  {/* Fill */}\n                  <div \n                    className=\"fill absolute h-1.5 bg-[#CCFF00] rounded-full\"\n                    style={{\n                      top: 'calc(50% + 4px)',\n                      transform: 'translateY(-50%)',\n                      left: `calc(50% - 154px + ${(budgetMin / 25000) * 308}px)`,\n                      width: `${((budgetMax - budgetMin) / 25000) * 308}px`\n                    }}\n                  ></div>\n\n                  {/* Min Handle */}\n                  <input\n                    type=\"range\"\n                    className=\"wh-range\"\n                    min=\"0\"\n                    max=\"25000\"\n                    value={budgetMin}\n                    style={{ position: 'absolute', left: 'calc(50% - 154px)', width: '308px' }}\n                    onChange={(e) => {\n                      // 48px을 값 차이로 변환 (슬라이더 너비를 대략 308px로 가정)\n                      const minGap = (48 / 308) * 25000; // 약 3896\n                      const newMin = Math.min(Number(e.target.value), budgetMax - minGap);\n                      setBudgetMin(newMin);\n                      setBudgetDragging('min');\n                    }}\n                    onMouseUp={() => setBudgetDragging(null)}\n                    onTouchEnd={() => setBudgetDragging(null)}\n                  />\n                  \n                  {/* Max Handle */}\n                  <input\n                    type=\"range\"\n                    className=\"wh-range\"\n                    min=\"0\"\n                    max=\"25000\"\n                    value={budgetMax}\n                    style={{ position: 'absolute', left: 'calc(50% - 154px)', width: '308px' }}\n                    onChange={(e) => {\n                      // 48px을 값 차이로 변환 (슬라이더 너비를 대략 308px로 가정)\n                      const minGap = (48 / 308) * 25000; // 약 3896\n                      const newMax = Math.max(Number(e.target.value), budgetMin + minGap);\n                      setBudgetMax(newMax);\n                      setBudgetDragging('max');\n                    }}\n                    onMouseUp={() => setBudgetDragging(null)}\n                    onTouchEnd={() => setBudgetDragging(null)}\n                  />\n\n                  {/* Visual Handles */}\n                  <div \n                    className=\"absolute w-8 h-8 transform -translate-x-1/2 -translate-y-1/2 z-10\"\n                    style={{ top: 'calc(50% + 4px)', left: `calc(50% - 154px + ${(budgetMin / 25000) * 308}px)` }}\n                  >\n                    <img src=\"/assets/wh-icon-12-handle.png\" alt=\"slider handle\" className=\"w-full h-full\" />\n                  </div>\n                  <div \n                    className=\"absolute w-8 h-8 transform -translate-x-1/2 -translate-y-1/2 z-10\"\n                    style={{ top: 'calc(50% + 4px)', left: `calc(50% - 154px + ${(budgetMax / 25000) * 308}px)` }}\n                  >\n                    <img src=\"/assets/wh-icon-12-handle.png\" alt=\"slider handle\" className=\"w-full h-full\" />\n                  </div>\n\n                  {/* Drag Bubbles */}\n                  {budgetDragging === 'min' && (\n                    <div \n                      className=\"absolute bg-[#111] text-white text-xs px-2 py-1 rounded transform -translate-x-1/2 -translate-y-10 [font-family:'SUITE-ExtraBold',Helvetica] font-extrabold pointer-events-none z-30\"\n                      style={{ left: `calc(50% - 154px + ${(budgetMin / 25000) * 308}px)` }}\n                    >\n                      {budgetMin < 10000 ? `${Math.round(budgetMin / 1000)}천만부터` : `${(budgetMin / 10000).toFixed(2)}억부터`}\n                    </div>\n                  )}\n                  {budgetDragging === 'max' && (\n                    <div \n                      className=\"absolute bg-[#111] text-white text-xs px-2 py-1 rounded transform -translate-x-1/2 -translate-y-10 [font-family:'SUITE-ExtraBold',Helvetica] font-extrabold pointer-events-none z-30\"\n                      style={{ left: `calc(50% - 154px + ${(budgetMax / 25000) * 308}px)` }}\n                    >\n                      {budgetMax < 10000 ? `${Math.round(budgetMax / 1000)}천만까지` : `${(budgetMax / 10000).toFixed(2)}억까지`}\n                    </div>\n                  )}\n                </div>\n\n                {/* 보증금 Labels */}\n                <div className=\"flex justify-between text-xs text-[#777] [font-family:'SUITE-Medium',Helvetica] font-medium px-1\" style={{ marginTop: '-4px' }}>\n                  <span>최소</span>\n                  <span>5천만</span>\n                  <span>2.5억</span>\n                  <span>최대</span>\n                </div>\n              </div>\n\n              {/* 임대료(월세) 섹션 */}\n              <div className=\"mb-8\">\n                <div className=\"flex justify-between items-center mb-4\">\n                  <h3 className=\"[font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-base text-[#111]\">임대료(월세)</h3>\n                  <span className=\"text-sm text-[#00E6FF] [font-family:'SUITE-ExtraBold',Helvetica] font-extrabold cursor-pointer\" onClick={() => {\n                    setDepositMin(35);\n                    setDepositMax(150);\n                  }}>\n                    {(() => {\n                      // 전체 범위인지 확인\n                      if (depositMin === 35 && depositMax === 150) {\n                        return \"전체\";\n                      }\n                      \n                      // 범위 표시\n                      return `${Math.round(depositMin)}만 ~ ${Math.round(depositMax)}만`;\n                    })()}\n                  </span>\n                </div>\n\n                {/* 임대료 Range Slider */}\n                <div className=\"range-slider mb-4\" style={{ marginTop: '24px', position: 'relative' }}>\n                  {/* Track */}\n                  <div className=\"track absolute h-1.5 bg-[#DDE3E9] rounded-full\" style={{ top: 'calc(50% + 4px)', transform: 'translateY(-50%)', left: '50%', marginLeft: '-154px', width: '308px' }}></div>\n                  \n                  {/* Fill */}\n                  <div \n                    className=\"fill absolute h-1.5 bg-[#CCFF00] rounded-full\"\n                    style={{\n                      top: 'calc(50% + 4px)',\n                      transform: 'translateY(-50%)',\n                      left: `calc(50% - 154px + ${((depositMin - 35) / (150 - 35)) * 308}px)`,\n                      width: `${((depositMax - depositMin) / (150 - 35)) * 308}px`\n                    }}\n                  ></div>\n\n                  {/* Min Handle */}\n                  <input\n                    type=\"range\"\n                    className=\"wh-range\"\n                    min=\"35\"\n                    max=\"150\"\n                    value={depositMin}\n                    style={{ position: 'absolute', left: 'calc(50% - 154px)', width: '308px' }}\n                    onChange={(e) => {\n                      // 48px을 값 차이로 변환 (슬라이더 너비를 대략 308px로 가정)\n                      const minGap = (48 / 308) * (150 - 35); // 약 18.0\n                      const newMin = Math.min(Number(e.target.value), depositMax - minGap);\n                      setDepositMin(newMin);\n                      setDepositDragging('min');\n                    }}\n                    onMouseUp={() => setDepositDragging(null)}\n                    onTouchEnd={() => setDepositDragging(null)}\n                  />\n                  \n                  {/* Max Handle */}\n                  <input\n                    type=\"range\"\n                    className=\"wh-range\"\n                    min=\"35\"\n                    max=\"150\"\n                    value={depositMax}\n                    style={{ position: 'absolute', left: 'calc(50% - 154px)', width: '308px' }}\n                    onChange={(e) => {\n                      // 48px을 값 차이로 변환 (슬라이더 너비를 대략 308px로 가정)\n                      const minGap = (48 / 308) * (150 - 35); // 약 18.0\n                      const newMax = Math.max(Number(e.target.value), depositMin + minGap);\n                      setDepositMax(newMax);\n                      setDepositDragging('max');\n                    }}\n                    onMouseUp={() => setDepositDragging(null)}\n                    onTouchEnd={() => setDepositDragging(null)}\n                  />\n\n                  {/* Visual Handles */}\n                  <div \n                    className=\"absolute w-8 h-8 transform -translate-x-1/2 -translate-y-1/2 z-10\"\n                    style={{ top: 'calc(50% + 4px)', left: `calc(50% - 154px + ${((depositMin - 35) / (150 - 35)) * 308}px)` }}\n                  >\n                    <img src=\"/assets/wh-icon-12-handle.png\" alt=\"slider handle\" className=\"w-full h-full\" />\n                  </div>\n                  <div \n                    className=\"absolute w-8 h-8 transform -translate-x-1/2 -translate-y-1/2 z-10\"\n                    style={{ top: 'calc(50% + 4px)', left: `calc(50% - 154px + ${((depositMax - 35) / (150 - 35)) * 308}px)` }}\n                  >\n                    <img src=\"/assets/wh-icon-12-handle.png\" alt=\"slider handle\" className=\"w-full h-full\" />\n                  </div>\n\n                  {/* Drag Bubbles */}\n                  {depositDragging === 'min' && (\n                    <div \n                      className=\"absolute bg-[#111] text-white text-xs px-2 py-1 rounded transform -translate-x-1/2 -translate-y-10 [font-family:'SUITE-ExtraBold',Helvetica] font-extrabold pointer-events-none z-30\"\n                      style={{ left: `${((depositMin - 35) / (150 - 35)) * 100}%` }}\n                    >\n                      {Math.round(depositMin)}만부터\n                    </div>\n                  )}\n                  {depositDragging === 'max' && (\n                    <div \n                      className=\"absolute bg-[#111] text-white text-xs px-2 py-1 rounded transform -translate-x-1/2 -translate-y-10 [font-family:'SUITE-ExtraBold',Helvetica] font-extrabold pointer-events-none z-30\"\n                      style={{ left: `${((depositMax - 35) / (150 - 35)) * 100}%` }}\n                    >\n                      {Math.round(depositMax)}만까지\n                    </div>\n                  )}\n                </div>\n\n                {/* 임대료 Labels */}\n                <div className=\"flex justify-between text-xs text-[#777] [font-family:'SUITE-Medium',Helvetica] font-medium px-1\" style={{ marginTop: '-4px' }}>\n                  <span>최소</span>\n                  <span>150만</span>\n                  <span>500만</span>\n                  <span>최대</span>\n                </div>\n              </div>\n\n              {/* 관리비 포함하여 찾기 토글 */}\n              <div className=\"flex justify-between items-center mb-6\">\n                <span className=\"[font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-base text-[#111]\">관리비 포함하여 찾기</span>\n                <button\n                  onClick={() => setIncludeManagementFee(!includeManagementFee)}\n                  className={`relative inline-flex w-12 h-6 rounded-full transition-colors ${\n                    includeManagementFee ? 'bg-[#00D6F8]' : 'bg-gray-300'\n                  }`}\n                >\n                  <span\n                    className={`inline-block w-5 h-5 bg-white rounded-full transition-transform ${\n                      includeManagementFee ? 'translate-x-6' : 'translate-x-0.5'\n                    }`}\n                    style={{ marginTop: '2px' }}\n                  />\n                </button>\n              </div>\n\n              {/* Bottom Buttons */}\n              <div className=\"flex gap-3\" style={{ marginTop: '24px' }}>\n                <button\n                  onClick={() => {\n                    setBudgetMin(0);\n                    setBudgetMax(25000);\n                    setDepositMin(35);\n                    setDepositMax(150);\n                    setIncludeManagementFee(true);\n                  }}\n                  className=\"bg-transparent text-[#444] [font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-sm hover:bg-gray-50 rounded-lg transition-colors\" \n                  style={{ flex: '0.9', paddingLeft: '19px', paddingRight: '19px', paddingTop: '11px', paddingBottom: '11px' }}\n                >\n                  초기화\n                </button>\n                <button\n                  onClick={() => {\n                    setShowBudgetSection(false);\n                  }}\n                  className=\"bg-[#00E6FF] text-white [font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-sm hover:bg-[#00D6F8] rounded-lg transition-colors\" \n                  style={{ flex: '1.1', paddingLeft: '19px', paddingRight: '19px', paddingTop: '11px', paddingBottom: '11px' }}\n                >\n                  적용하기\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* 옵션 섹션 */}\n        {showOptionSection && (\n          <div className=\"absolute w-[360px] bg-white border-b border-gray-200 shadow-lg\" style={{ top: '122px', left: '0px', zIndex: 15 }}>\n            <div className=\"p-4\">\n              {/* Header */}\n              <div className=\"flex justify-between items-center mb-4\">\n                <h3 className=\"[font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-base text-[#111]\">거래유형</h3>\n              </div>\n\n              {/* 거래유형 버튼들 */}\n              <div className=\"flex gap-3 mb-6\">\n                <button\n                  onClick={() => setSelectedCategory('전세')}\n                  className={`py-3 rounded-lg [font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-sm transition-colors ${\n                    selectedCategory === '전세' \n                      ? 'bg-[#00D6F8] text-white' \n                      : 'bg-gray-100 text-[#666] hover:bg-gray-200'\n                  }`}\n                  style={{ width: '104px' }}\n                >\n                  전세\n                </button>\n                <button\n                  onClick={() => setSelectedCategory('임대(월세)')}\n                  className={`py-3 rounded-lg [font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-sm transition-colors ${\n                    selectedCategory === '임대(월세)' \n                      ? 'bg-[#00D6F8] text-white' \n                      : 'bg-gray-100 text-[#666] hover:bg-gray-200'\n                  }`}\n                  style={{ width: '104px' }}\n                >\n                  임대(월세)\n                </button>\n                <button\n                  onClick={() => setSelectedCategory('매매')}\n                  className={`py-3 rounded-lg [font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-sm transition-colors ${\n                    selectedCategory === '매매' \n                      ? 'bg-[#00D6F8] text-white' \n                      : 'bg-gray-100 text-[#666] hover:bg-gray-200'\n                  }`}\n                  style={{ width: '104px' }}\n                >\n                  매매\n                </button>\n              </div>\n\n              {/* 층 섹션 */}\n              <div className=\"mb-6\">\n                <h4 className=\"[font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-base text-[#111] mb-3\">층</h4>\n                <div className=\"flex gap-3\">\n                  <button\n                    onClick={() => setSelectedSubCategory('전체')}\n                    className={`py-3 rounded-lg [font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-sm transition-colors ${\n                      selectedSubCategory === '전체' \n                        ? 'bg-[#00D6F8] text-white' \n                        : 'bg-gray-100 text-[#666] hover:bg-gray-200'\n                    }`}\n                    style={{ width: '159px' }}\n                  >\n                    전체\n                  </button>\n                  <button\n                    onClick={() => setSelectedSubCategory('1층만 보기')}\n                    className={`py-3 rounded-lg [font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-sm transition-colors ${\n                      selectedSubCategory === '1층만 보기' \n                        ? 'bg-[#00D6F8] text-white' \n                        : 'bg-gray-100 text-[#666] hover:bg-gray-200'\n                    }`}\n                    style={{ width: '159px' }}\n                  >\n                    1층만 보기\n                  </button>\n                </div>\n              </div>\n\n\n\n              {/* Bottom Buttons */}\n              <div className=\"flex gap-3\" style={{ marginTop: '24px' }}>\n                <button\n                  onClick={() => {\n                    setSelectedCategory('전체');\n                    setSelectedSubCategory('전체');\n                  }}\n                  className=\"bg-transparent text-[#444] [font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-sm hover:bg-gray-50 rounded-lg transition-colors\" style={{ flex: '0.9', paddingLeft: '19px', paddingRight: '19px', paddingTop: '11px', paddingBottom: '11px' }}\n                >\n                  초기화\n                </button>\n                <button\n                  onClick={() => {\n                    // Apply option filter logic here\n                    setShowOptionSection(false);\n                  }}\n                  className=\"bg-[#00E6FF] text-white [font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-sm hover:bg-[#00D6F8] rounded-lg transition-colors\" style={{ flex: '1.1', paddingLeft: '19px', paddingRight: '19px', paddingTop: '11px', paddingBottom: '11px' }}\n                >\n                  적용하기\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};","size_bytes":45856},"client/src/pages/HomePage.tsx":{"content":"import React from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { useLocation } from \"wouter\";\n\nexport const HomePage = (): JSX.Element => {\n  const [, setLocation] = useLocation();\n\n  const bottomNavIcons = [\n    { id: \"h\", src1: \"/figmaAssets/wh-icon-footer-h-1.png\", src2: \"/figmaAssets/wh-icon-footer-h-2.png\", alt: \"홈\", route: \"/\", active: true },\n    { id: \"s\", src1: \"/figmaAssets/wh-icon-footer-s-1.png\", src2: \"/figmaAssets/wh-icon-footer-s-2.png\", alt: \"상점\", route: \"/store\" },\n    { id: \"b\", src1: \"/figmaAssets/wh-icon-footer-b-1.png\", src2: \"/figmaAssets/wh-icon-footer-b-2.png\", alt: \"건물\", route: \"/building\" },\n    { id: \"c\", src1: \"/figmaAssets/wh-icon-footer-c-1.png\", src2: \"/figmaAssets/wh-icon-footer-c-2.png\", alt: \"상담\", route: \"/consultation\" },\n    { id: \"m\", src1: \"/figmaAssets/wh-icon-footer-m-1.png\", src2: \"/figmaAssets/wh-icon-footer-m-2.png\", alt: \"마이페이지\", route: \"/mypage\" },\n  ];\n\n  return (\n    <div className=\"bg-white grid justify-items-center [align-items:start] w-screen\">\n      <div className=\"bg-white overflow-hidden w-[360px] h-[800px] relative\">\n        {/* Content */}\n        <main className=\"absolute w-[360px] top-0 left-0 bottom-[55px] flex items-center justify-center\">\n          <div className=\"text-center px-8\">\n            <h2 className=\"[font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-[#333] text-xl mb-4\">\n              출퇴근 최적 거주지 추천 및 룸메이트 매칭 서비스\n            </h2>\n            <p className=\"[font-family:'SUITE-Medium',Helvetica] font-medium text-[#666] text-base\">\n              준비중입니다.\n            </p>\n          </div>\n        </main>\n\n        {/* Bottom Navigation */}\n        <nav className=\"absolute w-[360px] h-[55px] bottom-0 left-0 bg-gray-color6-f6f7f9 border-t-[1.2px] border-solid border-[#dadada]\">\n          <div className=\"inline-flex items-center gap-[38px] relative top-3 left-[34px]\">\n            {bottomNavIcons.map((icon) => (\n              <Button\n                key={icon.id}\n                variant=\"ghost\"\n                size=\"icon\"\n                className=\"relative w-7 h-7 p-0 hover:bg-transparent\"\n                onClick={() => setLocation(icon.route)}\n              >\n                <img\n                  className=\"w-7 h-7 object-cover\"\n                  alt={icon.alt}\n                  src={icon.active ? icon.src2 : icon.src1}\n                />\n              </Button>\n            ))}\n          </div>\n        </nav>\n      </div>\n    </div>\n  );\n};","size_bytes":2552},"client/src/pages/LocationRecommendationPage.tsx":{"content":"import React, { useState, useRef, useEffect } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { useLocation, useSearch } from \"wouter\";\n\ndeclare global {\n  interface Window {\n    naver: any;\n    navermap_authFailure?: () => void;\n  }\n}\n\nimport wh_icon_header_mic from \"@assets/wh-icon-header-mic_1755433044504.png\";\nimport wh_icon_header_delete from \"@assets/wh-icon-header-delete_1755433061533.png\";\nimport wh_icon_header_starshop from \"@assets/wh-icon-header-starshop_1755452785507.png\";\nimport wh_icon_header_back from \"@assets/wh-icon-header-back_1755471147523.png\";\nimport wh_icon_14 from \"@assets/wh-icon-14_1755898331744.png\";\nimport wh_icon_11 from \"@assets/wh-icon-11_1755897383495.png\";\nimport locationPhoto from \"@assets/locationphotoexample_1755896417962.png\";\nimport starFilled from \"@assets/wh-spot-icon-star-1_1755898223539.png\";\nimport starEmpty from \"@assets/wh-icon-star-2_1755898225624.png\";\n\nexport const LocationRecommendationPage = (): JSX.Element => {\n  const search = useSearch();\n  const [, setLocation] = useLocation();\n  const params = new URLSearchParams(search);\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [expandedSections, setExpandedSections] = useState<Record<string, boolean>>({});\n  const [dragY, setDragY] = useState(0);\n  const [isDragging, setIsDragging] = useState(false);\n  const [startY, setStartY] = useState(0);\n  const mapRef = useRef<HTMLDivElement>(null);\n  \n  const from = params.get(\"from\");\n  const cardId = params.get(\"cardId\");\n  \n  // 랜덤 별점 생성 (1-5점)\n  const randomStarRating = Math.floor(Math.random() * 5) + 1;\n  \n  const handleBack = () => {\n    console.log(\"뒤로가기 클릭됨\", { from, cardId, historyLength: window.history.length, isExpanded });\n    \n    // 확장되어 있으면 먼저 축소하고 return\n    if (isExpanded) {\n      console.log(\"확장된 상태에서 축소로 변경\");\n      setIsExpanded(false);\n      setDragY(0);\n      return;\n    }\n    \n    // from 값이 있으면 우선적으로 해당 경로로 이동\n    if (from) {\n      console.log(\"from 경로로 이동:\", from);\n      setLocation(decodeURIComponent(from));\n      return;\n    }\n    \n    // cardId만 있으면 해당 카드 상세로 이동\n    if (cardId) {\n      console.log(\"cardId로 카드 상세 페이지로:\", cardId);\n      setLocation(`/card/${cardId}`);\n      return;\n    }\n    \n    // 브라우저 기록이 있으면 히스토리 뒤로가기\n    if (window.history.length > 1) {\n      console.log(\"브라우저 히스토리로 뒤로가기\");\n      window.history.back();\n      return;\n    }\n    \n    // 최후 fallback → 홈\n    console.log(\"홈으로 이동\");\n    setLocation(\"/\");\n  };\n\n  const handleDragStart = (clientY: number) => {\n    setIsDragging(true);\n    setStartY(clientY);\n  };\n\n  const handleDragMove = (clientY: number) => {\n    if (!isDragging) return;\n    \n    const deltaY = startY - clientY; // 위로 드래그하면 양수, 아래로 드래그하면 음수\n    const newDragY = Math.max(-230, Math.min(966 - 230, deltaY)); // 범위를 -230부터 736까지로 제한\n    setDragY(newDragY);\n  };\n\n  const handleDragEnd = () => {\n    if (!isDragging) return;\n    \n    setIsDragging(false);\n    \n    // 100px 이상 위로 드래그하면 확장, 50px 이상 아래로 드래그하면 축소\n    if (dragY > 100) {\n      setIsExpanded(true);\n    } else if (dragY < -50) {\n      setIsExpanded(false);\n    }\n    \n    setDragY(0);\n  };\n\n  // 터치 이벤트 핸들러\n  const handleTouchStart = (e: React.TouchEvent) => {\n    handleDragStart(e.touches[0].clientY);\n  };\n\n  const handleTouchMove = (e: React.TouchEvent) => {\n    handleDragMove(e.touches[0].clientY);\n  };\n\n  const handleTouchEnd = () => {\n    handleDragEnd();\n  };\n\n  // 마우스 이벤트 핸들러\n  const handleMouseDown = (e: React.MouseEvent) => {\n    handleDragStart(e.clientY);\n  };\n\n  const handleMouseMove = (e: MouseEvent) => {\n    handleDragMove(e.clientY);\n  };\n\n  const handleMouseUp = () => {\n    handleDragEnd();\n  };\n\n  // 마우스 이벤트 리스너 등록/해제\n  React.useEffect(() => {\n    if (isDragging) {\n      document.addEventListener('mousemove', handleMouseMove);\n      document.addEventListener('mouseup', handleMouseUp);\n      return () => {\n        document.removeEventListener('mousemove', handleMouseMove);\n        document.removeEventListener('mouseup', handleMouseUp);\n      };\n    }\n  }, [isDragging, startY]);\n\n  // 네이버 지도 초기화\n  useEffect(() => {\n    // 네이버 지도 API가 로드되었는지 확인\n    if (window.naver && window.naver.maps && mapRef.current) {\n      const mapOptions = {\n        center: new window.naver.maps.LatLng(37.3595704, 127.105399),\n        zoom: 15\n      };\n\n      const map = new window.naver.maps.Map(mapRef.current, mapOptions);\n    }\n\n    // 인증 실패 핸들러\n    window.navermap_authFailure = () => {\n      console.error('네이버 지도 API 인증 실패');\n    };\n  }, []);\n\n  const toggleSection = (sectionKey: string) => {\n    setExpandedSections(prev => ({\n      ...prev,\n      [sectionKey]: !prev[sectionKey]\n    }));\n  };\n\n  const sections = [\n    { key: \"summary\", title: \"입지 요약\" },\n    { key: \"environment\", title: \"주변 환경\" },\n    { key: \"rental\", title: \"임대 조건\" },\n    { key: \"operation\", title: \"운영 시 고려할 점\" },\n    { key: \"recommendation\", title: \"이런 분께 추천해요!\" }\n  ];\n\n  const bottomNavIcons = [\n    { id: \"h\", src1: \"/figmaAssets/wh-icon-footer-h-1.png\", src2: \"/figmaAssets/wh-icon-footer-h-2.png\", alt: \"홈\", route: \"/\" },\n    { id: \"s\", src1: \"/figmaAssets/wh-icon-footer-s-1.png\", src2: \"/figmaAssets/wh-icon-footer-s-2.png\", alt: \"상점\", route: \"/store\" },\n    { id: \"b\", src1: \"/figmaAssets/wh-icon-footer-b-1.png\", src2: \"/figmaAssets/wh-icon-footer-b-2.png\", alt: \"건물\", route: \"/building\" },\n    { id: \"c\", src1: \"/figmaAssets/wh-icon-footer-c-1.png\", src2: \"/figmaAssets/wh-icon-footer-c-2.png\", alt: \"상담\", route: \"/consultation\" },\n    { id: \"m\", src1: \"/figmaAssets/wh-icon-footer-m-1.png\", src2: \"/figmaAssets/wh-icon-footer-m-2.png\", alt: \"마이페이지\", route: \"/mypage\" },\n  ];\n\n  return (\n    <div className=\"bg-white w-screen h-screen\">\n      <div className=\"bg-white w-[360px] h-[640px] mx-auto relative overflow-hidden\">\n        \n        {/* Top Navigation Header - 드래그 시 사라지는 헤더 */}\n        <div \n          className=\"absolute top-0 left-0 right-0 z-40 bg-white\"\n          style={{\n            height: '60px',\n            opacity: isExpanded ? 0 : 1,\n            transform: isDragging && dragY > 30 ? `translateY(-${Math.min(60, dragY - 30)}px)` : 'translateY(0)',\n            transition: isDragging ? 'none' : 'all 0.3s ease-out'\n          }}\n        >\n          <div className=\"w-full h-full flex items-center justify-between px-4\">\n            <div className=\"flex items-center gap-2\">\n              <Button\n                variant=\"ghost\"\n                size=\"icon\"\n                className=\"p-0\"\n                onClick={handleBack}\n                data-testid=\"button-back\"\n              >\n                <img\n                  src={wh_icon_header_back}\n                  alt=\"뒤로가기\"\n                  style={{ width: '40%', height: '40%' }}\n                />\n              </Button>\n              \n              <div className=\"[font-family:'SUITE-SemiBold',Helvetica] font-semibold text-black text-[16px]\">\n                메세나 폴리스\n              </div>\n            </div>\n            \n            <Button\n              variant=\"ghost\"\n              size=\"icon\"\n              className=\"p-0\"\n              onClick={() => setLocation('/star')}\n              data-testid=\"button-star\"\n            >\n              <img\n                src={wh_icon_header_starshop}\n                alt=\"즐겨찾기\"\n                style={{ height: '38px', width: 'auto' }}\n              />\n            </Button>\n          </div>\n        </div>\n        \n        {/* 중앙 지도 영역 - Map Area in Center */}\n        <div \n          className=\"absolute left-0 right-0 z-20\"\n          style={{\n            top: '60px',\n            bottom: '180px'\n          }}\n        >\n          <div \n            ref={mapRef}\n            className=\"w-full h-full\"\n          ></div>\n        </div>\n        \n        {/* Fixed Header + Sections - 드래그에 따라 자연스럽게 따라오는 헤더와 섹션 */}\n        <div \n          className=\"absolute top-0 left-0 right-0 z-30\"\n          style={{\n            transform: (() => {\n              if (isExpanded) return 'translateY(0)';\n              if (isDragging) {\n                // 드래그 시 자연스럽게 따라 올라오도록 계산\n                const progress = Math.max(0, Math.min(1, dragY / 164));\n                return `translateY(${-164 + (164 * progress)}px)`;\n              }\n              return 'translateY(-164px)';\n            })()\n          }}\n        >\n          <div className=\"bg-[#00D6F8] h-[164px] relative\">\n            <div className=\"w-full h-[60px] flex items-center justify-between px-4 pt-2\">\n              <Button\n                variant=\"ghost\"\n                size=\"icon\"\n                className=\"w-8 h-8 p-0\"\n                onClick={() => setIsExpanded(false)}\n                data-testid=\"button-back-expanded\"\n              >\n                <img\n                  src={wh_icon_11}\n                  alt=\"뒤로가기\"\n                  className=\"w-6 h-6\"\n                />\n              </Button>\n            </div>\n            \n            {/* Stars */}\n            <div className=\"flex justify-center gap-1 mb-6\">\n              {[1, 2, 3, 4, 5].map((star) => (\n                <img\n                  key={star}\n                  src={star <= randomStarRating ? starFilled : starEmpty}\n                  alt={star <= randomStarRating ? \"채워진 별\" : \"빈 별\"}\n                  className=\"w-4 h-4\"\n                />\n              ))}\n            </div>\n            \n            {/* Title */}\n            <div className=\"text-center px-4\">\n              <h1 className=\"[font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-white text-[20px] leading-tight mb-1\">\n                메세나 폴리스 지하 1층\n              </h1>\n              <p className=\"[font-family:'SUITE-Medium',Helvetica] font-medium text-white text-[12px]\">\n                운정로 대피 리스크 낮음 트렌드 상향\n              </p>\n            </div>\n          </div>\n          \n          {/* Sections attached to header - 헤더에 붙어서 따라오는 섹션들 */}\n          {(isDragging && dragY > 0) || isExpanded ? (\n            <div className=\"bg-white w-full overflow-y-auto hide-scrollbar\" style={{ maxHeight: 'calc(966px - 164px)' }}>\n              {/* Image Section */}\n              <div className=\"relative\">\n                <img\n                  src={locationPhoto}\n                  alt=\"위치 사진\"\n                  className=\"w-full h-[200px] object-cover\"\n                  data-testid=\"img-location\"\n                />\n                {/* Navigation Buttons on Image */}\n                <div className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 flex items-center\" style={{ gap: '254px' }}>\n                  <button\n                    className=\"w-12 h-12 flex items-center justify-center hover:opacity-70 transition-all\"\n                    data-testid=\"button-image-prev\"\n                  >\n                    <img\n                      src={wh_icon_14}\n                      alt=\"이전\"\n                      className=\"w-7 h-7\"\n                    />\n                  </button>\n                  \n                  <button\n                    className=\"w-12 h-12 flex items-center justify-center hover:opacity-70 transition-all\"\n                    data-testid=\"button-image-next\"\n                  >\n                    <img\n                      src={wh_icon_14}\n                      alt=\"다음\"\n                      className=\"w-7 h-7 transform rotate-180\"\n                    />\n                  </button>\n                </div>\n              </div>\n\n              {/* Collapsible Sections */}\n              <div className=\"px-4 py-4\">\n                {sections.map((section) => (\n                  <div key={section.key} className=\"mb-3\">\n                    <button\n                      onClick={() => toggleSection(section.key)}\n                      className=\"w-full flex justify-between items-center bg-white border border-gray-300 rounded-lg px-5 py-5 hover:bg-gray-50 transition-colors\"\n                      data-testid={`button-toggle-${section.key}`}\n                    >\n                      <span className=\"[font-family:'SUITE-SemiBold',Helvetica] font-semibold text-[16px] text-black\">\n                        {section.title}\n                      </span>\n                      <svg \n                        width=\"16\" \n                        height=\"16\" \n                        viewBox=\"0 0 16 16\" \n                        fill=\"none\"\n                        className={`transform transition-transform ${expandedSections[section.key] ? 'rotate-180' : ''}`}\n                      >\n                        <path d=\"M4 6L8 10L12 6\" stroke=\"black\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                      </svg>\n                    </button>\n                    \n                    {expandedSections[section.key] && (\n                      <div className=\"mt-3 bg-white border border-gray-300 rounded-lg px-4 py-3\">\n                        <div className=\"[font-family:'SUITE-Medium',Helvetica] font-medium text-[14px] text-gray-600 leading-relaxed\">\n                          {section.key === \"summary\" && (\n                            <>\n                              <p className=\"mb-3\">\n                                이 위치는 지하철 3호선 운정역에서 도보 5분 거리에 위치하여 대중교통 접근성이 매우 우수합니다.\n                                주변 상권이 활성화되어 있어 평일 오전 9시부터 오후 6시까지 지속적인 유동인구가 확보됩니다.\n                                메세나 폴리스 건물은 A급 오피스 빌딩으로 입주 기업들의 직장인 고객층이 두텁습니다.\n                              </p>\n                              <p>\n                                지하 1층이지만 자연채광이 충분하며 별도 외부 출입구가 있어 독립적인 운영이 가능합니다.\n                                반경 500m 내에 아파트 단지 3곳과 오피스텔 2곳이 위치하여 거주민 고객층도 안정적으로 확보됩니다.\n                                주말에도 인근 카페거리와 연계되어 꾸준한 방문객이 있어 7일 운영에 유리한 입지입니다.\n                              </p>\n                            </>\n                          )}\n                          {section.key === \"environment\" && (\n                            <>\n                              <p className=\"mb-3\">\n                                건물 1층에는 스타벅스, 투썸플레이스 등 유명 카페 체인이 입점해 있어 자연스러운 고객 유입이 됩니다.\n                                도보 2분 거리에 이마트 트레이더스가 있어 대형마트 이용 고객들의 접근성이 뛰어납니다.\n                                주변에 맥도날드, 버거킹, 김밥천국 등 다양한 음식점들이 밀집되어 상권이 매우 활성화되어 있습니다.\n                              </p>\n                              <p>\n                                인근에 파리바게뜨, 뚜레주르 등 베이커리와 편의점 3곳이 있어 경쟁업체 분석이 용이합니다.\n                                오피스 빌딩 특성상 점심시간(12-1시)과 퇴근시간(6-7시) 고객 집중도가 높습니다.\n                                주거지역과 상업지역이 적절히 혼재되어 있어 다양한 연령대와 직업군의 고객층을 확보할 수 있습니다.\n                              </p>\n                            </>\n                          )}\n                          {section.key === \"rental\" && (\n                            <>\n                              <p className=\"mb-3\">\n                                월 임대료는 250만원이며 보증금은 1억원으로 주변 시세 대비 합리적인 수준입니다.\n                                관리비는 월 30만원으로 전기요금, 상하수도요금, 청소비, 보안비가 모두 포함되어 있습니다.\n                                최소 계약기간은 2년이며 계약 갱신 시 임대료 인상률은 연 5% 이내로 제한됩니다.\n                              </p>\n                              <p>\n                                권리금은 별도 협의사항이며 기존 인테리어 시설을 그대로 사용할 경우 추가 할인이 가능합니다.\n                                부가가치세는 별도이며 사업자등록증 발급 후 세무서 신고가 필요합니다.\n                                임대료 납부는 매월 25일 계좌이체로 하며 3개월 이상 연체 시 계약해지 조건이 적용됩니다.\n                              </p>\n                            </>\n                          )}\n                          {section.key === \"operation\" && (\n                            <>\n                              <p className=\"mb-3\">\n                                오피스 빌딩 내 입점이므로 평일 오전 7시 30분부터 오후 9시까지 영업이 가능합니다.\n                                주말에도 빌딩 대출입이 가능하여 유연한 영업시간 운영이 가능합니다.\n                                지하 1층이지만 체고 2.8m의 높은 천장과 대형 창문으로 공간감이 우수합니다.\n                              </p>\n                              <p>\n                                업종에 따라 유동인구 패턴이 다르므로 사전 분석이 필요합니다.\n                                쿨링 시스템이 잘 갖춰져 있어 여름철 운영에 유리하며 겨울철 난방비도 합리적입니다.\n                                주차장이 충분하여 차량 이용 고객들의 접근성이 뛰어나며 배달 서비스 운영에도 적합합니다.\n                              </p>\n                            </>\n                          )}\n                          {section.key === \"recommendation\" && (\n                            <>\n                              <p className=\"mb-3\">\n                                직장인 대상 업종에 가장 적합한 입지로 쿠킹, 카페, 패스트푸드점 등이 유리합니다.\n                                또한 행정사무소, 공인중개사, 전문직 서비스업 등 B2B 비즈니스에도 우수한 조건입니다.\n                                주변 여성 고객층이 많아 매니큐어, 에스테틱, 블로드라이 등 여성 타겟 비즈니스에 적합합니다.\n                              </p>\n                              <p>\n                                오피스 빌딩의 안정적인 고객층을 활용할 수 있는 점심 도시락 업체나 팀 빌딩 대상 서비스에도 유리합니다.\n                                지하철역 근처로 대중교통 이용 고객이 많아 교육업, 전자상거래 등의 업종에도 적합한 입지입니다.\n                                새로운 비즈니스 모델을 시도하고자 하는 창업자나 안정적인 수익모델을 찾는 자영업자 모두에게 추천합니다.\n                              </p>\n                            </>\n                          )}\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                ))}\n              </div>\n              \n              {/* Bottom Action Buttons - 확장되었을 때만 표시 */}\n              {isExpanded && (\n                <div className=\"absolute bottom-0 left-0 right-0 bg-white border-t border-gray-200 p-4\">\n                  <div className=\"flex gap-3\">\n                    <Button \n                      className=\"flex-1 bg-[#00D6F8] hover:bg-[#00B8E6] text-white font-semibold rounded-lg\"\n                      style={{ height: '48px' }}\n                      data-testid=\"button-save\"\n                    >\n                      임시저장\n                    </Button>\n                    <Button \n                      className=\"flex-1 bg-[#FFE500] hover:bg-[#E6CC00] text-black font-semibold rounded-lg\"\n                      style={{ height: '48px' }}\n                      data-testid=\"button-consult\"\n                    >\n                      상담신청\n                    </Button>\n                  </div>\n                </div>\n              )}\n            </div>\n          ) : null}\n        </div>\n\n        {/* Bottom Sheet */}\n        <div className=\"relative h-[640px]\">\n          <div \n            className=\"absolute left-0 right-0 bg-white rounded-t-2xl transition-all duration-300 ease-out\" \n            style={{\n              height: isExpanded ? '966px' : '180px',\n              top: isDragging ? `${640 - (isExpanded ? 966 : 180) + dragY}px` : `${640 - (isExpanded ? 966 : 180)}px`,\n              boxShadow: '0 -8px 20px rgba(0,214,248,0.25)',\n              transition: isDragging ? 'none' : 'all 0.3s ease-out'\n            }}\n          >\n            <div className=\"relative h-full\">\n              {/* Handle */}\n              <div \n                className=\"rounded-full mx-auto mb-4 cursor-grab active:cursor-grabbing select-none\"\n                style={{\n                  width: '41px',\n                  height: '5px',\n                  backgroundColor: '#00D6F8',\n                  marginTop: '13.5px'\n                }}\n                onTouchStart={handleTouchStart}\n                onTouchMove={(e) => { e.preventDefault(); handleTouchMove(e); }}\n                onTouchEnd={handleTouchEnd}\n                onMouseDown={handleMouseDown}\n              ></div>\n              \n              {/* Guide Text below handle - 슬라이드바에서 16픽셀 아래 */}\n              {!isExpanded && (\n                <div \n                  className=\"absolute left-0 right-0 text-center [font-family:'SUITE-SemiBold',Helvetica] font-semibold\"\n                  style={{\n                    top: '15.5px', // 1픽셀 더 위로\n                    fontSize: '10px', // 1픽셀 늘림 (9px → 10px)\n                    color: '#8E8E8E'\n                  }}\n                >\n                  매출, 사례 등 더 보고 싶다면? 위로 올리기\n                </div>\n              )}\n              \n              {/* Main Content Frame - Flex Layout - 하얀색 헤더 (완전히 확장될 때만 사라짐) */}\n              {!isExpanded && (\n                <div \n                  className=\"place-card absolute flex justify-between items-start cursor-grab active:cursor-grabbing hover:bg-gray-50 transition-colors rounded-lg select-none\"\n                  style={{\n                    width: 'calc(100% - 30px)',\n                    left: '15px',\n                    right: '15px',\n                    top: '35px',\n                    gap: '12px',\n                    padding: '8px'\n                  }}\n                  onTouchStart={handleTouchStart}\n                  onTouchMove={(e) => { e.preventDefault(); handleTouchMove(e); }}\n                  onTouchEnd={handleTouchEnd}\n                  onMouseDown={handleMouseDown}\n                  data-testid=\"card-location-detail\"\n                >\n                  {/* Left Side: Text Content */}\n                  <div \n                    className=\"flex flex-col\"\n                    style={{\n                      gap: '16px',\n                      flex: '1',\n                      minWidth: '0' // 텍스트 오버플로우 방지\n                    }}\n                  >\n                    {/* Group 1: Address + Title (tight spacing) */}\n                    <div \n                      className=\"head flex flex-col\"\n                      style={{\n                        gap: '4px'\n                      }}\n                    >\n                      {/* Address Label */}\n                      <div \n                        className=\"address [font-family:'SUITE-SemiBold',Helvetica] font-semibold\"\n                        style={{\n                          fontSize: '12px',\n                          lineHeight: '1.2',\n                          color: '#8E8E8E',\n                          margin: '0'\n                        }}\n                      >\n                        서울 마포구 양화로 45\n                      </div>\n                      \n                      {/* Location Title */}\n                      <div \n                        className=\"title [font-family:'SUITE-ExtraBold',Helvetica] font-extrabold\"\n                        style={{\n                          fontSize: '19.2px',\n                          lineHeight: '1.2',\n                          color: '#000000',\n                          margin: '0'\n                        }}\n                      >\n                        메세나 폴리스 지하 1층\n                      </div>\n                    </div>\n                    \n                    {/* Group 2: Rental + Business Type (tight spacing) */}\n                    <div \n                      className=\"body flex flex-col\"\n                      style={{\n                        gap: '4px'\n                      }}\n                    >\n                      {/* Rental Info */}\n                      <div \n                        className=\"info [font-family:'SUITE-SemiBold',Helvetica] font-semibold\"\n                        style={{\n                          fontSize: '12px',\n                          lineHeight: '1.5',\n                          color: '#000000',\n                          margin: '0'\n                        }}\n                      >\n                        임대료 추정: 약 250만원 / 월\n                      </div>\n                      \n                      {/* Business Type */}\n                      <div \n                        className=\"info [font-family:'SUITE-SemiBold',Helvetica] font-semibold\"\n                        style={{\n                          fontSize: '12px',\n                          lineHeight: '1.5',\n                          color: '#000000',\n                          margin: '0'\n                        }}\n                      >\n                        주요 업종: 디저트, 카페\n                      </div>\n                    </div>\n                  </div>\n                  \n                  {/* Right Side: Color Block with Heart Icon */}\n                  <div \n                    className=\"flex-shrink-0\"\n                    style={{\n                      width: '100px',\n                      height: '100px',\n                      transform: 'translateY(-2px)'\n                    }}\n                  >\n                    <div className=\"relative\">\n                      <div\n                        className=\"w-[100px] h-[100px] rounded-lg\"\n                        style={{\n                          backgroundColor: '#00D6F8'\n                        }}\n                      />\n                      <div \n                        className=\"absolute wh-icon-heart\"\n                        style={{\n                          top: '4px',\n                          right: '4px'\n                        }}\n                      >\n                        <svg width=\"22\" height=\"22\" viewBox=\"0 0 22 22\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                          <path d=\"M15.2969 3.4375C13.5223 3.4375 11.9685 4.20062 11 5.49055C10.0315 4.20062 8.47773 3.4375 6.70313 3.4375C5.29051 3.43909 3.9362 4.00096 2.93733 4.99983C1.93846 5.9987 1.37659 7.35301 1.375 8.76563C1.375 14.7813 10.2945 19.6505 10.6743 19.8516C10.7744 19.9054 10.8863 19.9336 11 19.9336C11.1137 19.9336 11.2256 19.9054 11.3257 19.8516C11.7055 19.6505 20.625 14.7813 20.625 8.76563C20.6234 7.35301 20.0615 5.9987 19.0627 4.99983C18.0638 4.00096 16.7095 3.43909 15.2969 3.4375ZM11 18.4594C9.43078 17.545 2.75 13.3796 2.75 8.76563C2.75136 7.71761 3.16829 6.71291 3.90935 5.97185C4.65041 5.23079 5.65511 4.81386 6.70313 4.8125C8.37461 4.8125 9.77797 5.70281 10.3641 7.13281C10.4159 7.25891 10.504 7.36676 10.6172 7.44266C10.7304 7.51856 10.8637 7.55909 11 7.55909C11.1363 7.55909 11.2696 7.51856 11.3828 7.44266C11.496 7.36676 11.5841 7.25891 11.6359 7.13281C12.222 5.70023 13.6254 4.8125 15.2969 4.8125C16.3449 4.81386 17.3496 5.23079 18.0907 5.97185C18.8317 6.71291 19.2486 7.71761 19.25 8.76563C19.25 13.3727 12.5675 17.5441 11 18.4594Z\" fill=\"white\"/>\n                        </svg>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              )}\n              \n              {/* Guide Text below thumbnail - only show when not expanded and not dragging significantly */}\n              {!isExpanded && dragY < 50 && (\n                <div \n                  className=\"absolute [font-family:'SUITE-SemiBold',Helvetica] font-semibold\"\n                  style={{\n                    top: '165.5px', // 정사각형(100px) + 상단(35px) + 간격(30.5px) = 165.5px\n                    left: '15px',\n                    right: '15px',\n                    fontSize: '12px',\n                    color: '#8E8E8E',\n                    textAlign: 'center'\n                  }}\n                >\n                  매출, 사례 등 더 보고 싶다면? 위로 올리기\n                </div>\n              )}\n              \n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};","size_bytes":29911},"client/src/pages/MyPage.tsx":{"content":"import React from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { useLocation } from \"wouter\";\nimport wh_grabspot_logo from \"@assets/wh-grabspot-logo_1755388018538.png\";\nimport wh_icon_header_click from \"@assets/wh-icon-header-click_1755388016167.png\";\nimport wh_icon_header_back from \"@assets/wh-icon-header-back_1755388889083.png\";\nimport wh_icon_header_starshop from \"@assets/wh-icon-header-starshop_1755390533991.png\";\n\nexport const MyPage = (): JSX.Element => {\n  const [, setLocation] = useLocation();\n\n  const bottomNavIcons = [\n    { id: \"h\", src1: \"/figmaAssets/wh-icon-footer-h-1.png\", src2: \"/figmaAssets/wh-icon-footer-h-2.png\", alt: \"홈\", route: \"/\" },\n    { id: \"s\", src1: \"/figmaAssets/wh-icon-footer-s-1.png\", src2: \"/figmaAssets/wh-icon-footer-s-2.png\", alt: \"상점\", route: \"/store\" },\n    { id: \"b\", src1: \"/figmaAssets/wh-icon-footer-b-1.png\", src2: \"/figmaAssets/wh-icon-footer-b-2.png\", alt: \"건물\", route: \"/building\" },\n    { id: \"c\", src1: \"/figmaAssets/wh-icon-footer-c-1.png\", src2: \"/figmaAssets/wh-icon-footer-c-2.png\", alt: \"상담\", route: \"/consultation\" },\n    { id: \"m\", src1: \"/figmaAssets/wh-icon-footer-m-1.png\", src2: \"/figmaAssets/wh-icon-footer-m-2.png\", alt: \"마이페이지\", route: \"/mypage\", active: true },\n  ];\n\n  return (\n    <div className=\"bg-white w-screen h-screen\">\n      <div className=\"bg-white w-[360px] h-[1114px] mx-auto relative\">\n        {/* Header */}\n        <div className=\"w-full h-[60px] bg-white flex items-center justify-center px-4 border-b border-[#E5E5E5] relative\">\n          <Button\n            variant=\"ghost\"\n            size=\"icon\"\n            className=\"absolute left-4 w-6 h-6 p-0\"\n            onClick={() => setLocation(\"/\")}\n          >\n            <img\n              src={wh_icon_header_back}\n              alt=\"뒤로가기\"\n              className=\"w-6 h-6\"\n            />\n          </Button>\n          \n          <h1 className=\"[font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-[#8E8E8E] text-[18px]\">\n            마이페이지\n          </h1>\n          \n          <div className=\"absolute right-4\">\n            <Button\n              variant=\"ghost\"\n              size=\"icon\"\n              className=\"p-0\"\n              onClick={() => setLocation('/star')}\n              data-testid=\"button-star\"\n            >\n              <img\n                src={wh_icon_header_starshop}\n                alt=\"스타샵\"\n                className=\"h-[38px] w-auto\"\n              />\n            </Button>\n          </div>\n        </div>\n\n        {/* Profile Section */}\n        <div className=\"flex flex-col items-center pt-[62px] pb-5\">\n          <div className=\"w-[60px] h-[60px] rounded-full bg-[#00D6F8] flex items-center justify-center mb-3\">\n            <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\">\n              <path d=\"M12 12C14.21 12 16 10.21 16 8C16 5.79 14.21 4 12 4C9.79 4 8 5.79 8 8C8 10.21 9.79 12 12 12ZM12 14C9.33 14 4 15.34 4 18V20H20V18C20 15.34 14.67 14 12 14Z\" fill=\"white\"/>\n            </svg>\n          </div>\n          \n          <h2 className=\"[font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-[#000] text-[16px] mb-1\">\n            예비 창업자님\n          </h2>\n          <button className=\"[font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-[#00D6F8] text-[14px]\">\n            로그아웃\n          </button>\n        </div>\n\n        {/* Menu Sections */}\n        <div className=\"px-4 space-y-8\">\n          {/* 거주지 Section */}\n          <div>\n            <h3 className=\"[font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-[#00D6F8] text-[16px] mb-4\">\n              거주지\n            </h3>\n            <div className=\"space-y-3\">\n              <button className=\"w-full border-2 border-[#9EA0A2] rounded-lg py-[18px] px-3 hover:border-[#00D6F8] transition-colors\">\n                <div className=\"flex items-center justify-between\">\n                  <span className=\"[font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-[#000] text-[14px]\">\n                    저장한 매물\n                  </span>\n                  <svg width=\"8\" height=\"12\" viewBox=\"0 0 8 12\" fill=\"none\">\n                    <path d=\"M1 1L7 6L1 11\" stroke=\"#999\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                  </svg>\n                </div>\n              </button>\n              \n              <button className=\"w-full border-2 border-[#9EA0A2] rounded-lg py-[18px] px-3 hover:border-[#00D6F8] transition-colors\">\n                <div className=\"flex items-center justify-between\">\n                  <span className=\"[font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-[#000] text-[14px]\">\n                    저장한 분석 가이드\n                  </span>\n                  <svg width=\"8\" height=\"12\" viewBox=\"0 0 8 12\" fill=\"none\">\n                    <path d=\"M1 1L7 6L1 11\" stroke=\"#999\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                  </svg>\n                </div>\n              </button>\n              \n              <button className=\"w-full border-2 border-[#9EA0A2] rounded-lg py-[18px] px-3 hover:border-[#00D6F8] transition-colors\">\n                <div className=\"flex items-center justify-between\">\n                  <span className=\"[font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-[#000] text-[14px]\">\n                    룸메이트 매칭 내역\n                  </span>\n                  <svg width=\"8\" height=\"12\" viewBox=\"0 0 8 12\" fill=\"none\">\n                    <path d=\"M1 1L7 6L1 11\" stroke=\"#999\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                  </svg>\n                </div>\n              </button>\n            </div>\n          </div>\n\n          {/* 창업입지 Section */}\n          <div>\n            <h3 className=\"[font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-[#00D6F8] text-[16px] mb-4\">\n              창업입지\n            </h3>\n            <div className=\"space-y-3\">\n              <button className=\"w-full border-2 border-[#9EA0A2] rounded-lg py-[18px] px-3 hover:border-[#00D6F8] transition-colors\">\n                <div className=\"flex items-center justify-between\">\n                  <span className=\"[font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-[#000] text-[14px]\">\n                    업종 카드 저장 내역\n                  </span>\n                  <svg width=\"8\" height=\"12\" viewBox=\"0 0 8 12\" fill=\"none\">\n                    <path d=\"M1 1L7 6L1 11\" stroke=\"#999\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                  </svg>\n                </div>\n              </button>\n              \n              <button \n                className=\"w-full border-2 border-[#9EA0A2] rounded-lg py-[18px] px-3 hover:border-[#00D6F8] transition-colors\"\n                onClick={() => setLocation(\"/location-recommendation\")}\n              >\n                <div className=\"flex items-center justify-between\">\n                  <span className=\"[font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-[#000] text-[14px]\">\n                    추천 입지 저장 내역\n                  </span>\n                  <svg width=\"8\" height=\"12\" viewBox=\"0 0 8 12\" fill=\"none\">\n                    <path d=\"M1 1L7 6L1 11\" stroke=\"#999\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                  </svg>\n                </div>\n              </button>\n            </div>\n          </div>\n\n          {/* 분양 Section */}\n          <div>\n            <h3 className=\"[font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-[#00D6F8] text-[16px] mb-4\">\n              분양\n            </h3>\n            <div className=\"space-y-3\">\n              <button className=\"w-full border-2 border-[#9EA0A2] rounded-lg py-[18px] px-3 hover:border-[#00D6F8] transition-colors\">\n                <div className=\"flex items-center justify-between\">\n                  <span className=\"[font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-[#000] text-[14px]\">\n                    분양 상담/견적\n                  </span>\n                  <svg width=\"8\" height=\"12\" viewBox=\"0 0 8 12\" fill=\"none\">\n                    <path d=\"M1 1L7 6L1 11\" stroke=\"#999\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                  </svg>\n                </div>\n              </button>\n            </div>\n          </div>\n        </div>\n\n        {/* Footer Links */}\n        <div className=\"absolute bottom-[110px] left-0 right-0 flex justify-center space-x-8\">\n          <button className=\"[font-family:'SUITE-Medium',Helvetica] font-medium text-[#00D6F8] text-[12px]\">\n            개인정보처리방침\n          </button>\n          <button className=\"[font-family:'SUITE-Medium',Helvetica] font-medium text-[#00D6F8] text-[12px]\">\n            이용약관\n          </button>\n        </div>\n\n        {/* Bottom Navigation */}\n        <nav className=\"absolute bottom-0 left-0 w-full h-[55px] bg-[#F6F7F9] border-t border-[#DADADA]\">\n          <div className=\"flex items-center justify-center gap-[38px] h-full\">\n            {bottomNavIcons.map((icon) => (\n              <Button\n                key={icon.id}\n                variant=\"ghost\"\n                size=\"icon\"\n                className=\"w-7 h-7 p-0 hover:bg-transparent\"\n                onClick={() => setLocation(icon.route)}\n              >\n                <img\n                  className=\"w-7 h-7 object-cover\"\n                  alt={icon.alt}\n                  src={icon.active ? icon.src2 : icon.src1}\n                />\n              </Button>\n            ))}\n          </div>\n        </nav>\n      </div>\n    </div>\n  );\n};","size_bytes":9742},"client/src/pages/SplashScreen.tsx":{"content":"import { useEffect, useState } from 'react';\n\ndeclare global {\n  interface Window {\n    UnicornStudio: {\n      init: () => Promise<any>;\n      destroy: () => void;\n      isInitialized?: boolean;\n    };\n  }\n}\n\ninterface SplashScreenProps {\n  onComplete: () => void;\n}\n\nexport function SplashScreen({ onComplete }: SplashScreenProps) {\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  useEffect(() => {\n    const initUnicorn = async () => {\n      try {\n        if (window.UnicornStudio) {\n          await window.UnicornStudio.init();\n          setIsLoaded(true);\n        }\n      } catch (error) {\n        console.error('Unicorn Studio initialization failed:', error);\n        setIsLoaded(true); // Set loaded even on error to show something\n      }\n    };\n\n    // 스크립트가 로드될 때까지 잠시 기다림\n    setTimeout(initUnicorn, 100);\n\n    // 무조건 5초 후에 메인 앱으로 이동 (WebGL 에러 상관없이)\n    const fallbackTimer = setTimeout(() => {\n      onComplete();\n    }, 5000);\n\n    return () => {\n      clearTimeout(fallbackTimer);\n      if (window.UnicornStudio) {\n        try {\n          window.UnicornStudio.destroy();\n        } catch (e) {\n          console.log('UnicornStudio cleanup failed:', e);\n        }\n      }\n    };\n  }, [onComplete]);\n\n  return (\n    <div className=\"fixed inset-0 bg-black flex items-center justify-center z-50\">\n      <div\n        className=\"unicorn-embed\"\n        data-us-project=\"WpdjjrsgWRdPsjaut95d\"\n        data-us-scale=\"1\"\n        data-us-dpi=\"1.5\"\n        data-us-lazyload=\"true\"\n        data-us-alttext=\"Welcome to GrabSpot\"\n        data-us-arialabel=\"GrabSpot splash screen animation\"\n        style={{ \n          width: '375px', \n          height: '640px',\n          maxWidth: '100vw',\n          maxHeight: '100vh'\n        }}\n        data-testid=\"splash-animation\"\n      />\n      {!isLoaded && (\n        <div className=\"absolute inset-0 flex items-center justify-center\">\n          <div className=\"text-white text-lg\">로딩중...</div>\n        </div>\n      )}\n    </div>\n  );\n}","size_bytes":2057},"client/src/pages/StorePage.tsx":{"content":"import React from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { useLocation } from \"wouter\";\n\nexport const StorePage = (): JSX.Element => {\n  const [, setLocation] = useLocation();\n\n  const bottomNavIcons = [\n    { id: \"h\", src1: \"/figmaAssets/wh-icon-footer-h-1.png\", src2: \"/figmaAssets/wh-icon-footer-h-2.png\", alt: \"홈\", route: \"/\" },\n    { id: \"s\", src1: \"/figmaAssets/wh-icon-footer-s-1.png\", src2: \"/figmaAssets/wh-icon-footer-s-2.png\", alt: \"상점\", route: \"/store\", active: true },\n    { id: \"b\", src1: \"/figmaAssets/wh-icon-footer-b-1.png\", src2: \"/figmaAssets/wh-icon-footer-b-2.png\", alt: \"건물\", route: \"/building\" },\n    { id: \"c\", src1: \"/figmaAssets/wh-icon-footer-c-1.png\", src2: \"/figmaAssets/wh-icon-footer-c-2.png\", alt: \"상담\", route: \"/consultation\" },\n    { id: \"m\", src1: \"/figmaAssets/wh-icon-footer-m-1.png\", src2: \"/figmaAssets/wh-icon-footer-m-2.png\", alt: \"마이페이지\", route: \"/mypage\" },\n  ];\n\n  return (\n    <div className=\"bg-white grid justify-items-center [align-items:start] w-screen\">\n      <div className=\"bg-white overflow-hidden w-[360px] h-[800px] relative\">\n        {/* Header */}\n        <header className=\"absolute w-[360px] h-[63px] top-0 left-0\">\n          <div className=\"absolute w-[360px] h-[62px] top-0 left-0 border-b border-solid border-[#dadada]\">\n            <div className=\"flex justify-between items-center px-4 h-full\">\n              <Button\n                variant=\"ghost\"\n                size=\"icon\"\n                className=\"w-6 h-6 p-0\"\n                onClick={() => setLocation(\"/\")}\n              >\n                <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\">\n                  <path d=\"M15 18L9 12L15 6\" stroke=\"#333\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                </svg>\n              </Button>\n              \n              <h1 className=\"[font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-[#333] text-lg\">\n                상점\n              </h1>\n              \n              <div className=\"w-6 h-6\"></div>\n            </div>\n          </div>\n        </header>\n\n        {/* Content */}\n        <main className=\"absolute w-[360px] top-[63px] left-0 bottom-[55px] flex items-center justify-center\">\n          <div className=\"text-center\">\n            <div className=\"text-6xl mb-4\">🏪</div>\n            <h2 className=\"[font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-[#333] text-xl mb-2\">\n              상점 페이지\n            </h2>\n            <p className=\"[font-family:'SUITE-Medium',Helvetica] font-medium text-[#666] text-sm\">\n              상점 기능이 곧 추가될 예정입니다\n            </p>\n          </div>\n        </main>\n\n        {/* Bottom Navigation */}\n        <nav className=\"absolute w-[360px] h-[55px] bottom-0 left-0 bg-gray-color6-f6f7f9 border-t-[1.2px] border-solid border-[#dadada]\">\n          <div className=\"inline-flex items-center gap-[38px] relative top-3 left-[34px]\">\n            {bottomNavIcons.map((icon) => (\n              <Button\n                key={icon.id}\n                variant=\"ghost\"\n                size=\"icon\"\n                className=\"relative w-7 h-7 p-0 hover:bg-transparent\"\n                onClick={() => setLocation(icon.route)}\n              >\n                <img\n                  className=\"w-7 h-7 object-cover\"\n                  alt={icon.alt}\n                  src={icon.active ? icon.src2 : icon.src1}\n                />\n              </Button>\n            ))}\n          </div>\n        </nav>\n      </div>\n    </div>\n  );\n};","size_bytes":3573},"client/src/pages/not-found.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { AlertCircle } from \"lucide-react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gray-50\">\n      <Card className=\"w-full max-w-md mx-4\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex mb-4 gap-2\">\n            <AlertCircle className=\"h-8 w-8 text-red-500\" />\n            <h1 className=\"text-2xl font-bold text-gray-900\">404 Page Not Found</h1>\n          </div>\n\n          <p className=\"mt-4 text-sm text-gray-600\">\n            Did you forget to add the page to the router?\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":711},"client/src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"client/src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"client/src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"client/src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"client/src/components/ui/avatar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1419},"client/src/components/ui/badge.tsx":{"content":"import { type VariantProps, cva } from \"class-variance-authority\";\nimport * as React from \"react\";\nimport { cn } from \"../../lib/utils\";\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-md border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground shadow hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground shadow hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  },\n);\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  );\n}\n\nexport { Badge, badgeVariants };\n","size_bytes":1150},"client/src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2712},"client/src/components/ui/button.tsx":{"content":"import { Slot } from \"@radix-ui/react-slot\";\nimport { type VariantProps, cva } from \"class-variance-authority\";\nimport * as React from \"react\";\nimport { cn } from \"../../lib/utils\";\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2\",\n        sm: \"h-8 rounded-md px-3 text-xs\",\n        lg: \"h-10 rounded-md px-8\",\n        icon: \"h-9 w-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  },\n);\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean;\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\";\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    );\n  },\n);\nButton.displayName = \"Button\";\n\nexport { Button, buttonVariants };\n","size_bytes":1918},"client/src/components/ui/calendar.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","size_bytes":2695},"client/src/components/ui/card.tsx":{"content":"import * as React from \"react\";\nimport { cn } from \"../../lib/utils\";\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-xl border bg-card text-card-foreground shadow\",\n      className,\n    )}\n    {...props}\n  />\n));\nCard.displayName = \"Card\";\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n));\nCardHeader.displayName = \"CardHeader\";\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"font-semibold leading-none tracking-tight\", className)}\n    {...props}\n  />\n));\nCardTitle.displayName = \"CardTitle\";\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n));\nCardDescription.displayName = \"CardDescription\";\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n));\nCardContent.displayName = \"CardContent\";\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n));\nCardFooter.displayName = \"CardFooter\";\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardDescription,\n  CardContent,\n};\n","size_bytes":1860},"client/src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"client/src/components/ui/chart.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10481},"client/src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"client/src/components/ui/collapsible.tsx":{"content":"\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":329},"client/src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4885},"client/src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7428},"client/src/components/ui/dialog.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3848},"client/src/components/ui/drawer.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3021},"client/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7609},"client/src/components/ui/form.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4120},"client/src/components/ui/hover-card.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1251},"client/src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"client/src/components/ui/input.tsx":{"content":"import * as React from \"react\";\nimport { cn } from \"../../lib/utils\";\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-base shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className,\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  },\n);\nInput.displayName = \"Input\";\n\nexport { Input };\n","size_bytes":779},"client/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"client/src/components/ui/menubar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":8605},"client/src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5128},"client/src/components/ui/pagination.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2751},"client/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1280},"client/src/components/ui/progress.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":791},"client/src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"client/src/components/ui/resizable.tsx":{"content":"\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1723},"client/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"client/src/components/ui/select.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5742},"client/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"client/src/components/ui/sheet.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","size_bytes":4281},"client/src/components/ui/sidebar.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { VariantProps, cva } from \"class-variance-authority\"\nimport { PanelLeft } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nconst SidebarProvider = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    defaultOpen?: boolean\n    open?: boolean\n    onOpenChange?: (open: boolean) => void\n  }\n>(\n  (\n    {\n      defaultOpen = true,\n      open: openProp,\n      onOpenChange: setOpenProp,\n      className,\n      style,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const isMobile = useIsMobile()\n    const [openMobile, setOpenMobile] = React.useState(false)\n\n    // This is the internal state of the sidebar.\n    // We use openProp and setOpenProp for control from outside the component.\n    const [_open, _setOpen] = React.useState(defaultOpen)\n    const open = openProp ?? _open\n    const setOpen = React.useCallback(\n      (value: boolean | ((value: boolean) => boolean)) => {\n        const openState = typeof value === \"function\" ? value(open) : value\n        if (setOpenProp) {\n          setOpenProp(openState)\n        } else {\n          _setOpen(openState)\n        }\n\n        // This sets the cookie to keep the sidebar state.\n        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n      },\n      [setOpenProp, open]\n    )\n\n    // Helper to toggle the sidebar.\n    const toggleSidebar = React.useCallback(() => {\n      return isMobile\n        ? setOpenMobile((open) => !open)\n        : setOpen((open) => !open)\n    }, [isMobile, setOpen, setOpenMobile])\n\n    // Adds a keyboard shortcut to toggle the sidebar.\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n          (event.metaKey || event.ctrlKey)\n        ) {\n          event.preventDefault()\n          toggleSidebar()\n        }\n      }\n\n      window.addEventListener(\"keydown\", handleKeyDown)\n      return () => window.removeEventListener(\"keydown\", handleKeyDown)\n    }, [toggleSidebar])\n\n    // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n    // This makes it easier to style the sidebar with Tailwind classes.\n    const state = open ? \"expanded\" : \"collapsed\"\n\n    const contextValue = React.useMemo<SidebarContextProps>(\n      () => ({\n        state,\n        open,\n        setOpen,\n        isMobile,\n        openMobile,\n        setOpenMobile,\n        toggleSidebar,\n      }),\n      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n    )\n\n    return (\n      <SidebarContext.Provider value={contextValue}>\n        <TooltipProvider delayDuration={0}>\n          <div\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH,\n                \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n                ...style,\n              } as React.CSSProperties\n            }\n            className={cn(\n              \"group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar\",\n              className\n            )}\n            ref={ref}\n            {...props}\n          >\n            {children}\n          </div>\n        </TooltipProvider>\n      </SidebarContext.Provider>\n    )\n  }\n)\nSidebarProvider.displayName = \"SidebarProvider\"\n\nconst Sidebar = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    side?: \"left\" | \"right\"\n    variant?: \"sidebar\" | \"floating\" | \"inset\"\n    collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n  }\n>(\n  (\n    {\n      side = \"left\",\n      variant = \"sidebar\",\n      collapsible = \"offcanvas\",\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n    if (collapsible === \"none\") {\n      return (\n        <div\n          className={cn(\n            \"flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground\",\n            className\n          )}\n          ref={ref}\n          {...props}\n        >\n          {children}\n        </div>\n      )\n    }\n\n    if (isMobile) {\n      return (\n        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n          <SheetContent\n            data-sidebar=\"sidebar\"\n            data-mobile=\"true\"\n            className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\"\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n              } as React.CSSProperties\n            }\n            side={side}\n          >\n            <SheetHeader className=\"sr-only\">\n              <SheetTitle>Sidebar</SheetTitle>\n              <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n            </SheetHeader>\n            <div className=\"flex h-full w-full flex-col\">{children}</div>\n          </SheetContent>\n        </Sheet>\n      )\n    }\n\n    return (\n      <div\n        ref={ref}\n        className=\"group peer hidden text-sidebar-foreground md:block\"\n        data-state={state}\n        data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n        data-variant={variant}\n        data-side={side}\n      >\n        {/* This is what handles the sidebar gap on desktop */}\n        <div\n          className={cn(\n            \"relative w-[--sidebar-width] bg-transparent transition-[width] duration-200 ease-linear\",\n            \"group-data-[collapsible=offcanvas]:w-0\",\n            \"group-data-[side=right]:rotate-180\",\n            variant === \"floating\" || variant === \"inset\"\n              ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon]\"\n          )}\n        />\n        <div\n          className={cn(\n            \"fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] duration-200 ease-linear md:flex\",\n            side === \"left\"\n              ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n              : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n            // Adjust the padding for floating and inset variants.\n            variant === \"floating\" || variant === \"inset\"\n              ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n            className\n          )}\n          {...props}\n        >\n          <div\n            data-sidebar=\"sidebar\"\n            className=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\"\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\nSidebar.displayName = \"Sidebar\"\n\nconst SidebarTrigger = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentProps<typeof Button>\n>(({ className, onClick, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      ref={ref}\n      data-sidebar=\"trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeft />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n})\nSidebarTrigger.displayName = \"SidebarTrigger\"\n\nconst SidebarRail = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\">\n>(({ className, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <button\n      ref={ref}\n      data-sidebar=\"rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex\",\n        \"[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarRail.displayName = \"SidebarRail\"\n\nconst SidebarInset = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"main\">\n>(({ className, ...props }, ref) => {\n  return (\n    <main\n      ref={ref}\n      className={cn(\n        \"relative flex w-full flex-1 flex-col bg-background\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInset.displayName = \"SidebarInset\"\n\nconst SidebarInput = React.forwardRef<\n  React.ElementRef<typeof Input>,\n  React.ComponentProps<typeof Input>\n>(({ className, ...props }, ref) => {\n  return (\n    <Input\n      ref={ref}\n      data-sidebar=\"input\"\n      className={cn(\n        \"h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInput.displayName = \"SidebarInput\"\n\nconst SidebarHeader = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarHeader.displayName = \"SidebarHeader\"\n\nconst SidebarFooter = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarFooter.displayName = \"SidebarFooter\"\n\nconst SidebarSeparator = React.forwardRef<\n  React.ElementRef<typeof Separator>,\n  React.ComponentProps<typeof Separator>\n>(({ className, ...props }, ref) => {\n  return (\n    <Separator\n      ref={ref}\n      data-sidebar=\"separator\"\n      className={cn(\"mx-2 w-auto bg-sidebar-border\", className)}\n      {...props}\n    />\n  )\n})\nSidebarSeparator.displayName = \"SidebarSeparator\"\n\nconst SidebarContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarContent.displayName = \"SidebarContent\"\n\nconst SidebarGroup = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarGroup.displayName = \"SidebarGroup\"\n\nconst SidebarGroupLabel = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupLabel.displayName = \"SidebarGroupLabel\"\n\nconst SidebarGroupAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupAction.displayName = \"SidebarGroupAction\"\n\nconst SidebarGroupContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"group-content\"\n    className={cn(\"w-full text-sm\", className)}\n    {...props}\n  />\n))\nSidebarGroupContent.displayName = \"SidebarGroupContent\"\n\nconst SidebarMenu = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu\"\n    className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n    {...props}\n  />\n))\nSidebarMenu.displayName = \"SidebarMenu\"\n\nconst SidebarMenuItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    data-sidebar=\"menu-item\"\n    className={cn(\"group/menu-item relative\", className)}\n    {...props}\n  />\n))\nSidebarMenuItem.displayName = \"SidebarMenuItem\"\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst SidebarMenuButton = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    isActive?: boolean\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>\n  } & VariantProps<typeof sidebarMenuButtonVariants>\n>(\n  (\n    {\n      asChild = false,\n      isActive = false,\n      variant = \"default\",\n      size = \"default\",\n      tooltip,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : \"button\"\n    const { isMobile, state } = useSidebar()\n\n    const button = (\n      <Comp\n        ref={ref}\n        data-sidebar=\"menu-button\"\n        data-size={size}\n        data-active={isActive}\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n        {...props}\n      />\n    )\n\n    if (!tooltip) {\n      return button\n    }\n\n    if (typeof tooltip === \"string\") {\n      tooltip = {\n        children: tooltip,\n      }\n    }\n\n    return (\n      <Tooltip>\n        <TooltipTrigger asChild>{button}</TooltipTrigger>\n        <TooltipContent\n          side=\"right\"\n          align=\"center\"\n          hidden={state !== \"collapsed\" || isMobile}\n          {...tooltip}\n        />\n      </Tooltip>\n    )\n  }\n)\nSidebarMenuButton.displayName = \"SidebarMenuButton\"\n\nconst SidebarMenuAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    showOnHover?: boolean\n  }\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuAction.displayName = \"SidebarMenuAction\"\n\nconst SidebarMenuBadge = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"menu-badge\"\n    className={cn(\n      \"pointer-events-none absolute right-1 flex h-5 min-w-5 select-none items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground\",\n      \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n      \"peer-data-[size=sm]/menu-button:top-1\",\n      \"peer-data-[size=default]/menu-button:top-1.5\",\n      \"peer-data-[size=lg]/menu-button:top-2.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuBadge.displayName = \"SidebarMenuBadge\"\n\nconst SidebarMenuSkeleton = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    showIcon?: boolean\n  }\n>(({ className, showIcon = false, ...props }, ref) => {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-[--skeleton-width] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n})\nSidebarMenuSkeleton.displayName = \"SidebarMenuSkeleton\"\n\nconst SidebarMenuSub = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu-sub\"\n    className={cn(\n      \"mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuSub.displayName = \"SidebarMenuSub\"\n\nconst SidebarMenuSubItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ ...props }, ref) => <li ref={ref} {...props} />)\nSidebarMenuSubItem.displayName = \"SidebarMenuSubItem\"\n\nconst SidebarMenuSubButton = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentProps<\"a\"> & {\n    asChild?: boolean\n    size?: \"sm\" | \"md\"\n    isActive?: boolean\n  }\n>(({ asChild = false, size = \"md\", isActive, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuSubButton.displayName = \"SidebarMenuSubButton\"\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":23567},"client/src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"client/src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"client/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"client/src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"client/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1883},"client/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":689},"client/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"client/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"client/src/components/ui/toggle-group.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1753},"client/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1527},"client/src/components/ui/tooltip.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1209},"client/src/pages/LocationDetailPage.tsx":{"content":"import React, { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { useLocation } from \"wouter\";\n\nimport wh_icon_14 from \"@assets/wh-icon-14_1755898331744.png\";\nimport wh_icon_11 from \"@assets/wh-icon-11_1755897383495.png\";\nimport locationPhoto from \"@assets/locationphotoexample_1755896417962.png\";\nimport starFilled from \"@assets/wh-spot-icon-star-1_1755898223539.png\";\nimport starEmpty from \"@assets/wh-icon-star-2_1755898225624.png\";\n\nexport const LocationDetailPage = (): JSX.Element => {\n  const [, setLocation] = useLocation();\n  const [expandedSections, setExpandedSections] = useState<Record<string, boolean>>({});\n  \n  // 랜덤 별점 생성 (1-5점)\n  const randomStarRating = Math.floor(Math.random() * 5) + 1;\n\n  const handleBack = () => {\n    console.log(\"뒤로가기 클릭됨\", { historyLength: window.history.length });\n    \n    // 브라우저 기록이 있으면 히스토리 뒤로가기\n    if (window.history.length > 1) {\n      console.log(\"브라우저 히스토리로 뒤로가기\");\n      window.history.back();\n      return;\n    }\n    \n    // 최후 fallback → 입지추천 페이지\n    console.log(\"입지추천 페이지로 이동\");\n    setLocation(\"/location-recommendation\");\n  };\n\n  const toggleSection = (sectionKey: string) => {\n    setExpandedSections(prev => ({\n      ...prev,\n      [sectionKey]: !prev[sectionKey]\n    }));\n  };\n\n  const sections = [\n    { key: \"summary\", title: \"입지 요약\" },\n    { key: \"environment\", title: \"주변 환경\" },\n    { key: \"rental\", title: \"임대 조건\" },\n    { key: \"operation\", title: \"운영 시 고려할 점\" },\n    { key: \"recommendation\", title: \"이런 분께 추천해요!\" }\n  ];\n\n  return (\n    <div className=\"bg-white w-screen h-screen\">\n      <div className=\"bg-white w-[360px] h-[966px] mx-auto relative overflow-hidden\">\n        {/* Header */}\n        <div className=\"absolute top-0 left-0 right-0 z-20 bg-[#00D6F8] h-[164px]\">\n          <div className=\"w-full h-[60px] flex items-center justify-between px-4 pt-2\">\n            <Button\n              variant=\"ghost\"\n              size=\"icon\"\n              className=\"w-8 h-8 p-0\"\n              onClick={handleBack}\n              data-testid=\"button-back\"\n            >\n              <img\n                src={wh_icon_11}\n                alt=\"뒤로가기\"\n                className=\"w-6 h-6\"\n              />\n            </Button>\n          </div>\n          \n          {/* Stars */}\n          <div className=\"flex justify-center gap-1 mb-6\">\n            {[1, 2, 3, 4, 5].map((star) => (\n              <img\n                key={star}\n                src={star <= randomStarRating ? starFilled : starEmpty}\n                alt={star <= randomStarRating ? \"채워진 별\" : \"빈 별\"}\n                className=\"w-4 h-4\"\n              />\n            ))}\n          </div>\n          \n          {/* Title */}\n          <div className=\"text-center px-4\">\n            <h1 className=\"[font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-white text-[20px] leading-tight mb-1\">\n              메세나 폴리스 지하 1층\n            </h1>\n            <p className=\"[font-family:'SUITE-Medium',Helvetica] font-medium text-white text-[12px]\">\n              운정로 대피 리스크 낮음 트렌드 상향\n            </p>\n          </div>\n        </div>\n\n        {/* Main Content */}\n        <div className=\"pt-[164px] pb-[80px] h-full overflow-y-auto hide-scrollbar\">\n          {/* Image Section */}\n          <div className=\"relative\">\n            <img\n              src={locationPhoto}\n              alt=\"위치 사진\"\n              className=\"w-full h-[200px] object-cover\"\n              data-testid=\"img-location\"\n            />\n            {/* Navigation Buttons on Image */}\n            <div className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 flex items-center\" style={{ gap: '254px' }}>\n              <button\n                className=\"w-12 h-12 flex items-center justify-center hover:opacity-70 transition-all\"\n                data-testid=\"button-image-prev\"\n              >\n                <img\n                  src={wh_icon_14}\n                  alt=\"이전\"\n                  className=\"w-7 h-7\"\n                />\n              </button>\n              \n              <button\n                className=\"w-12 h-12 flex items-center justify-center hover:opacity-70 transition-all\"\n                data-testid=\"button-image-next\"\n              >\n                <img\n                  src={wh_icon_14}\n                  alt=\"다음\"\n                  className=\"w-7 h-7 transform rotate-180\"\n                />\n              </button>\n            </div>\n          </div>\n\n          {/* Collapsible Sections */}\n          <div className=\"px-4 py-4\">\n            {sections.map((section) => (\n              <div key={section.key} className=\"mb-3\">\n                <button\n                  onClick={() => toggleSection(section.key)}\n                  className=\"w-full flex justify-between items-center bg-white border border-gray-300 rounded-lg px-5 py-5 hover:bg-gray-50 transition-colors\"\n                  data-testid={`button-toggle-${section.key}`}\n                >\n                  <span className=\"[font-family:'SUITE-SemiBold',Helvetica] font-semibold text-[16px] text-black\">\n                    {section.title}\n                  </span>\n                  <svg \n                    width=\"16\" \n                    height=\"16\" \n                    viewBox=\"0 0 16 16\" \n                    fill=\"none\"\n                    className={`transform transition-transform ${expandedSections[section.key] ? 'rotate-180' : ''}`}\n                  >\n                    <path d=\"M4 6L8 10L12 6\" stroke=\"black\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                  </svg>\n                </button>\n                \n                {expandedSections[section.key] && (\n                  <div className=\"mt-3 bg-white border border-gray-300 rounded-lg px-4 py-3\">\n                    <div className=\"[font-family:'SUITE-Medium',Helvetica] font-medium text-[14px] text-gray-600 leading-relaxed\">\n                      {section.key === \"summary\" && (\n                        <>\n                          <p className=\"mb-3\">\n                            이 위치는 지하철 3호선 운정역에서 도보 5분 거리에 위치하여 대중교통 접근성이 매우 우수합니다.\n                            주변 상권이 활성화되어 있어 평일 오전 9시부터 오후 6시까지 지속적인 유동인구가 확보됩니다.\n                            메세나 폴리스 건물은 A급 오피스 빌딩으로 입주 기업들의 직장인 고객층이 두텁습니다.\n                          </p>\n                          <p>\n                            지하 1층이지만 자연채광이 충분하며 별도 외부 출입구가 있어 독립적인 운영이 가능합니다.\n                            반경 500m 내에 아파트 단지 3곳과 오피스텔 2곳이 위치하여 거주민 고객층도 안정적으로 확보됩니다.\n                            주말에도 인근 카페거리와 연계되어 꾸준한 방문객이 있어 7일 운영에 유리한 입지입니다.\n                          </p>\n                        </>\n                      )}\n                      {section.key === \"environment\" && (\n                        <>\n                          <p className=\"mb-3\">\n                            건물 1층에는 스타벅스, 투썸플레이스 등 유명 카페 체인이 입점해 있어 자연스러운 고객 유입이 됩니다.\n                            도보 2분 거리에 이마트 트레이더스가 있어 대형마트 이용 고객들의 접근성이 뛰어납니다.\n                            주변에 맥도날드, 버거킹, 김밥천국 등 다양한 음식점들이 밀집되어 상권이 매우 활성화되어 있습니다.\n                          </p>\n                          <p>\n                            인근에 파리바게뜨, 뚜레주르 등 베이커리와 편의점 3곳이 있어 경쟁업체 분석이 용이합니다.\n                            오피스 빌딩 특성상 점심시간(12-1시)과 퇴근시간(6-7시) 고객 집중도가 높습니다.\n                            주거지역과 상업지역이 적절히 혼재되어 있어 다양한 연령대와 직업군의 고객층을 확보할 수 있습니다.\n                          </p>\n                        </>\n                      )}\n                      {section.key === \"rental\" && (\n                        <>\n                          <p className=\"mb-3\">\n                            월 임대료는 250만원이며 보증금은 1억원으로 주변 시세 대비 합리적인 수준입니다.\n                            관리비는 월 30만원으로 전기요금, 상하수도요금, 청소비, 보안비가 모두 포함되어 있습니다.\n                            최소 계약기간은 2년이며 계약 갱신 시 임대료 인상률은 연 5% 이내로 제한됩니다.\n                          </p>\n                          <p>\n                            권리금은 별도 협의사항이며 기존 인테리어 시설을 그대로 사용할 경우 추가 할인이 가능합니다.\n                            부가가치세는 별도이며 사업자등록증 발급 후 세무서 신고가 필요합니다.\n                            임대료 납부는 매월 25일 계좌이체로 하며 3개월 이상 연체 시 계약해지 조건이 적용됩니다.\n                          </p>\n                        </>\n                      )}\n                      {section.key === \"operation\" && (\n                        <>\n                          <p className=\"mb-3\">\n                            평일 오전 8-9시 출근시간과 오후 12-1시 점심시간에 가장 많은 고객이 몰립니다.\n                            저녁 6-7시 퇴근시간에도 테이크아웃 위주의 고객층이 지속적으로 방문합니다.\n                            주말에는 평일 대비 60% 수준의 유동인구가 있으며 오후 2-5시가 피크타임입니다.\n                          </p>\n                          <p>\n                            건물 지하주차장은 유료(시간당 1,000원)이므로 대중교통 이용 고객 위주로 마케팅해야 합니다.\n                            배달 서비스 이용 시 건물 후문으로 접근이 가능하여 배달 업무에 지장이 없습니다.\n                            주변 경쟁업체들의 운영시간을 고려할 때 오전 7시 오픈으로 차별화 전략이 효과적입니다.\n                          </p>\n                        </>\n                      )}\n                      {section.key === \"recommendation\" && (\n                        <>\n                          <p className=\"mb-3\">\n                            카페나 베이커리 업종이 가장 적합하며 특히 테이크아웃 전문점으로 운영하기에 이상적입니다.\n                            샐러드바, 도시락 전문점 등 직장인 대상 건강식 사업도 높은 성공 가능성을 보입니다.\n                            프랜차이즈 업종 중에서는 컴포즈커피, 메가커피 등 저가 커피 전문점이 유리합니다.\n                          </p>\n                          <p>\n                            편의점이나 문구점 같은 생활밀착형 업종도 안정적인 수익을 기대할 수 있습니다.\n                            점심시간 고객 집중도가 높아 김밥, 분식류 등 간편식 위주의 음식점도 추천됩니다.\n                            주말 운영을 고려한다면 브런치 카페나 디저트 전문점도 좋은 선택지가 될 수 있습니다.\n                          </p>\n                        </>\n                      )}\n                    </div>\n                  </div>\n                )}\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Bottom Action Buttons */}\n        <div className=\"absolute bottom-0 left-0 right-0 bg-white border-t border-gray-200 p-4\">\n          <div className=\"flex gap-3\">\n            <Button \n              className=\"flex-1 bg-[#00D6F8] hover:bg-[#00B8E6] text-white font-semibold rounded-lg\"\n              style={{ height: '65px' }}\n              data-testid=\"button-save\"\n            >\n              임시저장\n            </Button>\n            <Button \n              className=\"flex-1 bg-[#FFE500] hover:bg-[#E6CC00] text-black font-semibold rounded-lg\"\n              style={{ height: '65px' }}\n              data-testid=\"button-consult\"\n            >\n              상담신청\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};","size_bytes":12868},"client/src/pages/StarPage.tsx":{"content":"import { useEffect } from 'react';\nimport { useLocation } from 'wouter';\nimport { Button } from '@/components/ui/button';\n\n// 아이콘 가져오기\nimport wh_icon_header_back from '@assets/wh-icon-header-back_1755453344539.png';\nimport wh_icon_11 from '@assets/wh-icon-11_1755920857438.png';\n\ndeclare global {\n  interface Window {\n    UnicornStudio: {\n      init: () => Promise<any>;\n      destroy: () => void;\n      isInitialized?: boolean;\n    };\n  }\n}\n\nexport default function StarPage() {\n  const [, setLocation] = useLocation();\n\n  useEffect(() => {\n    // Unicorn Studio 초기화\n    if (window.UnicornStudio) {\n      window.UnicornStudio.init()\n        .then((scenes: any) => {\n          console.log('Unicorn Studio scenes ready:', scenes);\n        })\n        .catch((err: any) => {\n          console.error('Unicorn Studio initialization error:', err);\n        });\n    }\n\n    // 컴포넌트 언마운트 시 정리\n    return () => {\n      if (window.UnicornStudio) {\n        window.UnicornStudio.destroy();\n      }\n    };\n  }, []);\n\n  const handleBack = () => {\n    window.history.back();\n  };\n\n  return (\n    <div className=\"bg-white grid justify-items-center [align-items:start] w-screen\">\n      <div className=\"bg-black relative overflow-auto w-[360px]\" style={{ height: '966px' }}>\n        {/* 뒤로가기 버튼 */}\n        <Button\n          variant=\"ghost\"\n          size=\"icon\"\n          className=\"absolute z-10 p-0\"\n          style={{ left: '20px', top: '20px' }}\n          onClick={handleBack}\n          data-testid=\"button-back\"\n        >\n          <img\n            src={wh_icon_11}\n            alt=\"뒤로가기\"\n            className=\"w-6 h-6\"\n          />\n        </Button>\n\n        {/* Unicorn Studio Embed */}\n        <div className=\"w-full\" style={{ minHeight: '966px' }}>\n          <div\n            className=\"unicorn-embed w-full\"\n            style={{ height: '100%', minHeight: '966px' }}\n            data-us-project=\"49z685G1vicLJplsFafC\"\n            data-us-scale=\"1\"\n            data-us-dpi=\"1.5\"\n            data-us-lazyload=\"true\"\n            data-us-alttext=\"즐겨찾기 페이지\"\n            data-us-arialabel=\"즐겨찾기 Unicorn Studio 씬\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":2243},"attached_assets/drizzle.config_1755981028452.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"attached_assets/drizzle.config_1755981164440.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"attached_assets/drizzle.config_1755981374577.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"attached_assets/drizzle.config_1755981535256.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"attached_assets/postcss.config_1755981028453.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"attached_assets/postcss.config_1755981164441.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"attached_assets/postcss.config_1755981374579.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"attached_assets/postcss.config_1755981535257.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"attached_assets/replit_1755981028453.md":{"content":"# Overview\n\nThis is a full-stack web application built with a modern TypeScript stack. The project uses React with Vite for the frontend, Express.js for the backend, and Drizzle ORM with PostgreSQL for data persistence. The application appears to be a location-based service with a mobile-first UI design, featuring a clean interface for property or location discovery.\n\n## User Preferences\n\nPreferred communication style: Simple, everyday language.\n\n## System Architecture\n\n### Frontend Architecture\n- **Framework**: React 18 with TypeScript\n- **Build Tool**: Vite for fast development and optimized builds\n- **Styling**: Tailwind CSS with shadcn/ui component library\n- **UI Components**: Radix UI primitives for accessible, unstyled components\n- **Routing**: Wouter for lightweight client-side routing\n- **State Management**: TanStack Query (React Query) for server state management\n- **Form Handling**: React Hook Form with Zod validation\n\n### Backend Architecture\n- **Runtime**: Node.js with Express.js framework\n- **Language**: TypeScript with ES modules\n- **API Design**: RESTful API structure with `/api` prefix\n- **Development**: tsx for TypeScript execution in development\n- **Production**: esbuild for fast bundling\n\n### Data Layer\n- **Database**: PostgreSQL\n- **ORM**: Drizzle ORM for type-safe database operations\n- **Schema**: Shared schema definitions between client and server\n- **Migrations**: Drizzle Kit for database schema management\n- **Connection**: Neon Database serverless driver\n\n### Authentication & Session Management\n- **Session Storage**: PostgreSQL-based sessions using connect-pg-simple\n- **User Schema**: Basic user table with username/password authentication\n\n### Development & Build Process\n- **Monorepo Structure**: Shared code between client and server\n- **Path Aliases**: TypeScript path mapping for clean imports\n- **Hot Reload**: Vite HMR for frontend, tsx watch mode for backend\n- **Type Safety**: Strict TypeScript configuration across the stack\n\n### UI/UX Design\n- **Design System**: shadcn/ui with \"new-york\" style variant\n- **Responsive**: Mobile-first approach with fixed 360px mobile viewport\n- **Component Structure**: Modular UI components with consistent styling\n- **Accessibility**: Radix UI primitives ensure ARIA compliance\n\n## External Dependencies\n\n### Database & Infrastructure\n- **Neon Database**: Serverless PostgreSQL database\n- **Environment Variables**: DATABASE_URL for database connection\n\n### UI & Styling\n- **Tailwind CSS**: Utility-first CSS framework\n- **Radix UI**: Headless UI component primitives\n- **Lucide React**: Icon library for consistent iconography\n- **shadcn/ui**: Pre-built component library\n\n### Development Tools\n- **Vite**: Frontend build tool and dev server\n- **esbuild**: Backend bundling for production\n- **Drizzle Kit**: Database schema management and migrations\n- **tsx**: TypeScript execution for development\n\n### State Management & Data Fetching\n- **TanStack Query**: Server state management and caching\n- **React Hook Form**: Form state management\n- **Zod**: Runtime type validation and schema definition\n\n### Additional Libraries\n- **date-fns**: Date manipulation and formatting\n- **clsx & class-variance-authority**: Conditional CSS class utilities\n- **cmdk**: Command palette functionality\n- **embla-carousel-react**: Carousel/slider components","size_bytes":3336},"attached_assets/replit_1755981164441.md":{"content":"# Overview\n\nThis is a full-stack web application built with a modern TypeScript stack. The project uses React with Vite for the frontend, Express.js for the backend, and Drizzle ORM with PostgreSQL for data persistence. The application appears to be a location-based service with a mobile-first UI design, featuring a clean interface for property or location discovery.\n\n## User Preferences\n\nPreferred communication style: Simple, everyday language.\n\n## System Architecture\n\n### Frontend Architecture\n- **Framework**: React 18 with TypeScript\n- **Build Tool**: Vite for fast development and optimized builds\n- **Styling**: Tailwind CSS with shadcn/ui component library\n- **UI Components**: Radix UI primitives for accessible, unstyled components\n- **Routing**: Wouter for lightweight client-side routing\n- **State Management**: TanStack Query (React Query) for server state management\n- **Form Handling**: React Hook Form with Zod validation\n\n### Backend Architecture\n- **Runtime**: Node.js with Express.js framework\n- **Language**: TypeScript with ES modules\n- **API Design**: RESTful API structure with `/api` prefix\n- **Development**: tsx for TypeScript execution in development\n- **Production**: esbuild for fast bundling\n\n### Data Layer\n- **Database**: PostgreSQL\n- **ORM**: Drizzle ORM for type-safe database operations\n- **Schema**: Shared schema definitions between client and server\n- **Migrations**: Drizzle Kit for database schema management\n- **Connection**: Neon Database serverless driver\n\n### Authentication & Session Management\n- **Session Storage**: PostgreSQL-based sessions using connect-pg-simple\n- **User Schema**: Basic user table with username/password authentication\n\n### Development & Build Process\n- **Monorepo Structure**: Shared code between client and server\n- **Path Aliases**: TypeScript path mapping for clean imports\n- **Hot Reload**: Vite HMR for frontend, tsx watch mode for backend\n- **Type Safety**: Strict TypeScript configuration across the stack\n\n### UI/UX Design\n- **Design System**: shadcn/ui with \"new-york\" style variant\n- **Responsive**: Mobile-first approach with fixed 360px mobile viewport\n- **Component Structure**: Modular UI components with consistent styling\n- **Accessibility**: Radix UI primitives ensure ARIA compliance\n\n## External Dependencies\n\n### Database & Infrastructure\n- **Neon Database**: Serverless PostgreSQL database\n- **Environment Variables**: DATABASE_URL for database connection\n\n### UI & Styling\n- **Tailwind CSS**: Utility-first CSS framework\n- **Radix UI**: Headless UI component primitives\n- **Lucide React**: Icon library for consistent iconography\n- **shadcn/ui**: Pre-built component library\n\n### Development Tools\n- **Vite**: Frontend build tool and dev server\n- **esbuild**: Backend bundling for production\n- **Drizzle Kit**: Database schema management and migrations\n- **tsx**: TypeScript execution for development\n\n### State Management & Data Fetching\n- **TanStack Query**: Server state management and caching\n- **React Hook Form**: Form state management\n- **Zod**: Runtime type validation and schema definition\n\n### Additional Libraries\n- **date-fns**: Date manipulation and formatting\n- **clsx & class-variance-authority**: Conditional CSS class utilities\n- **cmdk**: Command palette functionality\n- **embla-carousel-react**: Carousel/slider components","size_bytes":3336},"attached_assets/replit_1755981374579.md":{"content":"# Overview\n\nThis is a full-stack web application built with a modern TypeScript stack. The project uses React with Vite for the frontend, Express.js for the backend, and Drizzle ORM with PostgreSQL for data persistence. The application appears to be a location-based service with a mobile-first UI design, featuring a clean interface for property or location discovery.\n\n## User Preferences\n\nPreferred communication style: Simple, everyday language.\n\n## System Architecture\n\n### Frontend Architecture\n- **Framework**: React 18 with TypeScript\n- **Build Tool**: Vite for fast development and optimized builds\n- **Styling**: Tailwind CSS with shadcn/ui component library\n- **UI Components**: Radix UI primitives for accessible, unstyled components\n- **Routing**: Wouter for lightweight client-side routing\n- **State Management**: TanStack Query (React Query) for server state management\n- **Form Handling**: React Hook Form with Zod validation\n\n### Backend Architecture\n- **Runtime**: Node.js with Express.js framework\n- **Language**: TypeScript with ES modules\n- **API Design**: RESTful API structure with `/api` prefix\n- **Development**: tsx for TypeScript execution in development\n- **Production**: esbuild for fast bundling\n\n### Data Layer\n- **Database**: PostgreSQL\n- **ORM**: Drizzle ORM for type-safe database operations\n- **Schema**: Shared schema definitions between client and server\n- **Migrations**: Drizzle Kit for database schema management\n- **Connection**: Neon Database serverless driver\n\n### Authentication & Session Management\n- **Session Storage**: PostgreSQL-based sessions using connect-pg-simple\n- **User Schema**: Basic user table with username/password authentication\n\n### Development & Build Process\n- **Monorepo Structure**: Shared code between client and server\n- **Path Aliases**: TypeScript path mapping for clean imports\n- **Hot Reload**: Vite HMR for frontend, tsx watch mode for backend\n- **Type Safety**: Strict TypeScript configuration across the stack\n\n### UI/UX Design\n- **Design System**: shadcn/ui with \"new-york\" style variant\n- **Responsive**: Mobile-first approach with fixed 360px mobile viewport\n- **Component Structure**: Modular UI components with consistent styling\n- **Accessibility**: Radix UI primitives ensure ARIA compliance\n\n## External Dependencies\n\n### Database & Infrastructure\n- **Neon Database**: Serverless PostgreSQL database\n- **Environment Variables**: DATABASE_URL for database connection\n\n### UI & Styling\n- **Tailwind CSS**: Utility-first CSS framework\n- **Radix UI**: Headless UI component primitives\n- **Lucide React**: Icon library for consistent iconography\n- **shadcn/ui**: Pre-built component library\n\n### Development Tools\n- **Vite**: Frontend build tool and dev server\n- **esbuild**: Backend bundling for production\n- **Drizzle Kit**: Database schema management and migrations\n- **tsx**: TypeScript execution for development\n\n### State Management & Data Fetching\n- **TanStack Query**: Server state management and caching\n- **React Hook Form**: Form state management\n- **Zod**: Runtime type validation and schema definition\n\n### Additional Libraries\n- **date-fns**: Date manipulation and formatting\n- **clsx & class-variance-authority**: Conditional CSS class utilities\n- **cmdk**: Command palette functionality\n- **embla-carousel-react**: Carousel/slider components","size_bytes":3336},"attached_assets/replit_1755981535258.md":{"content":"# Overview\n\nThis is a full-stack web application built with a modern TypeScript stack. The project uses React with Vite for the frontend, Express.js for the backend, and Drizzle ORM with PostgreSQL for data persistence. The application appears to be a location-based service with a mobile-first UI design, featuring a clean interface for property or location discovery.\n\n## User Preferences\n\nPreferred communication style: Simple, everyday language.\n\n## System Architecture\n\n### Frontend Architecture\n- **Framework**: React 18 with TypeScript\n- **Build Tool**: Vite for fast development and optimized builds\n- **Styling**: Tailwind CSS with shadcn/ui component library\n- **UI Components**: Radix UI primitives for accessible, unstyled components\n- **Routing**: Wouter for lightweight client-side routing\n- **State Management**: TanStack Query (React Query) for server state management\n- **Form Handling**: React Hook Form with Zod validation\n\n### Backend Architecture\n- **Runtime**: Node.js with Express.js framework\n- **Language**: TypeScript with ES modules\n- **API Design**: RESTful API structure with `/api` prefix\n- **Development**: tsx for TypeScript execution in development\n- **Production**: esbuild for fast bundling\n\n### Data Layer\n- **Database**: PostgreSQL\n- **ORM**: Drizzle ORM for type-safe database operations\n- **Schema**: Shared schema definitions between client and server\n- **Migrations**: Drizzle Kit for database schema management\n- **Connection**: Neon Database serverless driver\n\n### Authentication & Session Management\n- **Session Storage**: PostgreSQL-based sessions using connect-pg-simple\n- **User Schema**: Basic user table with username/password authentication\n\n### Development & Build Process\n- **Monorepo Structure**: Shared code between client and server\n- **Path Aliases**: TypeScript path mapping for clean imports\n- **Hot Reload**: Vite HMR for frontend, tsx watch mode for backend\n- **Type Safety**: Strict TypeScript configuration across the stack\n\n### UI/UX Design\n- **Design System**: shadcn/ui with \"new-york\" style variant\n- **Responsive**: Mobile-first approach with fixed 360px mobile viewport\n- **Component Structure**: Modular UI components with consistent styling\n- **Accessibility**: Radix UI primitives ensure ARIA compliance\n\n## External Dependencies\n\n### Database & Infrastructure\n- **Neon Database**: Serverless PostgreSQL database\n- **Environment Variables**: DATABASE_URL for database connection\n\n### UI & Styling\n- **Tailwind CSS**: Utility-first CSS framework\n- **Radix UI**: Headless UI component primitives\n- **Lucide React**: Icon library for consistent iconography\n- **shadcn/ui**: Pre-built component library\n\n### Development Tools\n- **Vite**: Frontend build tool and dev server\n- **esbuild**: Backend bundling for production\n- **Drizzle Kit**: Database schema management and migrations\n- **tsx**: TypeScript execution for development\n\n### State Management & Data Fetching\n- **TanStack Query**: Server state management and caching\n- **React Hook Form**: Form state management\n- **Zod**: Runtime type validation and schema definition\n\n### Additional Libraries\n- **date-fns**: Date manipulation and formatting\n- **clsx & class-variance-authority**: Conditional CSS class utilities\n- **cmdk**: Command palette functionality\n- **embla-carousel-react**: Carousel/slider components","size_bytes":3336},"attached_assets/tailwind.config_1755981028454.ts":{"content":"module.exports = {\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\",\n    \"./src/**/*.{html,js,ts,jsx,tsx}\",\n    \"app/**/*.{ts,tsx}\",\n    \"components/**/*.{ts,tsx}\",\n  ],\n  theme: {\n    extend: {\n      colors: {\n        \"gray-color6-f6f7f9\": \"var(--gray-color6-f6f7f9)\",\n        stone: \"var(--stone)\",\n        border: \"hsl(var(--border))\",\n        input: \"hsl(var(--input))\",\n        ring: \"hsl(var(--ring))\",\n        background: \"hsl(var(--background))\",\n        foreground: \"hsl(var(--foreground))\",\n        primary: {\n          DEFAULT: \"hsl(var(--primary))\",\n          foreground: \"hsl(var(--primary-foreground))\",\n        },\n        secondary: {\n          DEFAULT: \"hsl(var(--secondary))\",\n          foreground: \"hsl(var(--secondary-foreground))\",\n        },\n        destructive: {\n          DEFAULT: \"hsl(var(--destructive))\",\n          foreground: \"hsl(var(--destructive-foreground))\",\n        },\n        muted: {\n          DEFAULT: \"hsl(var(--muted))\",\n          foreground: \"hsl(var(--muted-foreground))\",\n        },\n        accent: {\n          DEFAULT: \"hsl(var(--accent))\",\n          foreground: \"hsl(var(--accent-foreground))\",\n        },\n        popover: {\n          DEFAULT: \"hsl(var(--popover))\",\n          foreground: \"hsl(var(--popover-foreground))\",\n        },\n        card: {\n          DEFAULT: \"hsl(var(--card))\",\n          foreground: \"hsl(var(--card-foreground))\",\n        },\n      },\n      fontFamily: {\n        \"button-2\": \"var(--button-2-font-family)\",\n        sans: [\n          \"ui-sans-serif\",\n          \"system-ui\",\n          \"sans-serif\",\n          '\"Apple Color Emoji\"',\n          '\"Segoe UI Emoji\"',\n          '\"Segoe UI Symbol\"',\n          '\"Noto Color Emoji\"',\n        ],\n      },\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: { height: \"0\" },\n          to: { height: \"var(--radix-accordion-content-height)\" },\n        },\n        \"accordion-up\": {\n          from: { height: \"var(--radix-accordion-content-height)\" },\n          to: { height: \"0\" },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n    },\n    container: { center: true, padding: \"2rem\", screens: { \"2xl\": \"1400px\" } },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n  darkMode: [\"class\"],\n};\n","size_bytes":2520},"attached_assets/tailwind.config_1755981164442.ts":{"content":"module.exports = {\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\",\n    \"./src/**/*.{html,js,ts,jsx,tsx}\",\n    \"app/**/*.{ts,tsx}\",\n    \"components/**/*.{ts,tsx}\",\n  ],\n  theme: {\n    extend: {\n      colors: {\n        \"gray-color6-f6f7f9\": \"var(--gray-color6-f6f7f9)\",\n        stone: \"var(--stone)\",\n        border: \"hsl(var(--border))\",\n        input: \"hsl(var(--input))\",\n        ring: \"hsl(var(--ring))\",\n        background: \"hsl(var(--background))\",\n        foreground: \"hsl(var(--foreground))\",\n        primary: {\n          DEFAULT: \"hsl(var(--primary))\",\n          foreground: \"hsl(var(--primary-foreground))\",\n        },\n        secondary: {\n          DEFAULT: \"hsl(var(--secondary))\",\n          foreground: \"hsl(var(--secondary-foreground))\",\n        },\n        destructive: {\n          DEFAULT: \"hsl(var(--destructive))\",\n          foreground: \"hsl(var(--destructive-foreground))\",\n        },\n        muted: {\n          DEFAULT: \"hsl(var(--muted))\",\n          foreground: \"hsl(var(--muted-foreground))\",\n        },\n        accent: {\n          DEFAULT: \"hsl(var(--accent))\",\n          foreground: \"hsl(var(--accent-foreground))\",\n        },\n        popover: {\n          DEFAULT: \"hsl(var(--popover))\",\n          foreground: \"hsl(var(--popover-foreground))\",\n        },\n        card: {\n          DEFAULT: \"hsl(var(--card))\",\n          foreground: \"hsl(var(--card-foreground))\",\n        },\n      },\n      fontFamily: {\n        \"button-2\": \"var(--button-2-font-family)\",\n        sans: [\n          \"ui-sans-serif\",\n          \"system-ui\",\n          \"sans-serif\",\n          '\"Apple Color Emoji\"',\n          '\"Segoe UI Emoji\"',\n          '\"Segoe UI Symbol\"',\n          '\"Noto Color Emoji\"',\n        ],\n      },\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: { height: \"0\" },\n          to: { height: \"var(--radix-accordion-content-height)\" },\n        },\n        \"accordion-up\": {\n          from: { height: \"var(--radix-accordion-content-height)\" },\n          to: { height: \"0\" },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n    },\n    container: { center: true, padding: \"2rem\", screens: { \"2xl\": \"1400px\" } },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n  darkMode: [\"class\"],\n};\n","size_bytes":2520},"attached_assets/tailwind.config_1755981374579.ts":{"content":"module.exports = {\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\",\n    \"./src/**/*.{html,js,ts,jsx,tsx}\",\n    \"app/**/*.{ts,tsx}\",\n    \"components/**/*.{ts,tsx}\",\n  ],\n  theme: {\n    extend: {\n      colors: {\n        \"gray-color6-f6f7f9\": \"var(--gray-color6-f6f7f9)\",\n        stone: \"var(--stone)\",\n        border: \"hsl(var(--border))\",\n        input: \"hsl(var(--input))\",\n        ring: \"hsl(var(--ring))\",\n        background: \"hsl(var(--background))\",\n        foreground: \"hsl(var(--foreground))\",\n        primary: {\n          DEFAULT: \"hsl(var(--primary))\",\n          foreground: \"hsl(var(--primary-foreground))\",\n        },\n        secondary: {\n          DEFAULT: \"hsl(var(--secondary))\",\n          foreground: \"hsl(var(--secondary-foreground))\",\n        },\n        destructive: {\n          DEFAULT: \"hsl(var(--destructive))\",\n          foreground: \"hsl(var(--destructive-foreground))\",\n        },\n        muted: {\n          DEFAULT: \"hsl(var(--muted))\",\n          foreground: \"hsl(var(--muted-foreground))\",\n        },\n        accent: {\n          DEFAULT: \"hsl(var(--accent))\",\n          foreground: \"hsl(var(--accent-foreground))\",\n        },\n        popover: {\n          DEFAULT: \"hsl(var(--popover))\",\n          foreground: \"hsl(var(--popover-foreground))\",\n        },\n        card: {\n          DEFAULT: \"hsl(var(--card))\",\n          foreground: \"hsl(var(--card-foreground))\",\n        },\n      },\n      fontFamily: {\n        \"button-2\": \"var(--button-2-font-family)\",\n        sans: [\n          \"ui-sans-serif\",\n          \"system-ui\",\n          \"sans-serif\",\n          '\"Apple Color Emoji\"',\n          '\"Segoe UI Emoji\"',\n          '\"Segoe UI Symbol\"',\n          '\"Noto Color Emoji\"',\n        ],\n      },\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: { height: \"0\" },\n          to: { height: \"var(--radix-accordion-content-height)\" },\n        },\n        \"accordion-up\": {\n          from: { height: \"var(--radix-accordion-content-height)\" },\n          to: { height: \"0\" },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n    },\n    container: { center: true, padding: \"2rem\", screens: { \"2xl\": \"1400px\" } },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n  darkMode: [\"class\"],\n};\n","size_bytes":2520},"attached_assets/tailwind.config_1755981535258.ts":{"content":"module.exports = {\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\",\n    \"./src/**/*.{html,js,ts,jsx,tsx}\",\n    \"app/**/*.{ts,tsx}\",\n    \"components/**/*.{ts,tsx}\",\n  ],\n  theme: {\n    extend: {\n      colors: {\n        \"gray-color6-f6f7f9\": \"var(--gray-color6-f6f7f9)\",\n        stone: \"var(--stone)\",\n        border: \"hsl(var(--border))\",\n        input: \"hsl(var(--input))\",\n        ring: \"hsl(var(--ring))\",\n        background: \"hsl(var(--background))\",\n        foreground: \"hsl(var(--foreground))\",\n        primary: {\n          DEFAULT: \"hsl(var(--primary))\",\n          foreground: \"hsl(var(--primary-foreground))\",\n        },\n        secondary: {\n          DEFAULT: \"hsl(var(--secondary))\",\n          foreground: \"hsl(var(--secondary-foreground))\",\n        },\n        destructive: {\n          DEFAULT: \"hsl(var(--destructive))\",\n          foreground: \"hsl(var(--destructive-foreground))\",\n        },\n        muted: {\n          DEFAULT: \"hsl(var(--muted))\",\n          foreground: \"hsl(var(--muted-foreground))\",\n        },\n        accent: {\n          DEFAULT: \"hsl(var(--accent))\",\n          foreground: \"hsl(var(--accent-foreground))\",\n        },\n        popover: {\n          DEFAULT: \"hsl(var(--popover))\",\n          foreground: \"hsl(var(--popover-foreground))\",\n        },\n        card: {\n          DEFAULT: \"hsl(var(--card))\",\n          foreground: \"hsl(var(--card-foreground))\",\n        },\n      },\n      fontFamily: {\n        \"button-2\": \"var(--button-2-font-family)\",\n        sans: [\n          \"ui-sans-serif\",\n          \"system-ui\",\n          \"sans-serif\",\n          '\"Apple Color Emoji\"',\n          '\"Segoe UI Emoji\"',\n          '\"Segoe UI Symbol\"',\n          '\"Noto Color Emoji\"',\n        ],\n      },\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: { height: \"0\" },\n          to: { height: \"var(--radix-accordion-content-height)\" },\n        },\n        \"accordion-up\": {\n          from: { height: \"var(--radix-accordion-content-height)\" },\n          to: { height: \"0\" },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n    },\n    container: { center: true, padding: \"2rem\", screens: { \"2xl\": \"1400px\" } },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n  darkMode: [\"class\"],\n};\n","size_bytes":2520},"attached_assets/vite.config_1755981028455.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n  server: {\n    fs: {\n      strict: true,\n      deny: [\"**/.*\"],\n    },\n  },\n});\n","size_bytes":971},"attached_assets/vite.config_1755981164442.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n  server: {\n    fs: {\n      strict: true,\n      deny: [\"**/.*\"],\n    },\n  },\n});\n","size_bytes":971},"attached_assets/vite.config_1755981374580.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n  server: {\n    fs: {\n      strict: true,\n      deny: [\"**/.*\"],\n    },\n  },\n});\n","size_bytes":971},"attached_assets/vite.config_1755981535259.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n  server: {\n    fs: {\n      strict: true,\n      deny: [\"**/.*\"],\n    },\n  },\n});\n","size_bytes":971},"client/src/pages/WhereIsGoodPage.tsx":{"content":"import React, { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Link, useLocation } from \"wouter\";\nimport starshopIcon from \"@assets/wh-icon-header-starshop-1_1755987371421.png\";\nimport cardImage from \"@assets/group-1000005598_1755987371420.png\";\nimport uploadIcon from \"@assets/wh-icon-6-1_1755987371421.png\";\nimport lineIcon from \"@assets/group-1000005521_1755987371419.png\";\nimport sliderHandle from \"@assets/wh-icon-12_1755988409223.png\";\nimport heartIcon from \"@assets/wh-icon-2_1755991104492.png\";\nimport foodIcon1 from \"@assets/wh-icon-category-food-1_1755994685943.png\";\nimport foodIcon2 from \"@assets/wh-icon-category-food-2_1755994685943.png\";\nimport hobbyIcon1 from \"@assets/wh-icon-category-hobby-1_1755994685944.png\";\nimport hobbyIcon2 from \"@assets/wh-icon-category-hobby-2_1755994685945.png\";\nimport beautyIcon1 from \"@assets/wh-icon-category-beauty-1_1755994685941.png\";\nimport beautyIcon2 from \"@assets/wh-icon-category-beauty-2_1755994685942.png\";\nimport kidIcon1 from \"@assets/wh-icon-category-kid-1_1755994685946.png\";\nimport kidIcon2 from \"@assets/wh-icon-category-kid-2_1755994685947.png\";\n\n// 새로운 카테고리 아이콘들\nimport newBeautyIcon1 from \"@assets/wh-icon-category-beauty-1_1756098993585.png\";\nimport newBeautyIcon2 from \"@assets/wh-icon-category-beauty-2_1756098993588.png\";\nimport newFoodIcon1 from \"@assets/wh-icon-category-food-1_1756098993588.png\";\nimport newFoodIcon2 from \"@assets/wh-icon-category-food-2_1756098993589.png\";\nimport newHobbyIcon1 from \"@assets/wh-icon-category-hobby-1_1756098993589.png\";\nimport newHobbyIcon2 from \"@assets/wh-icon-category-hobby-2_1756098993589.png\";\nimport newKidIcon1 from \"@assets/wh-icon-category-kid-1_1756098993590.png\";\nimport newKidIcon2 from \"@assets/wh-icon-category-kid-2_1756098993590.png\";\nimport { AreaSelector } from \"@/components/ui/area-selector\";\nimport { RangeSlider } from \"@/components/ui/range-slider\";\nimport { CardCarousel } from \"@/components/ui/card-carousel\";\n\nexport const WhereIsGoodPage = (): JSX.Element => {\n  const [, setLocation] = useLocation();\n  const [selectedCard, setSelectedCard] = useState<string | null>(\"record-cafe\");\n  const [showAreaSection, setShowAreaSection] = useState(false);\n  const [showBudgetSection, setShowBudgetSection] = useState(false);\n  const [showOptionSection, setShowOptionSection] = useState(false);\n  const [showCategoryDropdown, setShowCategoryDropdown] = useState(false);\n  const [selectedCategoryType, setSelectedCategoryType] = useState<string>('food');\n  const [categoryFilter, setCategoryFilter] = useState<string | undefined>(undefined);\n  const [showModal, setShowModal] = useState(false);\n  const [showInvalidModal, setShowInvalidModal] = useState(false);\n  const [showInvalidBusinessModal, setShowInvalidBusinessModal] = useState(false);\n  const [inputValue, setInputValue] = useState('');\n  const [areaUnit, setAreaUnit] = useState<'sqm' | 'pyeong'>('sqm');\n  const [areaMin, setAreaMin] = useState(66);\n  const [areaMax, setAreaMax] = useState(165);\n  const [isDragging, setIsDragging] = useState<'min' | 'max' | null>(null);\n  \n  // 옵션 필터링 상태\n  const [selectedCategory, setSelectedCategory] = useState<string>('전체');\n  const [selectedSubCategory, setSelectedSubCategory] = useState<string>('전체');\n  \n  // 예산 필터링 상태\n  const [budgetMin, setBudgetMin] = useState(0);\n  const [budgetMax, setBudgetMax] = useState(25000);\n  const [depositMin, setDepositMin] = useState(35);\n  const [depositMax, setDepositMax] = useState(150);\n  const [includeManagementFee, setIncludeManagementFee] = useState(true);\n  const [budgetDragging, setBudgetDragging] = useState<'min' | 'max' | null>(null);\n  const [depositDragging, setDepositDragging] = useState<'min' | 'max' | null>(null);\n\n  const filterButtons = [\n    { label: \"면적\", icon: \">\" },\n    { label: \"예산\", icon: \">\" },\n    { label: \"옵션\", icon: \">\" },\n  ];\n\n  // 업종 유효성 검사 함수\n  const isValidBusiness = (business: string): boolean => {\n    const trimmed = business.trim();\n    \n    // 빈 문자열이거나 너무 짧은 경우\n    if (trimmed.length === 0 || trimmed.length === 1) {\n      return false;\n    }\n    \n    // 숫자만 포함된 경우\n    if (/^\\d+$/.test(trimmed)) {\n      return false;\n    }\n    \n    // 특수문자만 포함된 경우\n    if (/^[!@#$%^&*(),.?\":{}|<>]+$/.test(trimmed)) {\n      return false;\n    }\n    \n    // 사업화 불가능한 업종들\n    const invalidBusinesses = [\n      // 불법/위험 업종\n      '마약', '도박', '불법', '범죄', '사기', '폭력', '테러', '해킹', '바이러스',\n      '총', '칼', '무기', '폭탄', '독', '자살', '살인', '강도', '절도',\n      \n      // 비속어\n      '시발', '씨발', '개새끼', '병신', '미친', '개같은', '좆', '좆같은', \n      '븅신', '개년', '년', '놈', '새끼', '아가리', '꺼져', '닥쳐',\n      'fuck', 'shit', 'bitch', 'damn', 'hell',\n      \n      // 실제 업종이 아닌 것들\n      '사람', '동물', '고양이', '강아지', '물', '공기', '하늘', '땅', '바다',\n      '엄마', '아빠', '친구', '사랑', '이름', '나', '너', '우리',\n      '학교', '집', '방', '화장실', '침실', '거실',\n      '밥', '물', '음료', '과일', '야채', '고기',\n      '영화', '드라마', '노래', '책', '게임',\n      '돈', '시간', '날씨', '기분', '생각',\n      \n      // 의미없는 문자열\n      'asdf', 'qwer', 'zxcv', '1234', 'test', 'ㅁㅁㅁ', 'ㄱㄱㄱ',\n      'ㅋㅋㅋ', 'ㅎㅎㅎ', 'ㅠㅠㅠ', 'ㅜㅜㅜ', 'abcd', 'hello', 'world',\n      \n      // 일반 명사 (업종이 아닌 것들)\n      '컴퓨터', '휴대폰', '자동차', '자전거', '비행기', '기차',\n      '의자', '책상', '침대', '소파', '냉장고', '텔레비전',\n      '운동', '여행', '독서', '음악', '그림', '사진'\n    ];\n    \n    const lowerBusiness = trimmed.toLowerCase();\n    return !invalidBusinesses.some(invalid => lowerBusiness.includes(invalid));\n  };\n\n  const handleUploadClick = () => {\n    if (!isValidBusiness(inputValue)) {\n      setShowInvalidBusinessModal(true);\n    } else {\n      setShowModal(true);\n    }\n  };\n\n  const bottomNavIcons = [\n    { id: \"h\", src1: \"/figmaAssets/wh-icon-footer-h-1.png\", src2: \"/figmaAssets/wh-icon-footer-h-2.png\", alt: \"홈\", route: \"/\", disabled: true },\n    { id: \"s\", src1: \"/figmaAssets/wh-icon-footer-s-1.png\", src2: \"/figmaAssets/wh-icon-footer-s-2.png\", alt: \"입지\", route: \"/where-is-good\", active: true },\n    { id: \"b\", src1: \"/figmaAssets/wh-icon-footer-b-1.png\", src2: \"/figmaAssets/wh-icon-footer-b-2.png\", alt: \"분양\", route: \"/building\", disabled: true },\n    { id: \"c\", src1: \"/figmaAssets/wh-icon-footer-c-1.png\", src2: \"/figmaAssets/wh-icon-footer-c-2.png\", alt: \"커뮤니티\", route: \"/consultation\", disabled: true },\n    { id: \"m\", src1: \"/figmaAssets/wh-icon-footer-m-1.png\", src2: \"/figmaAssets/wh-icon-footer-m-2.png\", alt: \"마이페이지\", route: \"/mypage\" },\n  ];\n\n  return (\n    <div className=\"bg-white grid justify-items-center [align-items:start] w-screen\">\n      <div className=\"bg-white overflow-hidden w-[360px] h-[640px] relative\">\n        {/* Header */}\n        <header className=\"absolute w-[362px] h-[63px] -top-px -left-px\">\n          <div className=\"absolute w-[362px] h-[62px] top-0 left-0 border border-solid border-[#dadada]\">\n            <nav className=\"inline-flex items-center gap-3 absolute top-[25px] left-[18px]\">\n              <Button\n                variant=\"ghost\"\n                className=\"relative w-fit mt-[-1.00px] [font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-[#666666] text-xl tracking-[0] leading-[normal] p-0 h-auto hover:bg-transparent\"\n                data-testid=\"button-where-is-good\"\n              >\n                어디가 좋을까?\n              </Button>\n\n              <Button\n                variant=\"ghost\"\n                className=\"relative w-fit mt-[-1.00px] [font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-[#b0b0b0] text-xl tracking-[0] leading-[normal] p-0 h-auto hover:bg-transparent\"\n                onClick={() => setLocation('/store')}\n                data-testid=\"button-what-to-do\"\n              >\n                여기에 뭐할까?\n              </Button>\n            </nav>\n\n            <Button\n              variant=\"ghost\"\n              size=\"icon\"\n              className=\"absolute p-0 flex items-center justify-center\"\n              style={{ top: '12px', right: '12px' }}\n              onClick={() => setLocation('/star')}\n              data-testid=\"button-star\"\n            >\n              <img\n                src={starshopIcon}\n                alt=\"스타샵\"\n                style={{ height: '38px', width: 'auto' }}\n              />\n            </Button>\n          </div>\n\n          <div className=\"absolute w-[122px] h-[3px] top-[60px] left-[18px] bg-[#666666]\" />\n        </header>\n\n        {/* Filter Buttons */}\n        <div className=\"inline-flex items-center gap-3 absolute top-[86px] left-[18px] z-10\">\n          {filterButtons.map((button, index) => (\n            <button\n              key={index}\n              onClick={() => {\n                if (button.label === \"면적\") {\n                  setShowAreaSection(!showAreaSection);\n                  setShowBudgetSection(false);\n                  setShowOptionSection(false);\n                } else if (button.label === \"예산\") {\n                  setShowBudgetSection(!showBudgetSection);\n                  setShowAreaSection(false);\n                  setShowOptionSection(false);\n                } else if (button.label === \"옵션\") {\n                  setShowOptionSection(!showOptionSection);\n                  setShowAreaSection(false);\n                  setShowBudgetSection(false);\n                }\n              }}\n              className={`relative w-[65px] h-7 hover:bg-[#00c6e8] text-white rounded-[40px] flex items-center justify-center transition-colors cursor-pointer ${\n                (button.label === \"면적\" && showAreaSection) || \n                (button.label === \"예산\" && showBudgetSection) || \n                (button.label === \"옵션\" && showOptionSection) \n                  ? 'bg-[#CCFF00] text-[#666666]' \n                  : 'bg-[#00d6f8]'\n              }`}\n            >\n              <div className=\"flex items-center gap-[3px]\">\n                <div className={`text-[15px] tracking-[-0.23px] leading-5 ${\n                  button.label === \"면적\" || button.label === \"예산\" || button.label === \"옵션\" \n                    ? \"[font-family:'SUITE-Medium',Helvetica] font-medium\" \n                    : \"[font-family:'SUITE-ExtraBold',Helvetica] font-extrabold\"\n                } ${\n                  (button.label === \"면적\" && showAreaSection) || \n                  (button.label === \"예산\" && showBudgetSection) || \n                  (button.label === \"옵션\" && showOptionSection) \n                    ? 'text-[#666666]' : ''\n                }`}>\n                  {button.label}\n                </div>\n                <div className={`w-2.5 rotate-90 text-[15px] tracking-[-0.23px] leading-5 ${\n                  button.label === \"면적\" || button.label === \"예산\" || button.label === \"옵션\" \n                    ? \"[font-family:'SUITE-Medium',Helvetica] font-medium\" \n                    : \"[font-family:'SUITE-ExtraBold',Helvetica] font-extrabold\"\n                } ${\n                  (button.label === \"면적\" && showAreaSection) || \n                  (button.label === \"예산\" && showBudgetSection) || \n                  (button.label === \"옵션\" && showOptionSection) \n                    ? 'rotate-[-90deg]' : 'rotate-90'\n                } ${\n                  (button.label === \"면적\" && showAreaSection) || \n                  (button.label === \"예산\" && showBudgetSection) || \n                  (button.label === \"옵션\" && showOptionSection) \n                    ? 'text-[#666666]' : ''\n                } transition-transform`}>\n                  {button.icon}\n                </div>\n              </div>\n            </button>\n          ))}\n        </div>\n\n        {/* Main Content */}\n        <main className=\"absolute w-[360px] h-[522px] top-[63px] left-0 bg-white\">\n                {/* 카페 / 음식 */}\n                <div \n                  className=\"flex flex-col items-center justify-center p-3 rounded-[12px] cursor-pointer hover:scale-105 transition-transform\"\n                  style={{\n                    backgroundColor: '#FA5705',\n                    opacity: 0.7\n                  }}\n                  onClick={() => {\n                    setSelectedCategoryType('food');\n                    setCategoryFilter('c');\n                    setShowCategoryDropdown(false);\n                  }}\n                  data-testid=\"category-food\"\n                >\n                  <div className=\"w-[20px] h-[20px] mb-2\">\n                    <img \n                      src={selectedCategoryType === 'food' ? newFoodIcon1 : newFoodIcon2} \n                      alt=\"food icon\" \n                      className=\"w-full h-full object-contain\"\n                    />\n                  </div>\n                  <span className=\"[font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-[10px] text-white text-center leading-tight\">\n                    카페 / 음식\n                  </span>\n                </div>\n\n                {/* 뷰티 / 헬스 */}\n                <div \n                  className=\"flex flex-col items-center justify-center p-3 rounded-[12px] cursor-pointer hover:scale-105 transition-transform\"\n                  style={{\n                    backgroundColor: '#FF00AE',\n                    opacity: 0.7\n                  }}\n                  onClick={() => {\n                    setSelectedCategoryType('beauty');\n                    setCategoryFilter('b');\n                    setShowCategoryDropdown(false);\n                  }}\n                  data-testid=\"category-beauty\"\n                >\n                  <div className=\"w-[20px] h-[20px] mb-2\">\n                    <img \n                      src={selectedCategoryType === 'beauty' ? newBeautyIcon1 : newBeautyIcon2} \n                      alt=\"beauty icon\" \n                      className=\"w-full h-full object-contain\"\n                    />\n                  </div>\n                  <span className=\"[font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-[10px] text-white text-center leading-tight\">\n                    뷰티 / 헬스\n                  </span>\n                </div>\n\n                {/* 리테일 / 의류 */}\n                <div \n                  className=\"flex flex-col items-center justify-center p-3 rounded-[12px] cursor-pointer hover:scale-105 transition-transform\"\n                  style={{\n                    backgroundColor: '#4F46E5',\n                    opacity: 0.7\n                  }}\n                  onClick={() => {\n                    setSelectedCategoryType('retail');\n                    setCategoryFilter(undefined);\n                    setShowCategoryDropdown(false);\n                  }}\n                  data-testid=\"category-retail\"\n                >\n                  <div className=\"w-[20px] h-[20px] mb-2 flex items-center justify-center\">\n                    <span className=\"text-white text-[14px]\">👕</span>\n                  </div>\n                  <span className=\"[font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-[10px] text-white text-center leading-tight\">\n                    리테일 / 의류\n                  </span>\n                </div>\n\n                {/* 교육 / 학원 */}\n                <div \n                  className=\"flex flex-col items-center justify-center p-3 rounded-[12px] cursor-pointer hover:scale-105 transition-transform\"\n                  style={{\n                    backgroundColor: '#10B981',\n                    opacity: 0.7\n                  }}\n                  onClick={() => {\n                    setSelectedCategoryType('education');\n                    setCategoryFilter(undefined);\n                    setShowCategoryDropdown(false);\n                  }}\n                  data-testid=\"category-education\"\n                >\n                  <div className=\"w-[20px] h-[20px] mb-2 flex items-center justify-center\">\n                    <span className=\"text-white text-[14px]\">📚</span>\n                  </div>\n                  <span className=\"[font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-[10px] text-white text-center leading-tight\">\n                    교육 / 학원\n                  </span>\n                </div>\n\n                {/* IT / 기술 */}\n                <div \n                  className=\"flex flex-col items-center justify-center p-3 rounded-[12px] cursor-pointer hover:scale-105 transition-transform\"\n                  style={{\n                    backgroundColor: '#06B6D4',\n                    opacity: 0.7\n                  }}\n                  onClick={() => {\n                    setSelectedCategoryType('tech');\n                    setCategoryFilter(undefined);\n                    setShowCategoryDropdown(false);\n                  }}\n                  data-testid=\"category-tech\"\n                >\n                  <div className=\"w-[20px] h-[20px] mb-2 flex items-center justify-center\">\n                    <span className=\"text-white text-[14px]\">💻</span>\n                  </div>\n                  <span className=\"[font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-[10px] text-white text-center leading-tight\">\n                    IT / 기술\n                  </span>\n                </div>\n\n                {/* 의료 / 병원 */}\n                <div \n                  className=\"flex flex-col items-center justify-center p-3 rounded-[12px] cursor-pointer hover:scale-105 transition-transform\"\n                  style={{\n                    backgroundColor: '#EF4444',\n                    opacity: 0.7\n                  }}\n                  onClick={() => {\n                    setSelectedCategoryType('medical');\n                    setCategoryFilter(undefined);\n                    setShowCategoryDropdown(false);\n                  }}\n                  data-testid=\"category-medical\"\n                >\n                  <div className=\"w-[20px] h-[20px] mb-2 flex items-center justify-center\">\n                    <span className=\"text-white text-[14px]\">🏥</span>\n                  </div>\n                  <span className=\"[font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-[10px] text-white text-center leading-tight\">\n                    의료 / 병원\n                  </span>\n                </div>\n\n                {/* 서비스업 */}\n                <div \n                  className=\"flex flex-col items-center justify-center p-3 rounded-[12px] cursor-pointer hover:scale-105 transition-transform\"\n                  style={{\n                    backgroundColor: '#F59E0B',\n                    opacity: 0.7\n                  }}\n                  onClick={() => {\n                    setSelectedCategoryType('service');\n                    setCategoryFilter(undefined);\n                    setShowCategoryDropdown(false);\n                  }}\n                  data-testid=\"category-service\"\n                >\n                  <div className=\"w-[20px] h-[20px] mb-2 flex items-center justify-center\">\n                    <span className=\"text-white text-[14px]\">🔧</span>\n                  </div>\n                  <span className=\"[font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-[10px] text-white text-center leading-tight\">\n                    서비스업\n                  </span>\n                </div>\n\n                {/* 취미 / 문화 */}\n                <div \n                  className=\"flex flex-col items-center justify-center p-3 rounded-[12px] cursor-pointer hover:scale-105 transition-transform\"\n                  style={{\n                    backgroundColor: '#9D00FF',\n                    opacity: 0.7\n                  }}\n                  onClick={() => {\n                    setSelectedCategoryType('hobby');\n                    setCategoryFilter('h');\n                    setShowCategoryDropdown(false);\n                  }}\n                  data-testid=\"category-hobby\"\n                >\n                  <div className=\"w-[20px] h-[20px] mb-2\">\n                    <img \n                      src={selectedCategoryType === 'hobby' ? newHobbyIcon1 : newHobbyIcon2} \n                      alt=\"hobby icon\" \n                      className=\"w-full h-full object-contain\"\n                    />\n                  </div>\n                  <span className=\"[font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-[10px] text-white text-center leading-tight\">\n                    취미 / 문화\n                  </span>\n                </div>\n\n                {/* 키즈 / 반려 */}\n                <div \n                  className=\"flex flex-col items-center justify-center p-3 rounded-[12px] cursor-pointer hover:scale-105 transition-transform\"\n                  style={{\n                    backgroundColor: '#CCFF00',\n                    opacity: 0.7\n                  }}\n                  onClick={() => {\n                    setSelectedCategoryType('kid');\n                    setCategoryFilter('p');\n                    setShowCategoryDropdown(false);\n                  }}\n                  data-testid=\"category-kids\"\n                >\n                  <div className=\"w-[20px] h-[20px] mb-2\">\n                    <img \n                      src={selectedCategoryType === 'kid' ? newKidIcon1 : newKidIcon2} \n                      alt=\"kid icon\" \n                      className=\"w-full h-full object-contain\"\n                    />\n                  </div>\n                  <span className=\"[font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-[10px] text-black text-center leading-tight\">\n                    키즈 / 반려\n                  </span>\n                </div>\n              </div>\n            </div>\n\n          {/* Card Carousel - 3D 입체 캐러셀 (수동 클릭만 가능) */}\n          <CardCarousel \n            autoSlideInterval={1800}\n            enableAutoSlide={false} // 자동 슬라이드 비활성화\n            animationDuration={280}\n            categoryFilter={categoryFilter}\n          />\n          \n          {/* Search Input - 높이 줄이고 텍스트 변경 */}\n          <div className=\"absolute bottom-[46px] left-4 right-4\">\n            <div className=\"relative w-full h-[45px] rounded-[8px] border-2 border-[#00d6f8] bg-white\">\n              <img\n                className=\"absolute w-0.5 h-[18px] top-[14px] left-[15px]\"\n                alt=\"Group\"\n                src={lineIcon}\n              />\n              <Input\n                type=\"search\"\n                value={inputValue}\n                onChange={(e) => setInputValue(e.target.value)}\n                className=\"w-full h-full pl-[22px] pr-[60px] bg-transparent border-0 outline-none ring-0 focus:ring-0 shadow-none [font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-[#666666] text-[16px] focus-visible:ring-0\"\n                placeholder=\"고기 커스텀 국밥집\"\n                style={{\n                  WebkitTextSizeAdjust: '100%',\n                  textSizeAdjust: '100%',\n                  fontSize: '16px'\n                }}\n              />\n              <img\n                className=\"absolute w-[34px] h-[34px] top-1.5 right-1.5 object-cover cursor-pointer\"\n                alt=\"Upload icon\"\n                src={uploadIcon}\n                onClick={handleUploadClick}\n              />\n            </div>\n          </div>\n        </main>\n\n        {/* 면적 섹션 영역 - 기존 코드 주석처리하고 새 AreaSelector 컴포넌트 사용 */}\n        {showAreaSection && (\n          <div className=\"absolute w-[360px] bg-white border-b border-gray-200 shadow-lg\" style={{ top: '122px', left: '0px', zIndex: 25 }}>\n            <AreaSelector\n              areaMin={areaMin}\n              areaMax={areaMax}\n              areaUnit={areaUnit}\n              isDragging={isDragging}\n              onAreaMinChange={setAreaMin}\n              onAreaMaxChange={setAreaMax}\n              onAreaUnitChange={() => setAreaUnit(areaUnit === 'sqm' ? 'pyeong' : 'sqm')}\n              onDragStart={setIsDragging}\n              onDragEnd={() => setIsDragging(null)}\n              onReset={() => {\n                setAreaMin(66);\n                setAreaMax(165);\n                setAreaUnit('sqm');\n              }}\n              onApply={() => {\n                // Apply area filter logic here\n                setShowAreaSection(false);\n              }}\n              onClose={() => setShowAreaSection(false)}\n            />\n          </div>\n        )}\n\n        {/* 예산 섹션 */}\n        {showBudgetSection && (\n          <div className=\"absolute w-[360px] bg-white border-b border-gray-200 shadow-lg\" style={{ top: '122px', left: '0px', zIndex: 25 }}>\n            <div className=\"p-4\">\n              {/* 보증금 섹션 */}\n              <div className=\"mb-8\">\n                <div className=\"flex justify-between items-center mb-4\">\n                  <h3 className=\"[font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-base text-[#111]\">보증금</h3>\n                  <span className=\"text-sm text-[#00E6FF] [font-family:'SUITE-ExtraBold',Helvetica] font-extrabold cursor-pointer\" onClick={() => {\n                    setBudgetMin(0);\n                    setBudgetMax(25000);\n                  }}>\n                    {(() => {\n                      // 전체 범위인지 확인\n                      if (budgetMin === 0 && budgetMax === 25000) {\n                        return \"전체\";\n                      }\n                      \n                      // 범위 표시\n                      const formatAmount = (amount: number) => {\n                        if (amount < 10000) {\n                          return `${Math.round(amount / 1000)}천만`;\n                        } else {\n                          return `${(amount / 10000).toFixed(2)}억`;\n                        }\n                      };\n                      return `${formatAmount(budgetMin)} ~ ${formatAmount(budgetMax)}`;\n                    })()}\n                  </span>\n                </div>\n\n                {/* 보증금 Range Slider */}\n                <RangeSlider\n                  min={0}\n                  max={25000}\n                  minValue={budgetMin}\n                  maxValue={budgetMax}\n                  onMinChange={setBudgetMin}\n                  onMaxChange={setBudgetMax}\n                  onDragStart={(type) => setBudgetDragging(type)}\n                  onDragEnd={() => setBudgetDragging(null)}\n                  isDragging={budgetDragging}\n                  minGap={(48 / 308) * 25000} // 약 3896\n                  formatValue={(value) => {\n                    const suffix = budgetDragging === 'min' ? '부터' : budgetDragging === 'max' ? '까지' : '';\n                    if (value < 10000) {\n                      return `${Math.round(value / 1000)}천만${suffix}`;\n                    } else {\n                      return `${(value / 10000).toFixed(2)}억${suffix}`;\n                    }\n                  }}\n                  showDragBubble={true}\n                  handleImage=\"/assets/wh-icon-12_1755367755885.png\"\n                />\n\n                {/* 보증금 Labels */}\n                <div className=\"flex justify-between text-xs text-[#777] [font-family:'SUITE-Medium',Helvetica] font-medium px-1\" style={{ marginTop: '-4px' }}>\n                  <span>최소</span>\n                  <span>5천만</span>\n                  <span>2.5억</span>\n                  <span>최대</span>\n                </div>\n              </div>\n\n              {/* 임대료(월세) 섹션 */}\n              <div className=\"mb-8\">\n                <div className=\"flex justify-between items-center mb-4\">\n                  <h3 className=\"[font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-base text-[#111]\">임대료(월세)</h3>\n                  <span className=\"text-sm text-[#00E6FF] [font-family:'SUITE-ExtraBold',Helvetica] font-extrabold cursor-pointer\" onClick={() => {\n                    setDepositMin(35);\n                    setDepositMax(150);\n                  }}>\n                    {(() => {\n                      // 전체 범위인지 확인\n                      if (depositMin === 35 && depositMax === 150) {\n                        return \"전체\";\n                      }\n                      \n                      // 범위 표시\n                      return `${Math.round(depositMin)}만 ~ ${Math.round(depositMax)}만`;\n                    })()}\n                  </span>\n                </div>\n\n                {/* 임대료 Range Slider */}\n                <RangeSlider\n                  min={35}\n                  max={150}\n                  minValue={depositMin}\n                  maxValue={depositMax}\n                  onMinChange={setDepositMin}\n                  onMaxChange={setDepositMax}\n                  onDragStart={(type) => setDepositDragging(type)}\n                  onDragEnd={() => setDepositDragging(null)}\n                  isDragging={depositDragging}\n                  minGap={(48 / 308) * (150 - 35)} // 약 18.0\n                  formatValue={(value) => {\n                    const suffix = depositDragging === 'min' ? '부터' : depositDragging === 'max' ? '까지' : '';\n                    return `${Math.round(value)}만${suffix}`;\n                  }}\n                  showDragBubble={true}\n                  handleImage=\"/assets/wh-icon-12_1755367755885.png\"\n                />\n\n                {/* 임대료 Labels */}\n                <div className=\"flex justify-between text-xs text-[#777] [font-family:'SUITE-Medium',Helvetica] font-medium px-1\" style={{ marginTop: '-4px' }}>\n                  <span>최소</span>\n                  <span>150만</span>\n                  <span>500만</span>\n                  <span>최대</span>\n                </div>\n              </div>\n\n              {/* 관리비 포함하여 찾기 토글 */}\n              <div className=\"flex justify-between items-center mb-6\">\n                <span className=\"[font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-base text-[#111]\">관리비 포함하여 찾기</span>\n                <button\n                  onClick={() => setIncludeManagementFee(!includeManagementFee)}\n                  className={`relative inline-flex w-12 h-6 rounded-full transition-colors ${\n                    includeManagementFee ? 'bg-[#00D6F8]' : 'bg-gray-300'\n                  }`}\n                >\n                  <span\n                    className={`inline-block w-5 h-5 bg-white rounded-full transition-transform ${\n                      includeManagementFee ? 'translate-x-6' : 'translate-x-0.5'\n                    }`}\n                    style={{ marginTop: '2px' }}\n                  />\n                </button>\n              </div>\n\n              {/* Bottom Buttons */}\n              <div className=\"flex gap-3\" style={{ marginTop: '24px' }}>\n                <button\n                  onClick={() => {\n                    setBudgetMin(0);\n                    setBudgetMax(25000);\n                    setDepositMin(35);\n                    setDepositMax(150);\n                    setIncludeManagementFee(true);\n                  }}\n                  className=\"bg-transparent text-[#444] [font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-sm hover:bg-gray-50 rounded-lg transition-colors\" style={{ flex: '0.9', paddingLeft: '19px', paddingRight: '19px', paddingTop: '11px', paddingBottom: '11px' }}\n                >\n                  초기화\n                </button>\n                <button\n                  onClick={() => {\n                    // Apply budget filter logic here\n                    setShowBudgetSection(false);\n                  }}\n                  className=\"bg-[#00E6FF] text-white [font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-sm hover:bg-[#00D6F8] rounded-lg transition-colors\" style={{ flex: '1.1', paddingLeft: '19px', paddingRight: '19px', paddingTop: '11px', paddingBottom: '11px' }}\n                >\n                  적용하기\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* 옵션 섹션 */}\n        {showOptionSection && (\n          <div className=\"absolute w-[360px] bg-white border-b border-gray-200 shadow-lg\" style={{ top: '122px', left: '0px', zIndex: 25 }}>\n            <div className=\"p-4\">\n              {/* Header */}\n              <div className=\"flex justify-between items-center mb-4\">\n                <h3 className=\"[font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-base text-[#111]\">거래유형</h3>\n              </div>\n\n              {/* 거래유형 버튼들 */}\n              <div className=\"flex gap-3 mb-6\">\n                <button\n                  onClick={() => setSelectedCategory('전세')}\n                  className={`py-3 rounded-lg [font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-sm transition-colors ${\n                    selectedCategory === '전세' \n                      ? 'bg-[#00D6F8] text-white' \n                      : 'bg-gray-100 text-[#666] hover:bg-gray-200'\n                  }`}\n                  style={{ width: '104px' }}\n                >\n                  전세\n                </button>\n                <button\n                  onClick={() => setSelectedCategory('임대(월세)')}\n                  className={`py-3 rounded-lg [font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-sm transition-colors ${\n                    selectedCategory === '임대(월세)' \n                      ? 'bg-[#00D6F8] text-white' \n                      : 'bg-gray-100 text-[#666] hover:bg-gray-200'\n                  }`}\n                  style={{ width: '104px' }}\n                >\n                  임대(월세)\n                </button>\n                <button\n                  onClick={() => setSelectedCategory('매매')}\n                  className={`py-3 rounded-lg [font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-sm transition-colors ${\n                    selectedCategory === '매매' \n                      ? 'bg-[#00D6F8] text-white' \n                      : 'bg-gray-100 text-[#666] hover:bg-gray-200'\n                  }`}\n                  style={{ width: '104px' }}\n                >\n                  매매\n                </button>\n              </div>\n\n              {/* 층 섹션 */}\n              <div className=\"mb-6\">\n                <h4 className=\"[font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-base text-[#111] mb-3\">층</h4>\n                <div className=\"flex gap-3\">\n                  <button\n                    onClick={() => setSelectedSubCategory('전체')}\n                    className={`py-3 rounded-lg [font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-sm transition-colors ${\n                      selectedSubCategory === '전체' \n                        ? 'bg-[#00D6F8] text-white' \n                        : 'bg-gray-100 text-[#666] hover:bg-gray-200'\n                    }`}\n                    style={{ width: '159px' }}\n                  >\n                    전체\n                  </button>\n                  <button\n                    onClick={() => setSelectedSubCategory('1층만 보기')}\n                    className={`py-3 rounded-lg [font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-sm transition-colors ${\n                      selectedSubCategory === '1층만 보기' \n                        ? 'bg-[#00D6F8] text-white' \n                        : 'bg-gray-100 text-[#666] hover:bg-gray-200'\n                    }`}\n                    style={{ width: '159px' }}\n                  >\n                    1층만 보기\n                  </button>\n                </div>\n              </div>\n\n              {/* Bottom Buttons */}\n              <div className=\"flex gap-3\" style={{ marginTop: '24px' }}>\n                <button\n                  onClick={() => {\n                    setSelectedCategory('전체');\n                    setSelectedSubCategory('전체');\n                  }}\n                  className=\"bg-transparent text-[#444] [font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-sm hover:bg-gray-50 rounded-lg transition-colors\" style={{ flex: '0.9', paddingLeft: '19px', paddingRight: '19px', paddingTop: '11px', paddingBottom: '11px' }}\n                >\n                  초기화\n                </button>\n                <button\n                  onClick={() => {\n                    // Apply option filter logic here\n                    setShowOptionSection(false);\n                  }}\n                  className=\"bg-[#00E6FF] text-white [font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-sm hover:bg-[#00D6F8] rounded-lg transition-colors\" style={{ flex: '1.1', paddingLeft: '19px', paddingRight: '19px', paddingTop: '11px', paddingBottom: '11px' }}\n                >\n                  적용하기\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Success Modal */}\n        {showModal && (\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n            <div className=\"bg-white rounded-lg p-6 w-[280px]\">\n              <div className=\"text-center\">\n                <div className=\"mb-4\">\n                  <p className=\"[font-family:'SUITE-Medium',Helvetica] font-medium text-sm text-[#666]\">\n                    \"{inputValue}\"으로<br />\n                    입지를 추천해드릴까요?\n                  </p>\n                </div>\n                <div className=\"flex gap-3\">\n                  <button\n                    onClick={() => setShowModal(false)}\n                    className=\"flex-1 bg-gray-100 text-[#444] [font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-sm py-3 rounded-lg hover:bg-gray-200 transition-colors\"\n                  >\n                    아니오\n                  </button>\n                  <button\n                    onClick={() => {\n                      setShowModal(false);\n                      setLocation(`/business-analysis?business=${encodeURIComponent(inputValue)}`);\n                    }}\n                    className=\"flex-1 bg-[#00E6FF] text-white [font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-sm py-3 rounded-lg hover:bg-[#00D6F8] transition-colors\"\n                  >\n                    예\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Invalid Modal */}\n        {showInvalidModal && (\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n            <div className=\"bg-white rounded-lg p-6 w-[280px]\">\n              <div className=\"text-center\">\n                <div className=\"mb-4\">\n                  <div className=\"w-16 h-16 bg-red-500 rounded-full flex items-center justify-center mx-auto mb-3\">\n                    <span className=\"text-white text-2xl\">!</span>\n                  </div>\n                  <h3 className=\"[font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-lg text-[#111] mb-2\">\n                    검색 결과 없음\n                  </h3>\n                  <p className=\"[font-family:'SUITE-Medium',Helvetica] font-medium text-sm text-[#666]\">\n                    '{inputValue}' 관련 매장을<br />\n                    찾을 수 없습니다.\n                  </p>\n                </div>\n                <button\n                  onClick={() => setShowInvalidModal(false)}\n                  className=\"w-full bg-[#00E6FF] text-white [font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-sm py-3 rounded-lg hover:bg-[#00D6F8] transition-colors\"\n                >\n                  확인\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Invalid Business Modal */}\n        {showInvalidBusinessModal && (\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n            <div className=\"bg-white rounded-lg p-6 w-[280px]\">\n              <div className=\"text-center\">\n                <div className=\"mb-4\">\n                  <div className=\"w-16 h-16 bg-red-500 rounded-full flex items-center justify-center mx-auto mb-3\">\n                    <span className=\"text-white text-2xl\">!</span>\n                  </div>\n                  <h3 className=\"[font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-lg text-[#111] mb-2\">\n                    사업화 불가능 업종입니다\n                  </h3>\n                  <p className=\"[font-family:'SUITE-Medium',Helvetica] font-medium text-sm text-[#666]\">\n                    다른 업종을 입력해주세요.\n                  </p>\n                </div>\n                <button\n                  onClick={() => setShowInvalidBusinessModal(false)}\n                  className=\"w-full bg-[#00E6FF] text-white [font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-sm py-3 rounded-lg hover:bg-[#00D6F8] transition-colors\"\n                >\n                  확인\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Footer Navigation */}\n        <nav className=\"absolute w-[362px] h-[55px] top-[585px] -left-px bg-gray-color6-f6f7f9 border-[1.2px] border-solid border-[#dadada]\">\n          <div className=\"inline-flex items-center gap-[38px] relative top-3 left-[34px]\">\n            {bottomNavIcons.map((icon) => (\n              <Button\n                key={icon.id}\n                variant=\"ghost\"\n                size=\"icon\"\n                className={`relative w-7 h-7 p-0 hover:bg-transparent ${icon.disabled ? 'opacity-30 cursor-not-allowed' : ''}`}\n                onClick={() => !icon.disabled && setLocation(icon.route)}\n                disabled={icon.disabled}\n              >\n                <img\n                  className=\"w-7 h-7 object-cover\"\n                  alt={icon.alt}\n                  src={icon.active ? icon.src2 : icon.src1}\n                />\n              </Button>\n            ))}\n          </div>\n        </nav>\n      </div>\n    </div>\n  );\n};","size_bytes":42597},"client/src/components/ui/area-selector.tsx":{"content":"import React from \"react\";\nimport { RangeSlider } from \"./range-slider\";\n\ninterface AreaSelectorProps {\n  areaMin: number;\n  areaMax: number;\n  areaUnit: 'sqm' | 'pyeong';\n  isDragging: 'min' | 'max' | null;\n  onAreaMinChange: (value: number) => void;\n  onAreaMaxChange: (value: number) => void;\n  onAreaUnitChange: () => void;\n  onDragStart: (type: 'min' | 'max') => void;\n  onDragEnd: () => void;\n  onReset: () => void;\n  onApply: () => void;\n  onClose: () => void;\n}\n\nexport const AreaSelector: React.FC<AreaSelectorProps> = ({\n  areaMin,\n  areaMax,\n  areaUnit,\n  isDragging,\n  onAreaMinChange,\n  onAreaMaxChange,\n  onAreaUnitChange,\n  onDragStart,\n  onDragEnd,\n  onReset,\n  onApply,\n  onClose,\n}) => {\n  const convertToDisplay = (value: number, unit: 'sqm' | 'pyeong') => {\n    if (unit === 'sqm') {\n      return `${value}㎡`;\n    } else {\n      return `${Math.round((value / 3.305785) * 10) / 10}평`;\n    }\n  };\n\n  const getDisplayRange = () => {\n    // 전체 범위인지 확인\n    if (areaMin === 33 && areaMax === 330) {\n      return \"전체\";\n    }\n    \n    // 단위에 따른 변환\n    if (areaUnit === 'sqm') {\n      return `${areaMin}㎡ ~ ${areaMax}㎡`;\n    } else {\n      const minPyeong = Math.round((areaMin / 3.305785) * 10) / 10;\n      const maxPyeong = Math.round((areaMax / 3.305785) * 10) / 10;\n      return `${minPyeong}평 ~ ${maxPyeong}평`;\n    }\n  };\n\n  return (\n    <div className=\"p-4\">\n      {/* Header */}\n      <div className=\"flex justify-between items-center mb-3\">\n        <div className=\"flex items-center\">\n          <h3 className=\"[font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-base text-[#111]\">\n            면적(적용면적)\n          </h3>\n          <button \n            onClick={onAreaUnitChange}\n            className=\"ml-1 hover:opacity-80 transition-opacity flex items-center gap-1\"\n            style={{ marginLeft: '6px' }}\n          >\n            <img \n              src=\"/assets/wh-icon-13_1755370522921.png\" \n              alt=\"conversion icon\" \n              width=\"18\" \n              height=\"18\" \n            />\n            <span className=\"[font-family:'SUITE-Medium',Helvetica] font-medium text-sm underline\" style={{ color: '#8E8E8E' }}>\n              평 변환\n            </span>\n          </button>\n        </div>\n        <span \n          className=\"text-sm text-[#00E6FF] [font-family:'SUITE-ExtraBold',Helvetica] font-extrabold cursor-pointer\" \n          onClick={() => {\n            onAreaMinChange(33);\n            onAreaMaxChange(330);\n          }}\n        >\n          {getDisplayRange()}\n        </span>\n      </div>\n\n      {/* Range Slider */}\n      <RangeSlider\n        min={33}\n        max={330}\n        minValue={areaMin}\n        maxValue={areaMax}\n        onMinChange={onAreaMinChange}\n        onMaxChange={onAreaMaxChange}\n        onDragStart={onDragStart}\n        onDragEnd={onDragEnd}\n        isDragging={isDragging}\n        minGap={36}\n        formatValue={(value) => \n          areaUnit === 'sqm' \n            ? `${value}㎡${isDragging === 'min' ? '부터' : isDragging === 'max' ? '까지' : ''}` \n            : `${Math.round((value/3.305785)*10)/10}평${isDragging === 'min' ? '부터' : isDragging === 'max' ? '까지' : ''}`\n        }\n        showDragBubble={true}\n        handleImage=\"/assets/wh-icon-12_1755367755885.png\"\n      />\n\n      {/* Tick Labels */}\n      <div \n        className=\"flex justify-between text-xs text-[#777] [font-family:'SUITE-Medium',Helvetica] font-medium px-1\" \n        style={{ marginTop: '-4px' }}\n      >\n        <span>최소</span>\n        <span>{areaUnit === 'sqm' ? '66㎡' : '20평'}</span>\n        <span>{areaUnit === 'sqm' ? '165㎡' : '50평'}</span>\n        <span>최대</span>\n      </div>\n\n      {/* Bottom Buttons */}\n      <div className=\"flex gap-3\" style={{ marginTop: '36px' }}>\n        <button\n          onClick={onReset}\n          className=\"bg-transparent text-[#444] [font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-sm hover:bg-gray-50 rounded-lg transition-colors\" \n          style={{ \n            flex: '0.9', \n            paddingLeft: '19px', \n            paddingRight: '19px', \n            paddingTop: '11px', \n            paddingBottom: '11px' \n          }}\n        >\n          초기화\n        </button>\n        <button\n          onClick={onApply}\n          className=\"bg-[#00E6FF] text-white [font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-sm hover:bg-[#00D6F8] rounded-lg transition-colors\" \n          style={{ \n            flex: '1.1', \n            paddingLeft: '19px', \n            paddingRight: '19px', \n            paddingTop: '11px', \n            paddingBottom: '11px' \n          }}\n        >\n          적용하기\n        </button>\n      </div>\n    </div>\n  );\n};","size_bytes":4759},"client/src/components/ui/card-carousel.tsx":{"content":"import React, { useState, useEffect, useCallback } from \"react\";\nimport { useLocation } from \"wouter\";\nimport heartIcon from \"@assets/wh-icon-2_1755991104492.png\";\n\ninterface CardData {\n  id: string;\n  title: string;\n  category: string;\n  categoryColor: string;\n  image: string;\n  description: string;\n  stats: { success: string; enthusiasm: string };\n}\n\nimport whCardB1 from \"@assets/wh-card-b-1_1756096644462.png\";\nimport whCardB2 from \"@assets/wh-card-b-2_1756096644463.png\";\nimport whCardB3 from \"@assets/wh-card-b-3_1756096644463.png\";\nimport whCardC1 from \"@assets/wh-card-c-1_1756096644463.png\";\nimport whCardC2 from \"@assets/wh-card-c-2_1756096644463.png\";\nimport whCardC3 from \"@assets/wh-card-c-3_1756096644463.png\";\nimport whCardH1 from \"@assets/wh-card-h-1_1756096644463.png\";\nimport whCardH2 from \"@assets/wh-card-h-2_1756096644463.png\";\nimport whCardH3 from \"@assets/wh-card-h-3_1756096644463.png\";\nimport whCardP1 from \"@assets/wh-card-p-1_1756096644463.png\";\nimport whCardP2 from \"@assets/wh-card-p-2_1756096644464.png\";\nimport whCardP3 from \"@assets/wh-card-p-3_1756096644464.png\";\n\nconst cardData: CardData[] = [\n  {\n    id: \"wh-card-b-1\",\n    title: \"헤나카페\",\n    category: \"뷰티/웰스\",\n    categoryColor: \"#FF00AE\",\n    image: whCardB1,\n    description: \"헤나, 타투스티커 체험\",\n    stats: { success: \"42%\", enthusiasm: \"23%\" }\n  },\n  {\n    id: \"wh-card-b-2\",\n    title: \"복싱클럽\",\n    category: \"뷰티/웰스\",\n    categoryColor: \"#FF00AE\",\n    image: whCardB2,\n    description: \"복싱 클럽\",\n    stats: { success: \"43%\", enthusiasm: \"19%\" }\n  },\n  {\n    id: \"wh-card-c-3\",\n    title: \"24시간 에너지음료 자판기\",\n    category: \"카페/음식\",\n    categoryColor: \"#FA5705\",\n    image: whCardC3,\n    description: \"소울 관리 체크\",\n    stats: { success: \"41%\", enthusiasm: \"21%\" }\n  },\n  {\n    id: \"wh-card-c-1\",\n    title: \"레코드카페\",\n    category: \"카페/음식\",\n    categoryColor: \"#FA5705\",\n    image: whCardC1,\n    description: \"영화 틀어주는 감성 카페\",\n    stats: { success: \"40%\", enthusiasm: \"20%\" }\n  },\n  {\n    id: \"wh-card-c-2\",\n    title: \"캠핑 바\",\n    category: \"카페/음식\",\n    categoryColor: \"#FA5705\",\n    image: whCardC2,\n    description: \"캠핑 컨셉트 바 및 주류매장\",\n    stats: { success: \"41%\", enthusiasm: \"21%\" }\n  },\n  {\n    id: \"wh-card-b-3\",\n    title: \"소소한 네일아트샵\",\n    category: \"뷰티/웰스\",\n    categoryColor: \"#FF00AE\",\n    image: whCardB3,\n    description: \"셀링/정가 전략 핵심\",\n    stats: { success: \"37%\", enthusiasm: \"24%\" }\n  },\n  {\n    id: \"wh-card-h-1\",\n    title: \"실내보드\",\n    category: \"취미/문화\",\n    categoryColor: \"#9D00FF\",\n    image: whCardH1,\n    description: \"실내보드\",\n    stats: { success: \"38%\", enthusiasm: \"22%\" }\n  },\n  {\n    id: \"wh-card-h-2\",\n    title: \"VR FPS\",\n    category: \"취미/문화\",\n    categoryColor: \"#9D00FF\",\n    image: whCardH2,\n    description: \"VR FPS 아레나\",\n    stats: { success: \"40%\", enthusiasm: \"20%\" }\n  },\n  {\n    id: \"wh-card-h-3\",\n    title: \"수제 캔들 공방\",\n    category: \"취미/문화\",\n    categoryColor: \"#9D00FF\",\n    image: whCardH3,\n    description: \"안전·향 인증 관리 중요\",\n    stats: { success: \"40%\", enthusiasm: \"20%\" }\n  },\n  {\n    id: \"wh-card-p-1\",\n    title: \"24시 펫용품\",\n    category: \"키즈/반려\",\n    categoryColor: \"#CCFF00\",\n    image: whCardP1,\n    description: \"24시 펫용품\",\n    stats: { success: \"39%\", enthusiasm: \"18%\" }\n  },\n  {\n    id: \"wh-card-p-2\",\n    title: \"펫 셀프 목욕\",\n    category: \"키즈/반려\",\n    categoryColor: \"#CCFF00\",\n    image: whCardP2,\n    description: \"펫 셀프 목욕\",\n    stats: { success: \"43%\", enthusiasm: \"19%\" }\n  },\n  {\n    id: \"wh-card-p-3\",\n    title: \"레고 키즈 카페\",\n    category: \"키즈/반려\",\n    categoryColor: \"#CCFF00\",\n    image: whCardP3,\n    description: \"예약·회전율이 관건\",\n    stats: { success: \"43%\", enthusiasm: \"19%\" }\n  }\n];\n\ninterface CardCarouselProps {\n  autoSlideInterval?: number; // 자동 슬라이드 간격 (ms)\n  enableAutoSlide?: boolean; // 자동 슬라이드 활성화\n  animationDuration?: number; // 애니메이션 시간 (ms)\n  categoryFilter?: string; // 카테고리 필터 (c, h, b, p)\n}\n\nexport const CardCarousel: React.FC<CardCarouselProps> = ({\n  autoSlideInterval = 2000,\n  enableAutoSlide = true,\n  animationDuration = 350, // 더 빠른 애니메이션\n  categoryFilter\n}) => {\n  const [, setLocation] = useLocation();\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [isAnimating, setIsAnimating] = useState(false);\n  const [nextIndex, setNextIndex] = useState(0);\n\n  // 카테고리 필터링된 카드 데이터\n  const filteredCards = categoryFilter \n    ? cardData.filter(card => card.id.includes(`-${categoryFilter}-`))\n    : cardData;\n\n  // 카테고리 필터가 변경되면 인덱스 초기화\n  useEffect(() => {\n    setCurrentIndex(0);\n    setNextIndex(0);\n    setIsAnimating(false);\n  }, [categoryFilter]);\n\n  const nextSlide = useCallback(() => {\n    if (isAnimating || filteredCards.length === 0) return;\n    \n    const nextIdx = (currentIndex + 1) % filteredCards.length;\n    setNextIndex(nextIdx);\n    setIsAnimating(true);\n    \n    // 애니메이션 완료 후 인덱스 업데이트\n    setTimeout(() => {\n      setCurrentIndex(nextIdx);\n      setIsAnimating(false);\n    }, animationDuration);\n  }, [currentIndex, isAnimating, animationDuration, filteredCards.length]);\n\n  // 자동 슬라이드\n  useEffect(() => {\n    if (!enableAutoSlide) return;\n    \n    const interval = setInterval(nextSlide, autoSlideInterval);\n    return () => clearInterval(interval);\n  }, [nextSlide, autoSlideInterval, enableAutoSlide]);\n\n  // 빈 필터 결과 체크\n  if (filteredCards.length === 0) {\n    return (\n      <div className=\"relative w-full h-full flex items-center justify-center\">\n        <div className=\"text-center text-gray-500\">\n          <p className=\"[font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-[16px]\">\n            해당 카테고리의 카드가 없습니다\n          </p>\n        </div>\n      </div>\n    );\n  }\n\n  const currentCard = filteredCards[currentIndex];\n  const nextCard = filteredCards[nextIndex];\n  const prevCard = filteredCards[(currentIndex - 1 + filteredCards.length) % filteredCards.length];\n  const nextNextCard = filteredCards[(currentIndex + 1) % filteredCards.length];\n\n  const handleCardClick = (cardId: string) => {\n    setLocation(`/card/${cardId}`);\n  };\n\n  const goToPrevious = () => {\n    if (isAnimating || filteredCards.length === 0) return;\n    const prevIdx = (currentIndex - 1 + filteredCards.length) % filteredCards.length;\n    setNextIndex(prevIdx);\n    setIsAnimating(true);\n    setTimeout(() => {\n      setCurrentIndex(prevIdx);\n      setIsAnimating(false);\n    }, animationDuration);\n  };\n\n  const goToNext = () => {\n    nextSlide();\n  };\n\n  return (\n    <div className=\"relative w-full h-full\" style={{ perspective: '1200px' }}>\n      {/* 3D Card Container */}\n      <div \n        className=\"absolute top-[180px] left-1/2 transform -translate-x-1/2 w-[400px] h-[240px]\"\n        style={{ transformStyle: 'preserve-3d' }}\n      >\n        {/* Left Card (Previous) - 부드러운 페이드 효과 */}\n        <div \n          className=\"absolute cursor-pointer transition-all duration-700 ease-in-out hover:scale-105\"\n          style={{\n            left: '0px',\n            top: '20px',\n            width: '100px',\n            height: '125px',\n            transform: `translateZ(-50px) rotateY(25deg) scale(1)`,\n            opacity: isAnimating ? 0.2 : 0.6,\n            zIndex: 1,\n            filter: `blur(${isAnimating ? 2.5 : 1.5}px) brightness(${isAnimating ? 0.7 : 1})`\n          }}\n          onClick={() => goToPrevious()}\n        >\n          <img \n            src={prevCard.image}\n            alt={prevCard.title}\n            className=\"w-full h-full object-contain rounded-lg shadow-lg\"\n          />\n        </div>\n\n        {/* Center Card (Current) - Main Focus */}\n        <div \n          className=\"absolute cursor-pointer transition-all duration-700 ease-in-out hover:scale-105\"\n          style={{\n            left: '50%',\n            top: '0px',\n            width: '200px',\n            height: '160px',\n            transform: `translateX(-50%) translateZ(50px) scale(${isAnimating ? 1.05 : 1.1})`,\n            zIndex: 10,\n            filter: `drop-shadow(0 10px 20px rgba(0, 0, 0, 0.3)) brightness(${isAnimating ? 0.8 : 1})`,\n            opacity: isAnimating ? 0.6 : 1\n          }}\n          onClick={() => handleCardClick(currentCard.id)}\n        >\n          <img \n            src={currentCard.image}\n            alt={currentCard.title}\n            className=\"w-full h-full object-contain rounded-xl transition-transform duration-700 ease-in-out\"\n            style={{\n              transform: isAnimating ? 'scale(0.98)' : 'scale(1)'\n            }}\n          />\n          {/* 가운데 카드 강조 효과 제거 */}\n        </div>\n\n        {/* Right Card (Next) - 부드러운 페이드 효과 */}\n        <div \n          className=\"absolute cursor-pointer transition-all duration-700 ease-in-out hover:scale-105\"\n          style={{\n            right: '0px',\n            top: '20px',\n            width: '100px',\n            height: '125px',\n            transform: `translateZ(-50px) rotateY(-25deg) scale(1)`,\n            opacity: isAnimating ? 0.2 : 0.6,\n            zIndex: 1,\n            filter: `blur(${isAnimating ? 2.5 : 1.5}px) brightness(${isAnimating ? 0.7 : 1})`\n          }}\n          onClick={() => goToNext()}\n        >\n          <img \n            src={nextNextCard.image}\n            alt={nextNextCard.title}\n            className=\"w-full h-full object-contain rounded-lg shadow-lg\"\n          />\n        </div>\n\n        {/* 전환 오버레이 효과 제거 */}\n      </div>\n\n      {/* Card Title - 3D 레이아웃에 맞춰 위치 조정 */}\n      <div className=\"absolute top-[360px] left-1/2 transform -translate-x-1/2 text-center\">\n        <div className=\"flex items-center justify-center gap-2\">\n          {(currentCard.title === \"레코드카페\" || currentCard.title === \"펫 셀프 목욕\" || currentCard.title === \"복싱클럽\" || currentCard.title === \"VR FPS\") && (\n            <img \n              src={heartIcon} \n              alt=\"heart icon\" \n              className=\"w-4 h-4\"\n              style={{\n                opacity: isAnimating ? 0.5 : 1,\n                transitionDuration: `${animationDuration / 2}ms`\n              }}\n            />\n          )}\n          <span \n            className=\"text-black [font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-[16px] transition-opacity\"\n            style={{\n              opacity: isAnimating ? 0.5 : 1,\n              transitionDuration: `${animationDuration / 2}ms`,\n              textShadow: '0 2px 4px rgba(0,0,0,0.1)'\n            }}\n          >\n            {currentCard.title}\n          </span>\n        </div>\n      </div>\n\n      {/* Global CSS for 3D carousel animation */}\n      <style dangerouslySetInnerHTML={{\n        __html: `\n          @keyframes slideInFromRight {\n            0% {\n              transform: translateX(100%);\n              opacity: 0;\n            }\n            100% {\n              transform: translateX(0);\n              opacity: 1;\n            }\n          }\n          \n          @keyframes slideOutToLeft {\n            0% {\n              transform: translateX(0);\n              opacity: 1;\n            }\n            100% {\n              transform: translateX(-100%);\n              opacity: 0;\n            }\n          }\n\n          @keyframes pulseEffect {\n            0% {\n              opacity: 0;\n              transform: scale(0.8);\n            }\n            50% {\n              opacity: 1;\n              transform: scale(1.05);\n            }\n            100% {\n              opacity: 0;\n              transform: scale(1.2);\n            }\n          }\n\n          @keyframes fadeInOut {\n            0% {\n              opacity: 0;\n            }\n            50% {\n              opacity: 0.8;\n            }\n            100% {\n              opacity: 0;\n            }\n          }\n\n          @keyframes glowPulse {\n            0%, 100% {\n              box-shadow: 0 0 20px rgba(0, 214, 248, 0.3);\n            }\n            50% {\n              box-shadow: 0 0 30px rgba(0, 214, 248, 0.6), 0 0 40px rgba(204, 255, 0, 0.3);\n            }\n          }\n        `\n      }} />\n    </div>\n  );\n};","size_bytes":12509},"client/src/components/ui/range-slider.tsx":{"content":"import React, { useRef, useCallback, useState, useEffect } from \"react\";\n\ninterface RangeSliderProps {\n  min: number;\n  max: number;\n  minValue: number;\n  maxValue: number;\n  onMinChange: (value: number) => void;\n  onMaxChange: (value: number) => void;\n  onDragStart?: (type: 'min' | 'max') => void;\n  onDragEnd?: () => void;\n  isDragging?: 'min' | 'max' | null;\n  minGap?: number; // 최소값과 최대값 사이 최소 간격\n  formatValue?: (value: number) => string;\n  showDragBubble?: boolean;\n  className?: string;\n  trackWidth?: number; // 트랙 너비 (기본값: 308px)\n  handleImage?: string; // 핸들 이미지 경로\n}\n\nexport const RangeSlider: React.FC<RangeSliderProps> = ({\n  min,\n  max,\n  minValue,\n  maxValue,\n  onMinChange,\n  onMaxChange,\n  onDragStart,\n  onDragEnd,\n  isDragging,\n  minGap = 0,\n  formatValue = (value) => value.toString(),\n  showDragBubble = true,\n  className = \"\",\n  trackWidth = 308,\n  handleImage = \"/assets/wh-icon-12_1755367755885.png\"\n}) => {\n  const sliderRef = useRef<HTMLDivElement>(null);\n  const [isMinDragging, setIsMinDragging] = useState(false);\n  const [isMaxDragging, setIsMaxDragging] = useState(false);\n  \n  const range = max - min;\n  const minPercent = ((minValue - min) / range) * 100;\n  const maxPercent = ((maxValue - min) / range) * 100;\n\n  // 픽셀을 값으로 변환\n  const pixelToValue = useCallback((pixel: number) => {\n    const percent = (pixel / trackWidth) * 100;\n    const value = min + (range * percent) / 100;\n    return Math.round(Math.max(min, Math.min(max, value)));\n  }, [min, max, range, trackWidth]);\n\n  // 클릭/드래그 핸들링\n  const handleMouseDown = useCallback((e: React.MouseEvent, type: 'min' | 'max') => {\n    e.preventDefault();\n    e.stopPropagation();\n    \n    if (type === 'min') {\n      setIsMinDragging(true);\n    } else {\n      setIsMaxDragging(true);\n    }\n    \n    onDragStart?.(type);\n\n    const handleMouseMove = (moveEvent: MouseEvent) => {\n      if (!sliderRef.current) return;\n      \n      const rect = sliderRef.current.getBoundingClientRect();\n      const offsetX = moveEvent.clientX - rect.left;\n      const newValue = pixelToValue(offsetX);\n      \n      if (type === 'min') {\n        const constrainedValue = Math.min(newValue, maxValue - minGap);\n        onMinChange(Math.max(min, constrainedValue));\n      } else {\n        const constrainedValue = Math.max(newValue, minValue + minGap);\n        onMaxChange(Math.min(max, constrainedValue));\n      }\n    };\n\n    const handleMouseUp = () => {\n      setIsMinDragging(false);\n      setIsMaxDragging(false);\n      onDragEnd?.();\n      document.removeEventListener('mousemove', handleMouseMove);\n      document.removeEventListener('mouseup', handleMouseUp);\n    };\n\n    document.addEventListener('mousemove', handleMouseMove);\n    document.addEventListener('mouseup', handleMouseUp);\n  }, [minValue, maxValue, min, max, minGap, pixelToValue, onMinChange, onMaxChange, onDragStart, onDragEnd]);\n\n  // 터치 이벤트 핸들링\n  const handleTouchStart = useCallback((e: React.TouchEvent, type: 'min' | 'max') => {\n    e.preventDefault();\n    e.stopPropagation();\n    \n    if (type === 'min') {\n      setIsMinDragging(true);\n    } else {\n      setIsMaxDragging(true);\n    }\n    \n    onDragStart?.(type);\n\n    const handleTouchMove = (moveEvent: TouchEvent) => {\n      if (!sliderRef.current) return;\n      \n      const rect = sliderRef.current.getBoundingClientRect();\n      const offsetX = moveEvent.touches[0].clientX - rect.left;\n      const newValue = pixelToValue(offsetX);\n      \n      if (type === 'min') {\n        const constrainedValue = Math.min(newValue, maxValue - minGap);\n        onMinChange(Math.max(min, constrainedValue));\n      } else {\n        const constrainedValue = Math.max(newValue, minValue + minGap);\n        onMaxChange(Math.min(max, constrainedValue));\n      }\n    };\n\n    const handleTouchEnd = () => {\n      setIsMinDragging(false);\n      setIsMaxDragging(false);\n      onDragEnd?.();\n      document.removeEventListener('touchmove', handleTouchMove);\n      document.removeEventListener('touchend', handleTouchEnd);\n    };\n\n    document.addEventListener('touchmove', handleTouchMove);\n    document.addEventListener('touchend', handleTouchEnd);\n  }, [minValue, maxValue, min, max, minGap, pixelToValue, onMinChange, onMaxChange, onDragStart, onDragEnd]);\n\n  return (\n    <div className={`range-slider mb-4 ${className}`} style={{ marginTop: '24px', position: 'relative' }}>\n      {/* Track */}\n      <div \n        ref={sliderRef}\n        className=\"track absolute h-1.5 bg-[#DDE3E9] rounded-full cursor-pointer\" \n        style={{ \n          top: 'calc(50% + 4px)', \n          transform: 'translateY(-50%)', \n          left: '50%', \n          marginLeft: `-${trackWidth/2}px`, \n          width: `${trackWidth}px` \n        }}\n        onClick={(e) => {\n          // 트랙 클릭으로 가장 가까운 핸들 이동\n          const rect = sliderRef.current!.getBoundingClientRect();\n          const offsetX = e.clientX - rect.left;\n          const clickValue = pixelToValue(offsetX);\n          \n          const minDistance = Math.abs(clickValue - minValue);\n          const maxDistance = Math.abs(clickValue - maxValue);\n          \n          if (minDistance < maxDistance) {\n            const constrainedValue = Math.min(clickValue, maxValue - minGap);\n            onMinChange(Math.max(min, constrainedValue));\n          } else {\n            const constrainedValue = Math.max(clickValue, minValue + minGap);\n            onMaxChange(Math.min(max, constrainedValue));\n          }\n        }}\n      />\n      \n      {/* Fill */}\n      <div \n        className=\"fill absolute h-1.5 bg-[#CCFF00] rounded-full pointer-events-none\"\n        style={{\n          top: 'calc(50% + 4px)',\n          transform: 'translateY(-50%)',\n          left: `calc(50% - ${trackWidth/2}px + ${(minPercent / 100) * trackWidth}px)`,\n          width: `${((maxPercent - minPercent) / 100) * trackWidth}px`\n        }}\n      />\n\n      {/* Min Handle - 이미지 기반 */}\n      <div \n        className=\"absolute w-8 h-8 transform -translate-x-1/2 -translate-y-1/2 cursor-grab active:cursor-grabbing select-none\"\n        style={{ \n          top: 'calc(50% + 4px)',\n          left: `calc(50% - ${trackWidth/2}px + ${(minPercent / 100) * trackWidth}px)`,\n          zIndex: isMinDragging ? 30 : 20\n        }}\n        onMouseDown={(e) => handleMouseDown(e, 'min')}\n        onTouchStart={(e) => handleTouchStart(e, 'min')}\n      >\n        <img \n          src={handleImage} \n          alt=\"min slider handle\" \n          className=\"w-full h-full pointer-events-none\" \n          draggable={false}\n        />\n      </div>\n      \n      {/* Max Handle - 이미지 기반 */}\n      <div \n        className=\"absolute w-8 h-8 transform -translate-x-1/2 -translate-y-1/2 cursor-grab active:cursor-grabbing select-none\"\n        style={{ \n          top: 'calc(50% + 4px)',\n          left: `calc(50% - ${trackWidth/2}px + ${(maxPercent / 100) * trackWidth}px)`,\n          zIndex: isMaxDragging ? 30 : 21\n        }}\n        onMouseDown={(e) => handleMouseDown(e, 'max')}\n        onTouchStart={(e) => handleTouchStart(e, 'max')}\n      >\n        <img \n          src={handleImage} \n          alt=\"max slider handle\" \n          className=\"w-full h-full pointer-events-none\" \n          draggable={false}\n        />\n      </div>\n\n      {/* Drag Bubbles */}\n      {showDragBubble && (isMinDragging || isDragging === 'min') && (\n        <div \n          className=\"absolute bg-[#111] text-white text-xs px-2 py-1 rounded transform -translate-x-1/2 -translate-y-10 [font-family:'SUITE-ExtraBold',Helvetica] font-extrabold pointer-events-none z-40\"\n          style={{ left: `calc(50% - ${trackWidth/2}px + ${(minPercent / 100) * trackWidth}px)` }}\n        >\n          {formatValue(minValue)}\n        </div>\n      )}\n      {showDragBubble && (isMaxDragging || isDragging === 'max') && (\n        <div \n          className=\"absolute bg-[#111] text-white text-xs px-2 py-1 rounded transform -translate-x-1/2 -translate-y-10 [font-family:'SUITE-ExtraBold',Helvetica] font-extrabold pointer-events-none z-40\"\n          style={{ left: `calc(50% - ${trackWidth/2}px + ${(maxPercent / 100) * trackWidth}px)` }}\n        >\n          {formatValue(maxValue)}\n        </div>\n      )}\n    </div>\n  );\n};","size_bytes":8308},"client/src/pages/BusinessAnalysis.tsx":{"content":"import React, { useState, useEffect } from \"react\";\nimport { useLocation, Link } from \"wouter\";\nimport { Button } from \"@/components/ui/button\";\n\ninterface BusinessData {\n  title: string;\n  category: string;\n  categoryColor: string;\n  sections: Array<{\n    title: string;\n    content: string[];\n  }>;\n}\n\nexport const BusinessAnalysis = (): JSX.Element => {\n  const [, setLocation] = useLocation();\n  const [businessData, setBusinessData] = useState<BusinessData | null>(null);\n  const [activeSection, setActiveSection] = useState<number | null>(null);\n  const [showMessage, setShowMessage] = useState(false);\n  const [showToggle, setShowToggle] = useState(false);\n  const [isCardSaved, setIsCardSaved] = useState(false);\n\n  // URL 쿼리 파라미터에서 업종명 추출\n  const urlParams = new URLSearchParams(window.location.search);\n  const businessName = urlParams.get('business') || '';\n\n  // 업종에 따른 카테고리 분류 함수\n  const categorizeBusiness = (business: string): { category: string; categoryColor: string } => {\n    const lower = business.toLowerCase();\n    \n    if (lower.includes(\"카페\") || lower.includes(\"커피\") || lower.includes(\"음식\") || lower.includes(\"국밥\") || lower.includes(\"식당\") || lower.includes(\"레스토랑\") || lower.includes(\"치킨\") || lower.includes(\"피자\") || lower.includes(\"바\") || lower.includes(\"술집\")) {\n      return { category: \"카페/음식\", categoryColor: \"#FA5705\" };\n    } else if (lower.includes(\"뷰티\") || lower.includes(\"미용\") || lower.includes(\"헬스\") || lower.includes(\"피트니스\") || lower.includes(\"복싱\") || lower.includes(\"마사지\") || lower.includes(\"요가\")) {\n      return { category: \"뷰티/웰스\", categoryColor: \"#FF00AE\" };\n    } else if (lower.includes(\"게임\") || lower.includes(\"pc방\") || lower.includes(\"노래방\") || lower.includes(\"볼링\") || lower.includes(\"문화\") || lower.includes(\"체험\") || lower.includes(\"vr\")) {\n      return { category: \"취미/문화\", categoryColor: \"#9D00FF\" };\n    } else if (lower.includes(\"펫\") || lower.includes(\"반려\") || lower.includes(\"키즈\") || lower.includes(\"애견\") || lower.includes(\"아이\") || lower.includes(\"놀이방\")) {\n      return { category: \"키즈/반려\", categoryColor: \"#CCFF00\" };\n    }\n    \n    // 기본값\n    return { category: \"카페/음식\", categoryColor: \"#FA5705\" };\n  };\n\n  // 업종별 비즈니스 데이터 생성\n  const generateBusinessData = (business: string): BusinessData => {\n    const { category, categoryColor } = categorizeBusiness(business);\n    \n    return {\n      title: business,\n      category: category,\n      categoryColor: categoryColor,\n      sections: [\n        {\n          title: \"사업 개요\",\n          content: [\n            `• ${business} 서비스 제공 - 고품질 서비스로 고객 만족도 극대화`,\n            `• 2030 세대 타겟의 트렌디한 공간 - SNS 마케팅 효과가 높은 감성 서비스`,\n            `• 낮은 진입장벽과 높은 수익성 - 초기 비용 대비 안정적인 마진율 확보`,\n            `• 커플 및 친구 그룹 대상 서비스 - 함께 체험할 수 있는 그룹 할인 혜택`,\n            `• 개성 표현 욕구 충족 - 개인 맞춤형 서비스 제공`,\n            `• 지역 커뮤니티 연계 강화 - 단골 고객 확보를 통한 안정적 매출`\n          ]\n        },\n        {\n          title: \"시장분석\",\n          content: [\n            `• ${business} 시장 성장률: 연 12-18% - 전년 대비 지속적인 성장세 유지`,\n            `• 주요 고객층: 20-30대 (75%) - 가처분소득이 높은 핵심 타겟층`,\n            `• 체험형 서비스 수요 증가 - 코로나 이후 개인 맞춤 서비스 선호도 상승`,\n            `• SNS 마케팅 효과 높음 - 인스타그램, 틱톡에서 높은 바이럴 효과`,\n            `• 특별한 날 기념 서비스 - 생일, 기념일 등 특별 이벤트 수요`,\n            `• 지역 상권 활성화 기여 - 유동인구 증가 및 주변 상권 시너지 효과`\n          ]\n        },\n        {\n          title: \"투자 정보\",\n          content: [\n            `• 초기 투자비: 2,200-2,800만원 (인테리어 1,200만원, 장비 700만원, 운영자금 600만원)`,\n            `• 월 임대료: 120-180만원 (보증금 800-1,200만원, 관리비 별도 15-25만원)`,\n            `• 재료비: 월 60-100만원 (주요 소모품, 재료비 등)`,\n            `• 예상 회수기간: 15-20개월 (월 평균 매출 350-450만원 기준)`,\n            `• 월 순이익: 약 140-200만원 (매출 350-450만원 - 비용 210-250만원)`,\n            `• 추가 수익원: 관련 상품 판매, 원데이 클래스 운영, 기업 제휴`\n          ]\n        },\n        {\n          title: \"운영 전략\",\n          content: [\n            `• 주말/공휴일 집중 운영 - 평일 대비 2-3배 높은 매출 집중도`,\n            `• 그룹 패키지 상품 개발 - 2인 이상 할인가 및 기념품 제공`,\n            `• 인스타그램 마케팅 강화 - 인플루언서 협업 및 해시태그 캠페인`,\n            `• 리뷰 이벤트를 통한 홍보 - 포토 리뷰 작성시 다음 방문 할인 쿠폰`,\n            `• 계절별 한정 서비스 출시 - 트렌드에 맞는 시즌 테마 서비스`,\n            `• 기업 및 대학교 이벤트 제휴 - 축제, 동아리 활동 연계 서비스`\n          ]\n        },\n        {\n          title: \"이런 분께 추천해요!\",\n          content: [\n            `• 트렌디한 ${business}를 경험하고 싶은 2030세대`,\n            `• 친구들과 특별한 추억을 만들고 싶은 분`,\n            `• SNS용 감성 사진이 필요한 분`,\n            `• 합리적인 가격으로 새로운 경험을 즐기고 싶은 분`,\n            `• 지역 사회에 기여하는 사업을 원하는 예비 창업자`,\n            `• 안정적인 수익과 성장 가능성을 모두 원하는 분`\n          ]\n        }\n      ]\n    };\n  };\n\n  useEffect(() => {\n    if (businessName) {\n      const data = generateBusinessData(businessName);\n      setBusinessData(data);\n    }\n  }, [businessName]);\n\n  const toggleSection = (index: number) => {\n    setActiveSection(activeSection === index ? null : index);\n  };\n\n  const handleConsultation = () => {\n    setShowMessage(true);\n    setTimeout(() => {\n      setShowMessage(false);\n    }, 800);\n  };\n\n  const handleCardSave = () => {\n    setIsCardSaved(!isCardSaved);\n    setShowToggle(true);\n    setTimeout(() => {\n      setShowToggle(false);\n    }, 3000);\n  };\n\n  const getStarRating = () => {\n    const filledStars = 4; // 기본 4개 별\n\n    return (\n      <div className=\"flex gap-1 items-center\">\n        {[...Array(5)].map((_, i) => (\n          <img \n            key={i}\n            src={i < filledStars ? \"/assets/wh-spot-icon-star-1_1755349260767.png\" : \"/assets/wh-icon-star-2_1755349262727.png\"}\n            alt=\"star\"\n            className=\"w-[18px] h-[18px]\"\n          />\n        ))}\n      </div>\n    );\n  };\n\n  if (!businessData) {\n    return (\n      <div className=\"min-h-screen bg-white flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"text-lg [font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-[#666666]\">\n            로딩중...\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"w-[360px] h-[640px] mx-auto bg-white overflow-hidden\">\n      {/* Header */}\n      <header \n        className=\"w-[360px] h-[169px] px-4 flex items-center justify-between relative overflow-hidden\"\n        style={{ backgroundColor: businessData.categoryColor }}\n      >\n        <Link href=\"/where-is-good\">\n          <Button\n            variant=\"ghost\"\n            size=\"sm\"\n            className=\"p-2 hover:bg-black/10 text-white absolute top-4 left-4 z-10\"\n          >\n            <svg width=\"46\" height=\"46\" viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path d=\"M21.0613 24.9387C21.3431 25.2205 21.5014 25.6027 21.5014 26.0012C21.5014 26.3998 21.3431 26.782 21.0613 27.0637C20.7795 27.3455 20.3973 27.5038 19.9988 27.5038C19.6003 27.5038 19.2181 27.3455 18.9363 27.0637L8.9363 17.0637C8.79646 16.9244 8.6855 16.7588 8.6098 16.5765C8.53409 16.3941 8.49512 16.1987 8.49512 16.0012C8.49512 15.8038 8.53409 15.6083 8.6098 15.426C8.6855 15.2437 8.79646 15.0781 8.9363 14.9387L18.9363 4.93874C19.2181 4.65695 19.6003 4.49864 19.9988 4.49864C20.3973 4.49864 20.7795 4.65695 21.0613 4.93874C21.3431 5.22054 21.5014 5.60273 21.5014 6.00124C21.5014 6.39976 21.3431 6.78195 21.0613 7.06374L12.125 16L21.0613 24.9387Z\" fill=\"white\"/>\n            </svg>\n          </Button>\n        </Link>\n        <div className=\"w-full flex flex-col items-center justify-center text-white\">\n          <div className=\"absolute\" style={{ top: '60px', left: '50%', transform: 'translateX(-50%)' }}>\n            {getStarRating()}\n          </div>\n          <div \n            className=\"[font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-lg text-center text-white\" \n            style={{ \n              marginTop: '79.2px'\n            }}\n          >\n            {businessData.title}\n          </div>\n          <div \n            className=\"[font-family:'SUITE-Medium',Helvetica] font-medium text-xs mt-1 text-white\"\n          >\n            트렌디하지만 편안한 곳 찾았어요!\n          </div>\n        </div>\n      </header>\n\n      {/* Content */}\n      <div className=\"w-[360px] bg-white\" style={{ height: 'calc(640px - 169px)', overflowY: 'auto', marginTop: '20px' }}>\n        {/* Accordion Sections */}\n        <div className=\"px-4 pb-20\">\n          <div className=\"space-y-2\">\n            {businessData.sections.map((section, index) => (\n              <div key={index} className=\"border border-gray-200 overflow-hidden\" style={{ borderRadius: '11px' }}>\n                <button\n                  onClick={() => toggleSection(index)}\n                  className={`w-full p-4 text-left transition-colors duration-200 flex items-center justify-between ${\n                    activeSection === index ? 'text-white' : 'bg-white hover:bg-gray-50'\n                  }`}\n                  style={{\n                    backgroundColor: activeSection === index ? businessData.categoryColor : undefined,\n                    border: activeSection === index ? `1px solid ${businessData.categoryColor}` : '1px solid #e5e7eb',\n                    borderRadius: '11px'\n                  }}\n                >\n                  <span className={`font-extrabold text-lg ${\n                    activeSection === index \n                      ? (businessData.categoryColor === '#CCFF00' \n                          ? '[font-family:\\'SUITE-ExtraBold\\',Helvetica] text-[#17191A]' \n                          : '[font-family:\\'SUITE-ExtraBold\\',Helvetica] text-white') \n                      : '[font-family:\\'SUITE-ExtraBold\\',Helvetica] text-[#333]'\n                  }`}>\n                    {section.title}\n                  </span>\n                  <svg \n                    width=\"20\" \n                    height=\"20\" \n                    viewBox=\"0 0 24 24\" \n                    fill=\"none\" \n                    stroke=\"currentColor\" \n                    strokeWidth=\"2\" \n                    strokeLinecap=\"round\" \n                    strokeLinejoin=\"round\"\n                    className={`transition-transform duration-200 ${activeSection === index ? 'rotate-180' : ''}`}\n                  >\n                    <polyline points=\"6,9 12,15 18,9\"></polyline>\n                  </svg>\n                </button>\n                {activeSection === index && (\n                  <div className=\"p-4 bg-gray-50 border-t border-gray-200\">\n                    <div className=\"space-y-2\">\n                      {section.content.map((item, itemIndex) => (\n                        <div key={itemIndex} className=\"[font-family:'SUITE-Medium',Helvetica] font-medium text-xs text-[#555] leading-relaxed\">\n                          {item}\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                )}\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Bottom Action Buttons */}\n        <div className=\"absolute left-1/2 transform -translate-x-1/2\" style={{ bottom: '56px' }}>\n          <div className=\"flex gap-6\">\n            <button\n              onClick={handleCardSave}\n              className=\"relative overflow-hidden rounded-lg transition-transform hover:scale-105\"\n              style={{ filter: 'drop-shadow(0px 2px 2px rgba(0, 0, 0, 0.25))' }}\n            >\n              <svg width=\"106\" height=\"35\" viewBox=\"0 0 106 35\" fill=\"none\">\n                <rect x=\"1\" y=\"1\" width=\"103.6\" height=\"31.6\" rx=\"5.41339\" fill=\"#00D6F8\" stroke=\"#00D6F8\" strokeWidth=\"2\"/>\n              </svg>\n              <div className=\"absolute inset-0 flex items-center justify-center gap-2\">\n                <svg width=\"25\" height=\"24\" viewBox=\"0 0 25 24\" fill=\"none\">\n                  <path d=\"M16.7876 3.375C14.9042 3.375 13.2326 4.11844 12.1001 5.39625C10.9676 4.11844 9.29604 3.375 7.4126 3.375C5.77218 3.37698 4.19952 4.02952 3.03957 5.18947C1.87962 6.34942 1.22708 7.92208 1.2251 9.5625C1.2251 16.3444 11.1448 21.7631 11.5667 21.9909C11.7306 22.0792 11.9139 22.1254 12.1001 22.1254C12.2863 22.1254 12.4696 22.0792 12.6335 21.9909C13.0554 21.7631 22.9751 16.3444 22.9751 9.5625C22.9731 7.92208 22.3206 6.34942 21.1606 5.18947C20.0007 4.02952 18.428 3.37698 16.7876 3.375ZM16.2729 16.7213C14.9672 17.8292 13.5715 18.8264 12.1001 19.7025C10.6287 18.8264 9.23297 17.8292 7.92728 16.7213C5.89572 14.9784 3.4751 12.3206 3.4751 9.5625C3.4751 8.51821 3.88994 7.51669 4.62836 6.77827C5.36679 6.03984 6.36831 5.625 7.4126 5.625C9.08135 5.625 10.4782 6.50625 11.0585 7.92563C11.143 8.13254 11.2872 8.30961 11.4727 8.43425C11.6582 8.55889 11.8766 8.62545 12.1001 8.62545C12.3236 8.62545 12.542 8.55889 12.7275 8.43425C12.913 8.30961 13.0572 8.13254 13.1417 7.92563C13.722 6.50625 15.1188 5.625 16.7876 5.625C17.8319 5.625 18.8334 6.03984 19.5718 6.77827C20.3103 7.51669 20.7251 8.51821 20.7251 9.5625C20.7251 12.3206 18.3045 14.9784 16.2729 16.7213Z\" fill=\"white\"/>\n                </svg>\n                <span className=\"[font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-white text-base\">\n                  카드저장\n                </span>\n              </div>\n            </button>\n            <button\n              onClick={handleConsultation}\n              className=\"relative overflow-hidden rounded-lg transition-transform hover:scale-105\"\n              style={{ filter: 'drop-shadow(0px 2px 2px rgba(0, 0, 0, 0.25))' }}\n            >\n              <svg width=\"115\" height=\"43\" viewBox=\"0 0 115 43\" fill=\"none\">\n                <rect x=\"4.8\" y=\"4\" width=\"103.6\" height=\"31.6\" rx=\"5.41339\" fill=\"#CCFF00\" stroke=\"#CCFF00\" strokeWidth=\"2\"/>\n              </svg>\n              <div className=\"absolute inset-0 flex items-center justify-center gap-1\">\n                <svg width=\"22\" height=\"22\" viewBox=\"0 0 32 32\" fill=\"none\" className=\"flex-shrink-0\">\n                  <path d=\"M28.985 21.8852C28.7621 23.579 27.9303 25.1338 26.6449 26.2591C25.3595 27.3844 23.7084 28.0033 22 28.0002C12.075 28.0002 4.00001 19.9252 4.00001 10.0002C3.99695 8.29185 4.61587 6.64076 5.74118 5.35535C6.86649 4.06995 8.42122 3.23812 10.115 3.01524C10.5433 2.96294 10.9771 3.05056 11.3515 3.26503C11.7259 3.4795 12.0209 3.80932 12.1925 4.20524L14.8325 10.099V10.114C14.9639 10.4171 15.0181 10.7479 14.9904 11.0771C14.9627 11.4062 14.8539 11.7234 14.6738 12.0002C14.6513 12.034 14.6275 12.0652 14.6025 12.0965L12 15.1815C12.9363 17.084 14.9263 19.0565 16.8538 19.9952L19.8963 17.4065C19.9261 17.3814 19.9574 17.358 19.99 17.3365C20.2666 17.152 20.5849 17.0394 20.916 17.0088C21.2471 16.9783 21.5806 17.0307 21.8863 17.1615L21.9025 17.169L27.7913 19.8077C28.1879 19.9787 28.5185 20.2735 28.7337 20.6479C28.9489 21.0224 28.037 21.4565 28.985 21.8852Z\" fill=\"#17191A\"/>\n                </svg>\n                <span className=\"[font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-[#17191A] text-base\">\n                  상담신청\n                </span>\n              </div>\n            </button>\n          </div>\n        </div>\n\n        {/* Service Message */}\n        {showMessage && (\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n            <div className=\"bg-white rounded-lg p-6 shadow-lg\">\n              <div className=\"[font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-lg text-center text-[#333]\">\n                서비스 준비중입니다\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Toggle Modal */}\n        {showToggle && (\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n            <div className=\"bg-white rounded-2xl p-4\" style={{ width: '242px', height: '147px' }}>\n              <div className=\"text-center space-y-3 h-full flex flex-col justify-between\">\n                <div className=\"space-y-2\">\n                  <div className=\"[font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-[15px] text-[#333] leading-tight\">\n                    마이페이지에서 카드 저장 목록을<br />확인하실 수 있습니다.\n                  </div>\n                  <div className=\"[font-family:'SUITE-Medium',Helvetica] font-medium text-xs text-[#333]\">\n                    마이페이지로 이동할까요?\n                  </div>\n                </div>\n                <div className=\"flex gap-2\">\n                  <button\n                    onClick={() => setShowToggle(false)}\n                    className=\"flex-1 py-2 px-4 bg-gray-100 text-[#333] rounded-lg hover:bg-gray-200 transition-colors [font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-sm\"\n                  >\n                    아니오\n                  </button>\n                  <button\n                    onClick={() => setShowToggle(false)}\n                    className=\"flex-1 py-2 px-4 bg-white text-[#00D6F8] rounded-lg hover:bg-gray-50 transition-colors [font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-sm border border-[#00D6F8]\"\n                  >\n                    예\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n      </div>\n    </div>\n  );\n};","size_bytes":18568}},"version":1}