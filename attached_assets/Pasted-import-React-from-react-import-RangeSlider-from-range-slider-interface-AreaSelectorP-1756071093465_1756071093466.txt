import React from "react";
import { RangeSlider } from "./range-slider";

interface AreaSelectorProps {
  areaMin: number;
  areaMax: number;
  areaUnit: 'sqm' | 'pyeong';
  isDragging: 'min' | 'max' | null;
  onAreaMinChange: (value: number) => void;
  onAreaMaxChange: (value: number) => void;
  onAreaUnitChange: () => void;
  onDragStart: (type: 'min' | 'max') => void;
  onDragEnd: () => void;
  onReset: () => void;
  onApply: () => void;
  onClose: () => void;
}

export const AreaSelector: React.FC<AreaSelectorProps> = ({
  areaMin,
  areaMax,
  areaUnit,
  isDragging,
  onAreaMinChange,
  onAreaMaxChange,
  onAreaUnitChange,
  onDragStart,
  onDragEnd,
  onReset,
  onApply,
  onClose,
}) => {
  const convertToDisplay = (value: number, unit: 'sqm' | 'pyeong') => {
    if (unit === 'sqm') {
      return `${value}㎡`;
    } else {
      return `${Math.round((value / 3.305785) * 10) / 10}평`;
    }
  };

  const getDisplayRange = () => {
    // 전체 범위인지 확인
    if (areaMin === 33 && areaMax === 330) {
      return "전체";
    }
    
    // 단위에 따른 변환
    if (areaUnit === 'sqm') {
      return `${areaMin}㎡ ~ ${areaMax}㎡`;
    } else {
      const minPyeong = Math.round((areaMin / 3.305785) * 10) / 10;
      const maxPyeong = Math.round((areaMax / 3.305785) * 10) / 10;
      return `${minPyeong}평 ~ ${maxPyeong}평`;
    }
  };

  return (
    <div className="p-4">
      {/* Header */}
      <div className="flex justify-between items-center mb-3">
        <div className="flex items-center">
          <h3 className="[font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-base text-[#111]">
            면적(적용면적)
          </h3>
          <button 
            onClick={onAreaUnitChange}
            className="ml-1 hover:opacity-80 transition-opacity flex items-center gap-1"
            style={{ marginLeft: '6px' }}
          >
            <img 
              src="/assets/wh-icon-13_1755370522921.png" 
              alt="conversion icon" 
              width="18" 
              height="18" 
            />
            <span className="[font-family:'SUITE-Medium',Helvetica] font-medium text-sm underline" style={{ color: '#8E8E8E' }}>
              평 변환
            </span>
          </button>
        </div>
        <span 
          className="text-sm text-[#00E6FF] [font-family:'SUITE-ExtraBold',Helvetica] font-extrabold cursor-pointer" 
          onClick={() => {
            onAreaMinChange(33);
            onAreaMaxChange(330);
          }}
        >
          {getDisplayRange()}
        </span>
      </div>

      {/* Range Slider */}
      <RangeSlider
        min={33}
        max={330}
        minValue={areaMin}
        maxValue={areaMax}
        onMinChange={onAreaMinChange}
        onMaxChange={onAreaMaxChange}
        onDragStart={onDragStart}
        onDragEnd={onDragEnd}
        isDragging={isDragging}
        minGap={36}
        formatValue={(value) => 
          areaUnit === 'sqm' 
            ? `${value}㎡${isDragging === 'min' ? '부터' : isDragging === 'max' ? '까지' : ''}` 
            : `${Math.round((value/3.305785)*10)/10}평${isDragging === 'min' ? '부터' : isDragging === 'max' ? '까지' : ''}`
        }
        showDragBubble={true}
        handleImage="/assets/wh-icon-12_1755367755885.png"
      />

      {/* Tick Labels */}
      <div 
        className="flex justify-between text-xs text-[#777] [font-family:'SUITE-Medium',Helvetica] font-medium px-1" 
        style={{ marginTop: '-4px' }}
      >
        <span>최소</span>
        <span>{areaUnit === 'sqm' ? '66㎡' : '20평'}</span>
        <span>{areaUnit === 'sqm' ? '165㎡' : '50평'}</span>
        <span>최대</span>
      </div>

      {/* Bottom Buttons */}
      <div className="flex gap-3" style={{ marginTop: '36px' }}>
        <button
          onClick={onReset}
          className="bg-transparent text-[#444] [font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-sm hover:bg-gray-50 rounded-lg transition-colors" 
          style={{ 
            flex: '0.9', 
            paddingLeft: '19px', 
            paddingRight: '19px', 
            paddingTop: '11px', 
            paddingBottom: '11px' 
          }}
        >
          초기화
        </button>
        <button
          onClick={onApply}
          className="bg-[#00E6FF] text-white [font-family:'SUITE-ExtraBold',Helvetica] font-extrabold text-sm hover:bg-[#00D6F8] rounded-lg transition-colors" 
          style={{ 
            flex: '1.1', 
            paddingLeft: '19px', 
            paddingRight: '19px', 
            paddingTop: '11px', 
            paddingBottom: '11px' 
          }}
        >
          적용하기
        </button>
      </div>
    </div>
  );
};